{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u8bbf\u95ee \u672c\u535a\u5ba2\u4f7f\u7528\u5de5\u5177\uff1a mkdocs+typora+gitee \u672c\u535a\u5ba2\u535a\u4e3b\u90ae\u7bb1\uff1a 6898786@gmail.com \u672c\u535a\u5ba2\u4e3b\u8981\u7528\u9014\uff1a \u5206\u4eab\u3001\u8bb0\u5f55","title":"\u6b22\u8fce\u8bbf\u95ee"},{"location":"#_1","text":"\u672c\u535a\u5ba2\u4f7f\u7528\u5de5\u5177\uff1a mkdocs+typora+gitee \u672c\u535a\u5ba2\u535a\u4e3b\u90ae\u7bb1\uff1a 6898786@gmail.com \u672c\u535a\u5ba2\u4e3b\u8981\u7528\u9014\uff1a \u5206\u4eab\u3001\u8bb0\u5f55","title":"\u6b22\u8fce\u8bbf\u95ee"},{"location":"about/","text":"\u5173\u4e8e\u6211 \u54b3\u54b3\uff0c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u8bf4\u3002\u3002\u3002","title":"\u5173\u4e8e"},{"location":"about/#_1","text":"\u54b3\u54b3\uff0c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u8bf4\u3002\u3002\u3002","title":"\u5173\u4e8e\u6211"},{"location":"git\u624b\u518c/","text":"git\u624b\u518c \u6682\u5b58 git stash save {\u6682\u5b58\u8bf4\u660e} git stash list \u67e5\u770b\u6240\u6709\u6682\u5b58 git stash apply {\u6682\u5b58\u540d} \u5e94\u7528\u6682\u5b58 \u64a4\u9500 git reset \u2014mixed\uff1a\u6b64\u4e3a\u9ed8\u8ba4\u65b9\u5f0f\uff0c\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684git reset\uff0c\u5373\u65f6\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5b83\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u4fdd\u7559\u6e90\u7801\uff0c\u56de\u9000commit\u548cindex\u4fe1\u606f git reset \u2014soft\uff1a\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u56de\u9000\u4e86commit\u7684\u4fe1\u606f\uff0c\u4e0d\u4f1a\u6062\u590d\u5230index file\u4e00\u7ea7\u3002\u5982\u679c\u8fd8\u8981\u63d0\u4ea4\uff0c\u76f4\u63a5commit\u5373\u53ef git reset \u2014hard\uff1a\u5f7b\u5e95\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u672c\u5730\u7684\u6e90\u7801\u4e5f\u4f1a\u53d8\u4e3a\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5185\u5bb9\uff0c\u614e\u7528\uff01 \u5bf9\u6bd4\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u65e5\u5fd7 git log {branch} ^origin/{branch} \u67e5\u770b\u672a\u63a8\u9001\u7684\u63d0\u4ea4 git log origin/{branch} \u67e5\u770b\u8fdc\u7a0b\u65e5\u5fd7 git log {branch} \u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730 git checkout -b {branchname} origin/{branchname} \u67e5\u770b\u6307\u5b9a\u5206\u652f\u65e5\u5fd7 git show {commitid} \u67e5\u770b\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2 git log -p {filename} \u6253tag git tag -a {tagname} -m {message} {commitid}\u5bf9\u67d0\u6b21\u63d0\u4ea4\u6253tag git tag \u67e5\u770b\u6240\u6709\u6807\u7b7e git show {tagname} \u67e5\u770b\u6807\u7b7e\u4fe1\u606f \u63cf\u8ff0 git branch \u2014edit-description {branchname} \u5220\u9664\u8fdc\u7a0b\u5206\u652f git branch -d {branchname} \u5220\u9664\u672c\u5730\u5206\u652f git push origin \u2014delete {branchname}","title":"git\u624b\u518c"},{"location":"git\u624b\u518c/#git","text":"","title":"git\u624b\u518c"},{"location":"git\u624b\u518c/#_1","text":"git stash save {\u6682\u5b58\u8bf4\u660e} git stash list \u67e5\u770b\u6240\u6709\u6682\u5b58 git stash apply {\u6682\u5b58\u540d} \u5e94\u7528\u6682\u5b58","title":"\u6682\u5b58"},{"location":"git\u624b\u518c/#_2","text":"git reset \u2014mixed\uff1a\u6b64\u4e3a\u9ed8\u8ba4\u65b9\u5f0f\uff0c\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684git reset\uff0c\u5373\u65f6\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5b83\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u4fdd\u7559\u6e90\u7801\uff0c\u56de\u9000commit\u548cindex\u4fe1\u606f git reset \u2014soft\uff1a\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u56de\u9000\u4e86commit\u7684\u4fe1\u606f\uff0c\u4e0d\u4f1a\u6062\u590d\u5230index file\u4e00\u7ea7\u3002\u5982\u679c\u8fd8\u8981\u63d0\u4ea4\uff0c\u76f4\u63a5commit\u5373\u53ef git reset \u2014hard\uff1a\u5f7b\u5e95\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u672c\u5730\u7684\u6e90\u7801\u4e5f\u4f1a\u53d8\u4e3a\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5185\u5bb9\uff0c\u614e\u7528\uff01","title":"\u64a4\u9500"},{"location":"git\u624b\u518c/#_3","text":"git log {branch} ^origin/{branch} \u67e5\u770b\u672a\u63a8\u9001\u7684\u63d0\u4ea4 git log origin/{branch} \u67e5\u770b\u8fdc\u7a0b\u65e5\u5fd7 git log {branch}","title":"\u5bf9\u6bd4\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u65e5\u5fd7"},{"location":"git\u624b\u518c/#_4","text":"git checkout -b {branchname} origin/{branchname}","title":"\u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730"},{"location":"git\u624b\u518c/#_5","text":"git show {commitid}","title":"\u67e5\u770b\u6307\u5b9a\u5206\u652f\u65e5\u5fd7"},{"location":"git\u624b\u518c/#_6","text":"git log -p {filename}","title":"\u67e5\u770b\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2"},{"location":"git\u624b\u518c/#tag","text":"git tag -a {tagname} -m {message} {commitid}\u5bf9\u67d0\u6b21\u63d0\u4ea4\u6253tag git tag \u67e5\u770b\u6240\u6709\u6807\u7b7e git show {tagname} \u67e5\u770b\u6807\u7b7e\u4fe1\u606f","title":"\u6253tag"},{"location":"git\u624b\u518c/#_7","text":"git branch \u2014edit-description {branchname}","title":"\u63cf\u8ff0"},{"location":"git\u624b\u518c/#_8","text":"git branch -d {branchname} \u5220\u9664\u672c\u5730\u5206\u652f git push origin \u2014delete {branchname}","title":"\u5220\u9664\u8fdc\u7a0b\u5206\u652f"},{"location":"mkdocs\u6ce8\u610f\u4e8b\u9879/","text":"mkdocs\u6ce8\u610f\u4e8b\u9879 \u6587\u6863\u76ee\u5f55\u914d\u7f6e site_name: \u6587\u6863 pages: - \u4e3b\u9875: index.md - \u5de5\u4f5c: [md1.md,md2.md] - \u5173\u4e8e: about.md \u81ea\u5e26\u4e3b\u9898\u4fee\u6539 \u4fee\u6539mkdocs\u81ea\u5e26\u7684\u4e3b\u9898 \u590d\u5236mkdocs\u7684\u4e3b\u9898\u6587\u4ef6\u5939\u81f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u6587\u4ef6\u5939custom_theme\u4e0b \u4fee\u6539\u9879\u76ee\u914d\u7f6e\u6587\u4ef6mkdocs.yml theme: name: 'mkdocs' custom_dir: 'custom_theme' \u4fee\u6539custom_theme/main.html\uff0c\u6bd4\u5982\u8981\u4fee\u6539\u5e95\u90e8\u7684\u201cDocumentation built with MkDocs\u201d {%- block footer %} <hr> {%- if config.copyright %} <p>{{ config.copyright }}</p> {%- endif %} <!--<p>Documentation built with <a href=\"https://www.mkdocs.org/\">MkDocs</a>.</p>--> {%- endblock %} \u6dfb\u52a0\u6d41\u7a0b\u56fe\u652f\u6301 \u5b89\u88c5pymdown-extensions\u6269\u5c55 pip install pymdown-extensions \u6dfb\u52a0umlconvert.js\u81f3docs/js\u4e0b\uff0c\u5185\u5bb9\u5982\u4e0b (function () { 'use strict'; /** * Targets special code or div blocks and converts them to UML. * @param {object} converter is the object that transforms the text to UML. * @param {string} className is the name of the class to target. * @param {object} settings is the settings for converter. * @return {void} */ var uml = (function (converter, className, settings) { var getFromCode = function getFromCode(parent) { // Handles <pre><code> var text = \"\"; for (var j = 0; j < parent.childNodes.length; j++) { var subEl = parent.childNodes[j]; if (subEl.tagName.toLowerCase() === \"code\") { for (var k = 0; k < subEl.childNodes.length; k++) { var child = subEl.childNodes[k]; var whitespace = /^\\s*$/; if (child.nodeName === \"#text\" && !whitespace.test(child.nodeValue)) { text = child.nodeValue; break; } } } } return text; }; var getFromDiv = function getFromDiv(parent) { // Handles <div> return parent.textContent || parent.innerText; }; // Change article to whatever element your main Markdown content lives. var article = document.querySelectorAll(\"article\"); var blocks = document.querySelectorAll(\"pre.\" + className + \",div.\" + className // Is there a settings object? );var config = settings === void 0 ? {} : settings; // Find the UML source element and get the text for (var i = 0; i < blocks.length; i++) { var parentEl = blocks[i]; var el = document.createElement(\"div\"); el.className = className; el.style.visibility = \"hidden\"; el.style.position = \"absolute\"; var text = parentEl.tagName.toLowerCase() === \"pre\" ? getFromCode(parentEl) : getFromDiv(parentEl) // Insert our new div at the end of our content to get general // typset and page sizes as our parent might be `display:none` // keeping us from getting the right sizes for our SVG. // Our new div will be hidden via \"visibility\" and take no space // via `poistion: absolute`. When we are all done, use the // original node as a reference to insert our SVG back // into the proper place, and then make our SVG visilbe again. // Lastly, clean up the old node. ; article[0].appendChild(el); var diagram = converter.parse(text); diagram.drawSVG(el, config); el.style.visibility = \"visible\"; el.style.position = \"static\"; parentEl.parentNode.insertBefore(el, parentEl); parentEl.parentNode.removeChild(parentEl); } }); (function () { var onReady = function onReady(fn) { if (document.addEventListener) { document.addEventListener(\"DOMContentLoaded\", fn); } else { document.attachEvent(\"onreadystatechange\", function () { if (document.readyState === \"interactive\") { fn(); } }); } }; onReady(function () { if (typeof flowchart !== \"undefined\") { uml(flowchart, \"uml-flowchart\"); } if (typeof Diagram !== \"undefined\") { uml(Diagram, \"uml-sequence-diagram\", { theme: \"simple\" }); } }); })(); }()); \u914d\u7f6e extra_javascript: - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' - 'https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js' - 'js/umlconvert.js' markdown_extensions: - pymdownx.superfences custom_fences: name: flow class: uml-flowchart format: !!python/name:pymdownx.superfences.fence_code_format \u6548\u679c\u5c55\u793a\uff1a markdown\u6e90\u7801 \u200b```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u200b``` \u663e\u793a\u6548\u679c st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u6ce8\u610f\uff1a\u53ef\u4ee5\u67e5\u770b\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u6d41\u7a0b\u56fe\u56fe\u7247\uff0c\u6d41\u7a0b\u56fe\u56fe\u7247\u7531js\u751f\u6210","title":"mkdocs\u6ce8\u610f\u4e8b\u9879"},{"location":"mkdocs\u6ce8\u610f\u4e8b\u9879/#mkdocs","text":"","title":"mkdocs\u6ce8\u610f\u4e8b\u9879"},{"location":"mkdocs\u6ce8\u610f\u4e8b\u9879/#_1","text":"site_name: \u6587\u6863 pages: - \u4e3b\u9875: index.md - \u5de5\u4f5c: [md1.md,md2.md] - \u5173\u4e8e: about.md","title":"\u6587\u6863\u76ee\u5f55\u914d\u7f6e"},{"location":"mkdocs\u6ce8\u610f\u4e8b\u9879/#_2","text":"\u4fee\u6539mkdocs\u81ea\u5e26\u7684\u4e3b\u9898 \u590d\u5236mkdocs\u7684\u4e3b\u9898\u6587\u4ef6\u5939\u81f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u6587\u4ef6\u5939custom_theme\u4e0b \u4fee\u6539\u9879\u76ee\u914d\u7f6e\u6587\u4ef6mkdocs.yml theme: name: 'mkdocs' custom_dir: 'custom_theme' \u4fee\u6539custom_theme/main.html\uff0c\u6bd4\u5982\u8981\u4fee\u6539\u5e95\u90e8\u7684\u201cDocumentation built with MkDocs\u201d {%- block footer %} <hr> {%- if config.copyright %} <p>{{ config.copyright }}</p> {%- endif %} <!--<p>Documentation built with <a href=\"https://www.mkdocs.org/\">MkDocs</a>.</p>--> {%- endblock %}","title":"\u81ea\u5e26\u4e3b\u9898\u4fee\u6539"},{"location":"mkdocs\u6ce8\u610f\u4e8b\u9879/#_3","text":"\u5b89\u88c5pymdown-extensions\u6269\u5c55 pip install pymdown-extensions \u6dfb\u52a0umlconvert.js\u81f3docs/js\u4e0b\uff0c\u5185\u5bb9\u5982\u4e0b (function () { 'use strict'; /** * Targets special code or div blocks and converts them to UML. * @param {object} converter is the object that transforms the text to UML. * @param {string} className is the name of the class to target. * @param {object} settings is the settings for converter. * @return {void} */ var uml = (function (converter, className, settings) { var getFromCode = function getFromCode(parent) { // Handles <pre><code> var text = \"\"; for (var j = 0; j < parent.childNodes.length; j++) { var subEl = parent.childNodes[j]; if (subEl.tagName.toLowerCase() === \"code\") { for (var k = 0; k < subEl.childNodes.length; k++) { var child = subEl.childNodes[k]; var whitespace = /^\\s*$/; if (child.nodeName === \"#text\" && !whitespace.test(child.nodeValue)) { text = child.nodeValue; break; } } } } return text; }; var getFromDiv = function getFromDiv(parent) { // Handles <div> return parent.textContent || parent.innerText; }; // Change article to whatever element your main Markdown content lives. var article = document.querySelectorAll(\"article\"); var blocks = document.querySelectorAll(\"pre.\" + className + \",div.\" + className // Is there a settings object? );var config = settings === void 0 ? {} : settings; // Find the UML source element and get the text for (var i = 0; i < blocks.length; i++) { var parentEl = blocks[i]; var el = document.createElement(\"div\"); el.className = className; el.style.visibility = \"hidden\"; el.style.position = \"absolute\"; var text = parentEl.tagName.toLowerCase() === \"pre\" ? getFromCode(parentEl) : getFromDiv(parentEl) // Insert our new div at the end of our content to get general // typset and page sizes as our parent might be `display:none` // keeping us from getting the right sizes for our SVG. // Our new div will be hidden via \"visibility\" and take no space // via `poistion: absolute`. When we are all done, use the // original node as a reference to insert our SVG back // into the proper place, and then make our SVG visilbe again. // Lastly, clean up the old node. ; article[0].appendChild(el); var diagram = converter.parse(text); diagram.drawSVG(el, config); el.style.visibility = \"visible\"; el.style.position = \"static\"; parentEl.parentNode.insertBefore(el, parentEl); parentEl.parentNode.removeChild(parentEl); } }); (function () { var onReady = function onReady(fn) { if (document.addEventListener) { document.addEventListener(\"DOMContentLoaded\", fn); } else { document.attachEvent(\"onreadystatechange\", function () { if (document.readyState === \"interactive\") { fn(); } }); } }; onReady(function () { if (typeof flowchart !== \"undefined\") { uml(flowchart, \"uml-flowchart\"); } if (typeof Diagram !== \"undefined\") { uml(Diagram, \"uml-sequence-diagram\", { theme: \"simple\" }); } }); })(); }()); \u914d\u7f6e extra_javascript: - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' - 'https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js' - 'js/umlconvert.js' markdown_extensions: - pymdownx.superfences custom_fences: name: flow class: uml-flowchart format: !!python/name:pymdownx.superfences.fence_code_format \u6548\u679c\u5c55\u793a\uff1a markdown\u6e90\u7801 \u200b```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u200b``` \u663e\u793a\u6548\u679c st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u6ce8\u610f\uff1a\u53ef\u4ee5\u67e5\u770b\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u6d41\u7a0b\u56fe\u56fe\u7247\uff0c\u6d41\u7a0b\u56fe\u56fe\u7247\u7531js\u751f\u6210","title":"\u6dfb\u52a0\u6d41\u7a0b\u56fe\u652f\u6301"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/","text":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5 \u5b89\u88c5 \u53c2\u8003zsh\u5b98\u7f51https://ohmyz.sh/ \u4ecebash\u5207\u6362\u5230zsh chsh -s /bin/zsh \u5b89\u88c5power line pip3 install powerline-status --user \u5b89\u88c5PowerLine pip install powerline-status --user \u5b89\u88c5PowerFonts # git clone git clone https://github.com/powerline/fonts.git --depth=1 # cd to folder cd fonts # run install shell ./install.sh \u5b89\u88c5\u597d\u5b57\u4f53\u5e93\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u8bbe\u7f6eiTerm2\u7684\u5b57\u4f53\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u662fiTerm2 -> Preferences -> Profiles -> Text\uff0c\u5728Font\u533a\u57df\u9009\u4e2dChange Font\uff0c\u7136\u540e\u627e\u5230Meslo LG\u5b57\u4f53\u3002\u6709L\u3001M\u3001S \u5b89\u88c5\u914d\u8272\u65b9\u6848 cd ~/Desktop/OpenSource git clone https://github.com/altercation/solarized cd solarized/iterm2-colors-solarized/ open . \u5728\u6253\u5f00\u7684finder\u7a97\u53e3\u4e2d\uff0c\u53cc\u51fbSolarized Dark.itermcolors\u548cSolarized Light.itermcolors\u5373\u53ef\u5b89\u88c5\u660e\u6697\u4e24\u79cd\u914d\u8272 \u518d\u6b21\u8fdb\u5165iTerm2 -> Preferences -> Profiles -> Colors -> Color Presets\u4e2d\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9\u8fd9\u4e24\u79cd\u914d\u8272\u4e2d\u7684\u4e00\u79cd\u5373\u53ef \u5b89\u88c5\u4e3b\u9898 cd ~/Desktop/OpenSource git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git cd oh-my-zsh-agnoster-fcamblor/ ./install \u5b8c\u6210\u540e\uff0c\u6267\u884c\u547d\u4ee4\u6253\u5f00zshrc\u914d\u7f6e\u6587\u4ef6\uff0c\u5c06ZSH_THEME\u540e\u9762\u7684\u5b57\u6bb5\u6539\u4e3aagnoster\u3002 vi ~/.zshrc \u5b89\u88c5\u9ad8\u4eae\u63d2\u4ef6 cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git vi ~/.zshrc \u8fd9\u65f6\u6211\u4eec\u518d\u6b21\u6253\u5f00zshrc\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\u3002\u627e\u5230plugins\uff0c\u6b64\u65f6plugins\u4e2d\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86git\uff0c\u6211\u4eec\u9700\u8981\u628a\u9ad8\u4eae\u63d2\u4ef6\u4e5f\u52a0\u4e0a\uff1a plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u63d2\u4ef6\u987a\u5e8f\uff0czsh-syntax-highlighting\u5fc5\u987b\u5728\u6700\u540e\u4e00\u4e2a\u3002 \u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u6dfb\u52a0\uff1asource ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh \u5b89\u88c5\u8865\u5168\u63d2\u4ef6zsh-autosuggestion \u4e0e\u9ad8\u4eae\u63d2\u4ef6\u540c\u6837\u7684\u5b89\u88c5\u65b9\u5f0f zsh\u8fdc\u7a0b\u767b\u5f55\u6587\u4ef6\u4e71\u7801\u95ee\u9898\u89e3\u51b3 \u5728~/.zshrc\u6587\u4ef6\u5c3e\u90e8\u6dfb\u52a0 export LC_ALL=en_US.UTF-8 export LANG=en_US.UTF-8","title":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#zsh","text":"","title":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#_1","text":"\u53c2\u8003zsh\u5b98\u7f51https://ohmyz.sh/","title":"\u5b89\u88c5"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#bashzsh","text":"chsh -s /bin/zsh","title":"\u4ecebash\u5207\u6362\u5230zsh"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#power-line","text":"pip3 install powerline-status --user","title":"\u5b89\u88c5power line"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#powerline","text":"pip install powerline-status --user","title":"\u5b89\u88c5PowerLine"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#powerfonts","text":"# git clone git clone https://github.com/powerline/fonts.git --depth=1 # cd to folder cd fonts # run install shell ./install.sh \u5b89\u88c5\u597d\u5b57\u4f53\u5e93\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u8bbe\u7f6eiTerm2\u7684\u5b57\u4f53\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u662fiTerm2 -> Preferences -> Profiles -> Text\uff0c\u5728Font\u533a\u57df\u9009\u4e2dChange Font\uff0c\u7136\u540e\u627e\u5230Meslo LG\u5b57\u4f53\u3002\u6709L\u3001M\u3001S","title":"\u5b89\u88c5PowerFonts"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#_2","text":"cd ~/Desktop/OpenSource git clone https://github.com/altercation/solarized cd solarized/iterm2-colors-solarized/ open . \u5728\u6253\u5f00\u7684finder\u7a97\u53e3\u4e2d\uff0c\u53cc\u51fbSolarized Dark.itermcolors\u548cSolarized Light.itermcolors\u5373\u53ef\u5b89\u88c5\u660e\u6697\u4e24\u79cd\u914d\u8272 \u518d\u6b21\u8fdb\u5165iTerm2 -> Preferences -> Profiles -> Colors -> Color Presets\u4e2d\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9\u8fd9\u4e24\u79cd\u914d\u8272\u4e2d\u7684\u4e00\u79cd\u5373\u53ef","title":"\u5b89\u88c5\u914d\u8272\u65b9\u6848"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#_3","text":"cd ~/Desktop/OpenSource git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git cd oh-my-zsh-agnoster-fcamblor/ ./install \u5b8c\u6210\u540e\uff0c\u6267\u884c\u547d\u4ee4\u6253\u5f00zshrc\u914d\u7f6e\u6587\u4ef6\uff0c\u5c06ZSH_THEME\u540e\u9762\u7684\u5b57\u6bb5\u6539\u4e3aagnoster\u3002 vi ~/.zshrc","title":"\u5b89\u88c5\u4e3b\u9898"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#_4","text":"cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git vi ~/.zshrc \u8fd9\u65f6\u6211\u4eec\u518d\u6b21\u6253\u5f00zshrc\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\u3002\u627e\u5230plugins\uff0c\u6b64\u65f6plugins\u4e2d\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86git\uff0c\u6211\u4eec\u9700\u8981\u628a\u9ad8\u4eae\u63d2\u4ef6\u4e5f\u52a0\u4e0a\uff1a plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u63d2\u4ef6\u987a\u5e8f\uff0czsh-syntax-highlighting\u5fc5\u987b\u5728\u6700\u540e\u4e00\u4e2a\u3002 \u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u6dfb\u52a0\uff1asource ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh","title":"\u5b89\u88c5\u9ad8\u4eae\u63d2\u4ef6"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#zsh-autosuggestion","text":"\u4e0e\u9ad8\u4eae\u63d2\u4ef6\u540c\u6837\u7684\u5b89\u88c5\u65b9\u5f0f","title":"\u5b89\u88c5\u8865\u5168\u63d2\u4ef6zsh-autosuggestion"},{"location":"zsh\u5b89\u88c5\u8c03\u8bd5/#zsh_1","text":"\u5728~/.zshrc\u6587\u4ef6\u5c3e\u90e8\u6dfb\u52a0 export LC_ALL=en_US.UTF-8 export LANG=en_US.UTF-8","title":"zsh\u8fdc\u7a0b\u767b\u5f55\u6587\u4ef6\u4e71\u7801\u95ee\u9898\u89e3\u51b3"}]}