{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u8bbf\u95ee __\u672c\u535a\u5ba2\u4f7f\u7528\u5de5\u5177\uff1a__mkdocs+typora+github __\u672c\u535a\u5ba2\u4e3b\u8981\u7528\u9014\uff1a__\u5206\u4eab\u3001\u8bb0\u5f55","title":"\u6b22\u8fce\u8bbf\u95ee"},{"location":"#_1","text":"__\u672c\u535a\u5ba2\u4f7f\u7528\u5de5\u5177\uff1a__mkdocs+typora+github __\u672c\u535a\u5ba2\u4e3b\u8981\u7528\u9014\uff1a__\u5206\u4eab\u3001\u8bb0\u5f55","title":"\u6b22\u8fce\u8bbf\u95ee"},{"location":"about/","text":"\u5173\u4e8e\u6211 \u54b3\u54b3\uff0c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u8bf4\u3002\u3002\u3002","title":"\u5173\u4e8e"},{"location":"about/#_1","text":"\u54b3\u54b3\uff0c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u8bf4\u3002\u3002\u3002","title":"\u5173\u4e8e\u6211"},{"location":"docker/","text":"docker \u5220\u9664\u955c\u50cf docker image rm imagename \u5220\u9664\u5bb9\u5668 docker container rm containerid \u5217\u51fa\u6240\u6709\u5bb9\u5668 docker container list -a \u5217\u51fa\u6240\u6709\u955c\u50cf docker images \u91cd\u542f\u5bb9\u5668 docker container restart containerid \u542f\u52a8\u955c\u50cf # mysql docker run --name mysql5.7 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7 # php-fpm docker run -d --name php:7.0-fpm -p 9000:9000 php:7.0-fpm","title":"docker"},{"location":"docker/#docker","text":"","title":"docker"},{"location":"docker/#_1","text":"docker image rm imagename","title":"\u5220\u9664\u955c\u50cf"},{"location":"docker/#_2","text":"docker container rm containerid","title":"\u5220\u9664\u5bb9\u5668"},{"location":"docker/#_3","text":"docker container list -a","title":"\u5217\u51fa\u6240\u6709\u5bb9\u5668"},{"location":"docker/#_4","text":"docker images","title":"\u5217\u51fa\u6240\u6709\u955c\u50cf"},{"location":"docker/#_5","text":"docker container restart containerid","title":"\u91cd\u542f\u5bb9\u5668"},{"location":"docker/#_6","text":"# mysql docker run --name mysql5.7 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7 # php-fpm docker run -d --name php:7.0-fpm -p 9000:9000 php:7.0-fpm","title":"\u542f\u52a8\u955c\u50cf"},{"location":"git/","text":"git \u6682\u5b58 git stash save {\u6682\u5b58\u8bf4\u660e} git stash list \u67e5\u770b\u6240\u6709\u6682\u5b58 git stash apply {\u6682\u5b58\u540d} \u5e94\u7528\u6682\u5b58 \u64a4\u9500 git reset \u2014mixed\uff1a\u6b64\u4e3a\u9ed8\u8ba4\u65b9\u5f0f\uff0c\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684git reset\uff0c\u5373\u65f6\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5b83\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u4fdd\u7559\u6e90\u7801\uff0c\u56de\u9000commit\u548cindex\u4fe1\u606f git reset \u2014soft\uff1a\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u56de\u9000\u4e86commit\u7684\u4fe1\u606f\uff0c\u4e0d\u4f1a\u6062\u590d\u5230index file\u4e00\u7ea7\u3002\u5982\u679c\u8fd8\u8981\u63d0\u4ea4\uff0c\u76f4\u63a5commit\u5373\u53ef git reset \u2014hard\uff1a\u5f7b\u5e95\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u672c\u5730\u7684\u6e90\u7801\u4e5f\u4f1a\u53d8\u4e3a\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5185\u5bb9\uff0c\u614e\u7528\uff01 \u5bf9\u6bd4\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u65e5\u5fd7 git log {branch} ^origin/{branch} \u67e5\u770b\u672a\u63a8\u9001\u7684\u63d0\u4ea4 git log origin/{branch} \u67e5\u770b\u8fdc\u7a0b\u65e5\u5fd7 git log {branch} \u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730 git checkout -b {branchname} origin/{branchname} \u67e5\u770b\u6307\u5b9a\u5206\u652f\u65e5\u5fd7 git show {commitid} \u67e5\u770b\u67d0\u4e2a\u6587\u4ef6\u6700\u8fd1n\u6b21\u7684\u4fee\u6539\u5386\u53f2 git log -p {filename} -n \u67e5\u770b\u7248\u672c\u5386\u53f2\u56fe git log --graph \u6253tag git tag -a {tagname} -m {message} {commitid}\u5bf9\u67d0\u6b21\u63d0\u4ea4\u6253tag git tag \u67e5\u770b\u6240\u6709\u6807\u7b7e git show {tagname} \u67e5\u770b\u6807\u7b7e\u4fe1\u606f \u63cf\u8ff0 git branch \u2014edit-description {branchname} \u5220\u9664\u8fdc\u7a0b\u5206\u652f git branch -d {branchname} \u5220\u9664\u672c\u5730\u5206\u652f git push origin \u2014delete {branchname} ssh\u516c\u94a5\u514d\u5bc6\u7801 ssh-add ~/.ssh/id_rsa","title":"git"},{"location":"git/#git","text":"","title":"git"},{"location":"git/#_1","text":"git stash save {\u6682\u5b58\u8bf4\u660e} git stash list \u67e5\u770b\u6240\u6709\u6682\u5b58 git stash apply {\u6682\u5b58\u540d} \u5e94\u7528\u6682\u5b58","title":"\u6682\u5b58"},{"location":"git/#_2","text":"git reset \u2014mixed\uff1a\u6b64\u4e3a\u9ed8\u8ba4\u65b9\u5f0f\uff0c\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684git reset\uff0c\u5373\u65f6\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5b83\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u4fdd\u7559\u6e90\u7801\uff0c\u56de\u9000commit\u548cindex\u4fe1\u606f git reset \u2014soft\uff1a\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u56de\u9000\u4e86commit\u7684\u4fe1\u606f\uff0c\u4e0d\u4f1a\u6062\u590d\u5230index file\u4e00\u7ea7\u3002\u5982\u679c\u8fd8\u8981\u63d0\u4ea4\uff0c\u76f4\u63a5commit\u5373\u53ef git reset \u2014hard\uff1a\u5f7b\u5e95\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u672c\u5730\u7684\u6e90\u7801\u4e5f\u4f1a\u53d8\u4e3a\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5185\u5bb9\uff0c\u614e\u7528\uff01","title":"\u64a4\u9500"},{"location":"git/#_3","text":"git log {branch} ^origin/{branch} \u67e5\u770b\u672a\u63a8\u9001\u7684\u63d0\u4ea4 git log origin/{branch} \u67e5\u770b\u8fdc\u7a0b\u65e5\u5fd7 git log {branch}","title":"\u5bf9\u6bd4\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u65e5\u5fd7"},{"location":"git/#_4","text":"git checkout -b {branchname} origin/{branchname}","title":"\u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730"},{"location":"git/#_5","text":"git show {commitid}","title":"\u67e5\u770b\u6307\u5b9a\u5206\u652f\u65e5\u5fd7"},{"location":"git/#n","text":"git log -p {filename} -n","title":"\u67e5\u770b\u67d0\u4e2a\u6587\u4ef6\u6700\u8fd1n\u6b21\u7684\u4fee\u6539\u5386\u53f2"},{"location":"git/#_6","text":"git log --graph","title":"\u67e5\u770b\u7248\u672c\u5386\u53f2\u56fe"},{"location":"git/#tag","text":"git tag -a {tagname} -m {message} {commitid}\u5bf9\u67d0\u6b21\u63d0\u4ea4\u6253tag git tag \u67e5\u770b\u6240\u6709\u6807\u7b7e git show {tagname} \u67e5\u770b\u6807\u7b7e\u4fe1\u606f","title":"\u6253tag"},{"location":"git/#_7","text":"git branch \u2014edit-description {branchname}","title":"\u63cf\u8ff0"},{"location":"git/#_8","text":"git branch -d {branchname} \u5220\u9664\u672c\u5730\u5206\u652f git push origin \u2014delete {branchname}","title":"\u5220\u9664\u8fdc\u7a0b\u5206\u652f"},{"location":"git/#ssh","text":"ssh-add ~/.ssh/id_rsa","title":"ssh\u516c\u94a5\u514d\u5bc6\u7801"},{"location":"java/","text":"java\u57fa\u7840 url\u7279\u6b8a\u5b57\u7b26\u5904\u7406 imageUrl = UrlEscapers . urlFragmentEscaper (). escape ( imageUrl ); stream map\u7d2f\u52a0 Map < String , Integer > map = new HashMap <> (); List < Integer > list = new ArrayList <> ( map . values ()); System . out . print ( list . stream (). collect ( Collectors . summarizingInt ( value -> value )). getSum ()); //\u6216\u8005 map . entrySet (). stream (). mapToInt ( x -> x . getValue ()). sum () map\u6c42\u6700\u5c0f\u503c map . entrySet (). stream (). sorted ( Comparator . comparingInt ( x -> x . getValue () ) ). findFirst (). get (). getValue () //\u6216\u8005 map . entrySet (). stream (). max ( Comparator . comparingInt ( x -> x . getValue ())). get (). getValue () list\u8f6cmap Map < Long , HitLog > hitLogMap = hitLogList . stream (). collect ( Collectors . toMap ( HitLog :: getId , hitLog -> hitLog )); list\u6392\u5e8f List < Student > students = new ArrayList < Student > () { { add ( new Student ( 20160002 , \"\u4f2f\u7ea6\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160003 , \"\u7384\u5fb7\" , 22 , 3 , \"\u7ecf\u6d4e\u7ba1\u7406\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160004 , \"\u4e91\u957f\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20161001 , \"\u7ffc\u5fb7\" , 21 , 2 , \"\u673a\u68b0\u4e0e\u81ea\u52a8\u5316\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161002 , \"\u5143\u76f4\" , 23 , 4 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161003 , \"\u5949\u5b5d\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20162001 , \"\u4ef2\u8c0b\" , 22 , 3 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20162002 , \"\u9c81\u8083\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20163001 , \"\u4e01\u5949\" , 24 , 5 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u5357\u4eac\u5927\u5b66\" )); add ( new Student ( 20160001 , \"\u5b54\u660e\" , 20 , 1 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6b66\u6c49\u5927\u5b66\" )); } }; List < Student > students2 = students . stream (). sorted ( Comparator . comparingInt ( x -> x . getAge ())). collect ( Collectors . toList ()); list\\<object>\u53d6object\u67d0\u4e2a\u5c5e\u6027\u7684list List < Long > hitLogIdList = appealLogList . stream (). map ( AppealLog :: getHitLogId ). collect ( Collectors . toList ());","title":"java\u57fa\u7840"},{"location":"java/#java","text":"","title":"java\u57fa\u7840"},{"location":"java/#url","text":"imageUrl = UrlEscapers . urlFragmentEscaper (). escape ( imageUrl );","title":"url\u7279\u6b8a\u5b57\u7b26\u5904\u7406"},{"location":"java/#stream","text":"","title":"stream"},{"location":"java/#map","text":"Map < String , Integer > map = new HashMap <> (); List < Integer > list = new ArrayList <> ( map . values ()); System . out . print ( list . stream (). collect ( Collectors . summarizingInt ( value -> value )). getSum ()); //\u6216\u8005 map . entrySet (). stream (). mapToInt ( x -> x . getValue ()). sum ()","title":"map\u7d2f\u52a0"},{"location":"java/#map_1","text":"map . entrySet (). stream (). sorted ( Comparator . comparingInt ( x -> x . getValue () ) ). findFirst (). get (). getValue () //\u6216\u8005 map . entrySet (). stream (). max ( Comparator . comparingInt ( x -> x . getValue ())). get (). getValue ()","title":"map\u6c42\u6700\u5c0f\u503c"},{"location":"java/#listmap","text":"Map < Long , HitLog > hitLogMap = hitLogList . stream (). collect ( Collectors . toMap ( HitLog :: getId , hitLog -> hitLog ));","title":"list\u8f6cmap"},{"location":"java/#list","text":"List < Student > students = new ArrayList < Student > () { { add ( new Student ( 20160002 , \"\u4f2f\u7ea6\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160003 , \"\u7384\u5fb7\" , 22 , 3 , \"\u7ecf\u6d4e\u7ba1\u7406\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160004 , \"\u4e91\u957f\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20161001 , \"\u7ffc\u5fb7\" , 21 , 2 , \"\u673a\u68b0\u4e0e\u81ea\u52a8\u5316\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161002 , \"\u5143\u76f4\" , 23 , 4 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161003 , \"\u5949\u5b5d\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20162001 , \"\u4ef2\u8c0b\" , 22 , 3 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20162002 , \"\u9c81\u8083\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20163001 , \"\u4e01\u5949\" , 24 , 5 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u5357\u4eac\u5927\u5b66\" )); add ( new Student ( 20160001 , \"\u5b54\u660e\" , 20 , 1 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6b66\u6c49\u5927\u5b66\" )); } }; List < Student > students2 = students . stream (). sorted ( Comparator . comparingInt ( x -> x . getAge ())). collect ( Collectors . toList ());","title":"list\u6392\u5e8f"},{"location":"java/#listobjectobjectlist","text":"List < Long > hitLogIdList = appealLogList . stream (). map ( AppealLog :: getHitLogId ). collect ( Collectors . toList ());","title":"list\\&lt;object>\u53d6object\u67d0\u4e2a\u5c5e\u6027\u7684list"},{"location":"k8s/","text":"k8s \u67e5\u770bk8s\u7684\u57df\u540d\u914d\u7f6e\uff1a opscli app -n quotation -p distribute-information k8s-resource -k ingress -c test \u67e5\u627epod kubectl -n server get pod | grep core \u767b\u5f55pod kubectl -n server exec -it core-5f47f66cb6-7ttbc bash \u8c03\u8bd5\u4fee\u6539pod\u914d\u7f6e kubectl edit -n server deployment/php kubectl delete -n server deployment/push --force kubectl -n server get ingress","title":"k8s"},{"location":"k8s/#k8s","text":"","title":"k8s"},{"location":"k8s/#k8s_1","text":"opscli app -n quotation -p distribute-information k8s-resource -k ingress -c test","title":"\u67e5\u770bk8s\u7684\u57df\u540d\u914d\u7f6e\uff1a"},{"location":"k8s/#pod","text":"kubectl -n server get pod | grep core","title":"\u67e5\u627epod"},{"location":"k8s/#pod_1","text":"kubectl -n server exec -it core-5f47f66cb6-7ttbc bash","title":"\u767b\u5f55pod"},{"location":"k8s/#pod_2","text":"kubectl edit -n server deployment/php kubectl delete -n server deployment/push --force kubectl -n server get ingress","title":"\u8c03\u8bd5\u4fee\u6539pod\u914d\u7f6e"},{"location":"macos/","text":"macos mac\u81ea\u542f\u52a8\u8bbe\u7f6e \u4ee5nginx\u4e3a\u4f8b 1.\u7f16\u8f91\u542f\u52a8\u914d\u7f6e\u6587\u4ef6 sudo vim /Library/LaunchDaemons/com.nginx.plist\u52a0\u5165 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version=\"1.0\"> <dict> <key>Label</key> <string>com.nginx.plist</string> <key>ProgramArguments</key> <array> <string>/usr/local/nginx/sbin/nginx</string> </array> <key>KeepAlive</key> <false/> <key>RunAtLoad</key> <true/> <key>StandardErrorPath</key> <string>/usr/local/nginx/logs/error.log</string> <key>StandardOutPath</key> <string>/usr/local/nginx/logs/access.log</string> </dict> </plist> 2.\u4fee\u6539\u6743\u9650 sudo chmod 644 /Library/LaunchDaemons/com.nginx.plist 3.\u6ce8\u518c\u4e3a\u7cfb\u7edf\u670d\u52a1 sudo launchctl load -w /Library/LaunchDaemons/com.nginx.plist \u5378\u8f7d\u4e3asudo launchctl unload -w /Library/LaunchDaemons/com.nginx.plist \u8f6f\u4ef6\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u7684\u89e3\u51b3\u529e\u6cd5 \u5bf9\u4e8eMac\u4e0b\u7a0b\u5e8f\u59cb\u7ec8\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5 1. \u5173\u95ed\u7a0b\u5e8f\uff1b 2. \u4fee\u6539\u9632\u706b\u5899\uff0c\u628a\u76f8\u5173\u7a0b\u5e8f\u4ece\u9632\u706b\u5899\u7684\u767d\u540d\u5355\u4e2d\u5220\u9664\uff1b 3. \u5220\u9664~/Library/Preferences/com.\u8be5\u7a0b\u5e8f\u540d.plist\u6587\u4ef6\u3002 \u5230\u6b21\u5373\u53ef\uff0c\u91cd\u542f\u7a0b\u5e8f\u540e\u4f1a\u65b0\u5efa\u76f8\u5173\u6587\u4ef6\u5e76\u81ea\u52a8\u4fee\u6539\u9632\u706b\u5899\u4e2d\u76f8\u5173\u5185\u5bb9\uff0c\u8be5\u95ee\u9898\u5df2\u89e3\u51b3\u3002 homebrew # show a list of all your installed Homebrew packages brew list # It will pin the formula to the current version brew pin <formula>","title":"macos"},{"location":"macos/#macos","text":"","title":"macos"},{"location":"macos/#mac","text":"\u4ee5nginx\u4e3a\u4f8b","title":"mac\u81ea\u542f\u52a8\u8bbe\u7f6e"},{"location":"macos/#1","text":"sudo vim /Library/LaunchDaemons/com.nginx.plist\u52a0\u5165 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version=\"1.0\"> <dict> <key>Label</key> <string>com.nginx.plist</string> <key>ProgramArguments</key> <array> <string>/usr/local/nginx/sbin/nginx</string> </array> <key>KeepAlive</key> <false/> <key>RunAtLoad</key> <true/> <key>StandardErrorPath</key> <string>/usr/local/nginx/logs/error.log</string> <key>StandardOutPath</key> <string>/usr/local/nginx/logs/access.log</string> </dict> </plist>","title":"1.\u7f16\u8f91\u542f\u52a8\u914d\u7f6e\u6587\u4ef6"},{"location":"macos/#2","text":"sudo chmod 644 /Library/LaunchDaemons/com.nginx.plist","title":"2.\u4fee\u6539\u6743\u9650"},{"location":"macos/#3","text":"sudo launchctl load -w /Library/LaunchDaemons/com.nginx.plist \u5378\u8f7d\u4e3asudo launchctl unload -w /Library/LaunchDaemons/com.nginx.plist","title":"3.\u6ce8\u518c\u4e3a\u7cfb\u7edf\u670d\u52a1"},{"location":"macos/#_1","text":"\u5bf9\u4e8eMac\u4e0b\u7a0b\u5e8f\u59cb\u7ec8\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5 1. \u5173\u95ed\u7a0b\u5e8f\uff1b 2. \u4fee\u6539\u9632\u706b\u5899\uff0c\u628a\u76f8\u5173\u7a0b\u5e8f\u4ece\u9632\u706b\u5899\u7684\u767d\u540d\u5355\u4e2d\u5220\u9664\uff1b 3. \u5220\u9664~/Library/Preferences/com.\u8be5\u7a0b\u5e8f\u540d.plist\u6587\u4ef6\u3002 \u5230\u6b21\u5373\u53ef\uff0c\u91cd\u542f\u7a0b\u5e8f\u540e\u4f1a\u65b0\u5efa\u76f8\u5173\u6587\u4ef6\u5e76\u81ea\u52a8\u4fee\u6539\u9632\u706b\u5899\u4e2d\u76f8\u5173\u5185\u5bb9\uff0c\u8be5\u95ee\u9898\u5df2\u89e3\u51b3\u3002","title":"\u8f6f\u4ef6\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u7684\u89e3\u51b3\u529e\u6cd5"},{"location":"macos/#homebrew","text":"# show a list of all your installed Homebrew packages brew list # It will pin the formula to the current version brew pin <formula>","title":"homebrew"},{"location":"mkdocs/","text":"mkdocs \u6587\u6863\u76ee\u5f55\u914d\u7f6e site_name: \u6587\u6863 pages: - \u4e3b\u9875: index.md - \u5de5\u4f5c: [md1.md,md2.md] - \u5173\u4e8e: about.md \u81ea\u5e26\u4e3b\u9898\u4fee\u6539 \u4fee\u6539mkdocs\u81ea\u5e26\u7684\u4e3b\u9898 \u590d\u5236mkdocs\u7684\u4e3b\u9898\u6587\u4ef6\u5939\u81f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u6587\u4ef6\u5939custom_theme\u4e0b \u4fee\u6539\u9879\u76ee\u914d\u7f6e\u6587\u4ef6mkdocs.yml theme: name: 'mkdocs' custom_dir: 'custom_theme' \u4fee\u6539custom_theme/main.html\uff0c\u6bd4\u5982\u8981\u4fee\u6539\u5e95\u90e8\u7684\u201cDocumentation built with MkDocs\u201d {%- block footer %} <hr> {%- if config.copyright %} <p>{{ config.copyright }}</p> {%- endif %} <!--<p>Documentation built with <a href=\"https://www.mkdocs.org/\">MkDocs</a>.</p>--> {%- endblock %} \u6dfb\u52a0\u6d41\u7a0b\u56fe\u652f\u6301 \u5b89\u88c5pymdown-extensions\u6269\u5c55 pip install pymdown-extensions \u6dfb\u52a0umlconvert.js\u81f3docs/js\u4e0b\uff0c\u5185\u5bb9\u5982\u4e0b (function () { 'use strict'; /** * Targets special code or div blocks and converts them to UML. * @param {object} converter is the object that transforms the text to UML. * @param {string} className is the name of the class to target. * @param {object} settings is the settings for converter. * @return {void} */ var uml = (function (converter, className, settings) { var getFromCode = function getFromCode(parent) { // Handles <pre><code> var text = \"\"; for (var j = 0; j < parent.childNodes.length; j++) { var subEl = parent.childNodes[j]; if (subEl.tagName.toLowerCase() === \"code\") { for (var k = 0; k < subEl.childNodes.length; k++) { var child = subEl.childNodes[k]; var whitespace = /^\\s*$/; if (child.nodeName === \"#text\" && !whitespace.test(child.nodeValue)) { text = child.nodeValue; break; } } } } return text; }; var getFromDiv = function getFromDiv(parent) { // Handles <div> return parent.textContent || parent.innerText; }; // Change article to whatever element your main Markdown content lives. var article = document.querySelectorAll(\"article\"); var blocks = document.querySelectorAll(\"pre.\" + className + \",div.\" + className // Is there a settings object? );var config = settings === void 0 ? {} : settings; // Find the UML source element and get the text for (var i = 0; i < blocks.length; i++) { var parentEl = blocks[i]; var el = document.createElement(\"div\"); el.className = className; el.style.visibility = \"hidden\"; el.style.position = \"absolute\"; var text = parentEl.tagName.toLowerCase() === \"pre\" ? getFromCode(parentEl) : getFromDiv(parentEl) // Insert our new div at the end of our content to get general // typset and page sizes as our parent might be `display:none` // keeping us from getting the right sizes for our SVG. // Our new div will be hidden via \"visibility\" and take no space // via `poistion: absolute`. When we are all done, use the // original node as a reference to insert our SVG back // into the proper place, and then make our SVG visilbe again. // Lastly, clean up the old node. ; article[0].appendChild(el); var diagram = converter.parse(text); diagram.drawSVG(el, config); el.style.visibility = \"visible\"; el.style.position = \"static\"; parentEl.parentNode.insertBefore(el, parentEl); parentEl.parentNode.removeChild(parentEl); } }); (function () { var onReady = function onReady(fn) { if (document.addEventListener) { document.addEventListener(\"DOMContentLoaded\", fn); } else { document.attachEvent(\"onreadystatechange\", function () { if (document.readyState === \"interactive\") { fn(); } }); } }; onReady(function () { if (typeof flowchart !== \"undefined\") { uml(flowchart, \"uml-flowchart\"); } if (typeof Diagram !== \"undefined\") { uml(Diagram, \"uml-sequence-diagram\", { theme: \"simple\" }); } }); })(); }()); \u914d\u7f6e extra_javascript: - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' - 'https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js' - 'js/umlconvert.js' markdown_extensions: - pymdownx.superfences custom_fences: name: flow class: uml-flowchart format: !!python/name:pymdownx.superfences.fence_code_format \u6548\u679c\u5c55\u793a\uff1a markdown\u6e90\u7801 ```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e ``` \u663e\u793a\u6548\u679c st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u6ce8\u610f\uff1a\u53ef\u4ee5\u67e5\u770b\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u6d41\u7a0b\u56fe\u56fe\u7247\uff0c\u6d41\u7a0b\u56fe\u56fe\u7247\u7531js\u751f\u6210","title":"mkdocs"},{"location":"mkdocs/#mkdocs","text":"","title":"mkdocs"},{"location":"mkdocs/#_1","text":"site_name: \u6587\u6863 pages: - \u4e3b\u9875: index.md - \u5de5\u4f5c: [md1.md,md2.md] - \u5173\u4e8e: about.md","title":"\u6587\u6863\u76ee\u5f55\u914d\u7f6e"},{"location":"mkdocs/#_2","text":"\u4fee\u6539mkdocs\u81ea\u5e26\u7684\u4e3b\u9898 \u590d\u5236mkdocs\u7684\u4e3b\u9898\u6587\u4ef6\u5939\u81f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u6587\u4ef6\u5939custom_theme\u4e0b \u4fee\u6539\u9879\u76ee\u914d\u7f6e\u6587\u4ef6mkdocs.yml theme: name: 'mkdocs' custom_dir: 'custom_theme' \u4fee\u6539custom_theme/main.html\uff0c\u6bd4\u5982\u8981\u4fee\u6539\u5e95\u90e8\u7684\u201cDocumentation built with MkDocs\u201d {%- block footer %} <hr> {%- if config.copyright %} <p>{{ config.copyright }}</p> {%- endif %} <!--<p>Documentation built with <a href=\"https://www.mkdocs.org/\">MkDocs</a>.</p>--> {%- endblock %}","title":"\u81ea\u5e26\u4e3b\u9898\u4fee\u6539"},{"location":"mkdocs/#_3","text":"\u5b89\u88c5pymdown-extensions\u6269\u5c55 pip install pymdown-extensions \u6dfb\u52a0umlconvert.js\u81f3docs/js\u4e0b\uff0c\u5185\u5bb9\u5982\u4e0b (function () { 'use strict'; /** * Targets special code or div blocks and converts them to UML. * @param {object} converter is the object that transforms the text to UML. * @param {string} className is the name of the class to target. * @param {object} settings is the settings for converter. * @return {void} */ var uml = (function (converter, className, settings) { var getFromCode = function getFromCode(parent) { // Handles <pre><code> var text = \"\"; for (var j = 0; j < parent.childNodes.length; j++) { var subEl = parent.childNodes[j]; if (subEl.tagName.toLowerCase() === \"code\") { for (var k = 0; k < subEl.childNodes.length; k++) { var child = subEl.childNodes[k]; var whitespace = /^\\s*$/; if (child.nodeName === \"#text\" && !whitespace.test(child.nodeValue)) { text = child.nodeValue; break; } } } } return text; }; var getFromDiv = function getFromDiv(parent) { // Handles <div> return parent.textContent || parent.innerText; }; // Change article to whatever element your main Markdown content lives. var article = document.querySelectorAll(\"article\"); var blocks = document.querySelectorAll(\"pre.\" + className + \",div.\" + className // Is there a settings object? );var config = settings === void 0 ? {} : settings; // Find the UML source element and get the text for (var i = 0; i < blocks.length; i++) { var parentEl = blocks[i]; var el = document.createElement(\"div\"); el.className = className; el.style.visibility = \"hidden\"; el.style.position = \"absolute\"; var text = parentEl.tagName.toLowerCase() === \"pre\" ? getFromCode(parentEl) : getFromDiv(parentEl) // Insert our new div at the end of our content to get general // typset and page sizes as our parent might be `display:none` // keeping us from getting the right sizes for our SVG. // Our new div will be hidden via \"visibility\" and take no space // via `poistion: absolute`. When we are all done, use the // original node as a reference to insert our SVG back // into the proper place, and then make our SVG visilbe again. // Lastly, clean up the old node. ; article[0].appendChild(el); var diagram = converter.parse(text); diagram.drawSVG(el, config); el.style.visibility = \"visible\"; el.style.position = \"static\"; parentEl.parentNode.insertBefore(el, parentEl); parentEl.parentNode.removeChild(parentEl); } }); (function () { var onReady = function onReady(fn) { if (document.addEventListener) { document.addEventListener(\"DOMContentLoaded\", fn); } else { document.attachEvent(\"onreadystatechange\", function () { if (document.readyState === \"interactive\") { fn(); } }); } }; onReady(function () { if (typeof flowchart !== \"undefined\") { uml(flowchart, \"uml-flowchart\"); } if (typeof Diagram !== \"undefined\") { uml(Diagram, \"uml-sequence-diagram\", { theme: \"simple\" }); } }); })(); }()); \u914d\u7f6e extra_javascript: - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' - 'https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js' - 'js/umlconvert.js' markdown_extensions: - pymdownx.superfences custom_fences: name: flow class: uml-flowchart format: !!python/name:pymdownx.superfences.fence_code_format \u6548\u679c\u5c55\u793a\uff1a markdown\u6e90\u7801 ```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e ``` \u663e\u793a\u6548\u679c st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u6ce8\u610f\uff1a\u53ef\u4ee5\u67e5\u770b\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u6d41\u7a0b\u56fe\u56fe\u7247\uff0c\u6d41\u7a0b\u56fe\u56fe\u7247\u7531js\u751f\u6210","title":"\u6dfb\u52a0\u6d41\u7a0b\u56fe\u652f\u6301"},{"location":"mybatis/","text":"mybatis\u914d\u7f6e \u6309\u4e3b\u952e\u64cd\u4f5c\u6570\u636e\u65b9\u6cd5\u751f\u6210 <table tableName= \"app_functions\" domainObjectName= \"AppFunctions\" enableCountByExample= \"true\" enableUpdateByExample= \"true\" enableDeleteByExample= \"true\" enableSelectByExample= \"true\" selectByExampleQueryId= \"true\" delimitAllColumns= \"true\" enableSelectByPrimaryKey= \"true\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"true\" enableUpdateByPrimaryKey= \"true\" > <generatedKey column= \"id\" sqlStatement= \"mysql\" identity= \"true\" /> <columnOverride column= \"app_function\" property= \"appFunction\" javaType= \"java.lang.Integer\" /> <columnOverride column= \"app_type\" property= \"appType\" javaType= \"java.lang.Integer\" /> </table> \u4f7f\u7528\u9a7c\u5cf0\u547d\u540d xml\u914d\u7f6e <!-- targetPackage\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u5305 --> <!-- targetProject\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u786c\u76d8\u4f4d\u7f6e --> <javaModelGenerator targetPackage= \"com.coinness.core.dao.db.pojo\" targetProject= \"./src/main/java\" > <!-- \u662f\u5426\u5141\u8bb8\u5b50\u5305 --> <property name= \"enableSubPackages\" value= \"false\" /> <!-- \u662f\u5426\u5bf9modal\u6dfb\u52a0\u6784\u9020\u51fd\u6570 --> <property name= \"constructorBased\" value= \"true\" /> <!-- \u662f\u5426\u6e05\u7406\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u51fa\u7684\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26 --> <property name= \"trimStrings\" value= \"true\" /> <!-- \u5efa\u7acbmodal\u5bf9\u8c61\u662f\u5426\u4e0d\u53ef\u6539\u53d8 \u5373\u751f\u6210\u7684modal\u5bf9\u8c61\u4e0d\u4f1a\u6709setter\u65b9\u6cd5\uff0c\u53ea\u6709\u6784\u9020\u65b9\u6cd5 --> <property name= \"immutable\" value= \"false\" /> <!-- \u4e0d\u4f7f\u7528\u5b57\u6bb5\u540d --> <property name= \"useActualColumnNames\" value= \"false\" /> </javaModelGenerator> yml\u4e2d\u914d\u7f6e mybatis : mapper-locations : classpath:/mapper/*.xml #\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u5bf9\u5e94mapper\u6620\u5c04xml\u6587\u4ef6\u7684\u6240\u5728\u8def\u5f84 type-aliases-package : com.coinness.core.dao.db.mapper # \u6ce8\u610f\uff1a\u5bf9\u5e94\u5b9e\u4f53\u7c7b\u7684\u8def\u5f84 configuration : map-underscore-to-camel-case : true # \u67e5\u8be2\u8bed\u53e5\u81ea\u52a8\u8f6c\u9a7c\u5cf0\uff0c\u89e3\u51b3\u5b9a\u4e49@Select\u67e5\u51fa\u6570\u636e\u5b57\u6bb5\u4e3anull\u7684\u95ee\u9898","title":"mybatis\u914d\u7f6e"},{"location":"mybatis/#mybatis","text":"","title":"mybatis\u914d\u7f6e"},{"location":"mybatis/#_1","text":"<table tableName= \"app_functions\" domainObjectName= \"AppFunctions\" enableCountByExample= \"true\" enableUpdateByExample= \"true\" enableDeleteByExample= \"true\" enableSelectByExample= \"true\" selectByExampleQueryId= \"true\" delimitAllColumns= \"true\" enableSelectByPrimaryKey= \"true\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"true\" enableUpdateByPrimaryKey= \"true\" > <generatedKey column= \"id\" sqlStatement= \"mysql\" identity= \"true\" /> <columnOverride column= \"app_function\" property= \"appFunction\" javaType= \"java.lang.Integer\" /> <columnOverride column= \"app_type\" property= \"appType\" javaType= \"java.lang.Integer\" /> </table>","title":"\u6309\u4e3b\u952e\u64cd\u4f5c\u6570\u636e\u65b9\u6cd5\u751f\u6210"},{"location":"mybatis/#_2","text":"xml\u914d\u7f6e <!-- targetPackage\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u5305 --> <!-- targetProject\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u786c\u76d8\u4f4d\u7f6e --> <javaModelGenerator targetPackage= \"com.coinness.core.dao.db.pojo\" targetProject= \"./src/main/java\" > <!-- \u662f\u5426\u5141\u8bb8\u5b50\u5305 --> <property name= \"enableSubPackages\" value= \"false\" /> <!-- \u662f\u5426\u5bf9modal\u6dfb\u52a0\u6784\u9020\u51fd\u6570 --> <property name= \"constructorBased\" value= \"true\" /> <!-- \u662f\u5426\u6e05\u7406\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u51fa\u7684\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26 --> <property name= \"trimStrings\" value= \"true\" /> <!-- \u5efa\u7acbmodal\u5bf9\u8c61\u662f\u5426\u4e0d\u53ef\u6539\u53d8 \u5373\u751f\u6210\u7684modal\u5bf9\u8c61\u4e0d\u4f1a\u6709setter\u65b9\u6cd5\uff0c\u53ea\u6709\u6784\u9020\u65b9\u6cd5 --> <property name= \"immutable\" value= \"false\" /> <!-- \u4e0d\u4f7f\u7528\u5b57\u6bb5\u540d --> <property name= \"useActualColumnNames\" value= \"false\" /> </javaModelGenerator> yml\u4e2d\u914d\u7f6e mybatis : mapper-locations : classpath:/mapper/*.xml #\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u5bf9\u5e94mapper\u6620\u5c04xml\u6587\u4ef6\u7684\u6240\u5728\u8def\u5f84 type-aliases-package : com.coinness.core.dao.db.mapper # \u6ce8\u610f\uff1a\u5bf9\u5e94\u5b9e\u4f53\u7c7b\u7684\u8def\u5f84 configuration : map-underscore-to-camel-case : true # \u67e5\u8be2\u8bed\u53e5\u81ea\u52a8\u8f6c\u9a7c\u5cf0\uff0c\u89e3\u51b3\u5b9a\u4e49@Select\u67e5\u51fa\u6570\u636e\u5b57\u6bb5\u4e3anull\u7684\u95ee\u9898","title":"\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d"},{"location":"springboot/","text":"springboot \u7ec8\u7aef\u8fd0\u884c \u6253\u5305\u65f6\u8df3\u8fc7\u5355\u5143\u6d4b\u8bd5 mvn install -Dmaven.test.skip=true cd target java -jar xxxx.jar mvn\u76f4\u63a5\u8fd0\u884c mvn spring-boot:run \u6253\u5305\u8fd0\u884c \u6253\u5305 mvn -U clean package -Dmaven.test.skip=true \u8fd0\u884c java -jar xxx.jar --spring.profiles.active=dev \u4f18\u5316\u4f9d\u8d56 //\u67e5\u8be2\u4f9d\u8d56 mvn dependency:analyze \u591a\u6570\u636e\u5e93\u914d\u7f6e \u4f7f\u7528dynamic-datasource-spring-boot-starter \u53c2\u8003 https://gitee.com/baomidou/dynamic-datasource-spring-boot-starter \u6ce8\u610f\uff1adriver-class-name\u5fc5\u987b\u4e3acom.mysql.jdbc.Driver \u7f13\u5b58\u5931\u6548\u65f6\u95f4 @Cacheable ( value = \"people#${select.cache.timeout:1800}#${select.cache.refresh:600}\" , key = \"#person.id\" , sync = true ) jackson\u914d\u7f6e jackson : date-format : yyyy-MM-dd HH:mm:ss time-zone : GMT+8 serialization : #\u683c\u5f0f\u5316\u8f93\u51fa indent_output : true #\u5ffd\u7565\u65e0\u6cd5\u8f6c\u6362\u7684\u5bf9\u8c61 fail_on_empty_beans : false #\u5ffd\u7565null default-property-inclusion : non_null deserialization : fail_on_unknown_properties : false parser : allow_unquoted_control_chars : true allow_single_quotes : true \u591a\u8bed\u8a00\u9002\u914d \u4f7f\u7528springboot\u5185\u7f6e\u7684i18n\uff0c\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 messages : basename : i18n.common,i18n.bonus cache-duration : 1 \u4e2d\u95f4\u4ef6\u914d\u7f6e \u5b9a\u4e49\u6ce8\u89e3 package com.coinness.common.requestLimit ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface RequestLimit { /** * \u5141\u8bb8\u8bbf\u95ee\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u503cMAX_VALUE */ int count () default 120 ; /** * \u65f6\u95f4\u6bb5\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e00\u5206\u949f */ long time () default 60000 ; /** * \u662f\u5426\u751f\u6548 */ boolean limit () default true ; } \u5b9e\u73b0\u6ce8\u89e3 package com.coinness.common.requestLimit ; import com.coinness.common.http.CodeMsgEnum ; import com.coinness.common.http.CommonResponse ; import com.coinness.common.json.DefaultSerializer ; import com.coinness.utils.Base64Utils ; import com.coinness.utils.IPUtils ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.http.MediaType ; import org.springframework.stereotype.Component ; import org.springframework.web.method.HandlerMethod ; import org.springframework.web.servlet.HandlerInterceptor ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.concurrent.TimeUnit ; @Component public class RequestLimitInterceptor implements HandlerInterceptor { @Autowired private RedisTemplate redisTemplate ; private static final Logger logger = LoggerFactory . getLogger ( RequestLimitInterceptor . class ); @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { try { HandlerMethod method = ( HandlerMethod ) handler ; RequestLimit classRequestLimit = method . getBeanType (). getAnnotation ( RequestLimit . class ); RequestLimit methodRequestLimit = method . getMethodAnnotation ( RequestLimit . class ); RequestLimit requestLimit = methodRequestLimit != null ? methodRequestLimit : classRequestLimit ; String ip = IPUtils . getIpAddress ( request ); String url = request . getRequestURL (). toString (); String queryStr = request . getQueryString () == null ? \"\" : request . getQueryString (); String uuid = request . getHeader ( \"uuid\" ) == null ? \"\" : request . getHeader ( \"uuid\" ); String key = \"req_limit_\" . concat ( Base64Utils . encode ( \"_url_\" . concat ( url ). concat ( \"_ip_\" ). concat ( ip ). concat ( \"_queryStr_\" ). concat ( queryStr ). concat ( \"_uuid_\" ). concat ( uuid ))); logger . info ( \"\u67e5\u8be2redis\" , redisTemplate . opsForValue (). get ( key )); if ( requestLimit != null && requestLimit . limit () == true ) { if ( redisTemplate . opsForValue (). get ( key ) == null || redisTemplate . opsForValue (). get ( key ). equals ( 0 )) { redisTemplate . opsForValue (). set ( key , 1 , requestLimit . time (), TimeUnit . MILLISECONDS ); } else { redisTemplate . opsForValue (). increment ( key , 1 ); } int count = ( int ) redisTemplate . opsForValue (). get ( key ); if ( count > requestLimit . count ()) { return doFailResponse ( CommonResponse . error ( CodeMsgEnum . too_many_attempts ), response ); } } } catch ( Exception e ) { logger . error ( \"requestLimit exception...\" , e ); } return true ; } public boolean doFailResponse ( CommonResponse result , HttpServletResponse response ) throws IOException { response . setContentType ( MediaType . APPLICATION_JSON_UTF8_VALUE ); PrintWriter writer = response . getWriter (); writer . print ( DefaultSerializer . write ( result )); writer . close (); response . flushBuffer (); return false ; } } \u914d\u7f6e\u4e2d\u95f4\u4ef6 @Configuration public class MvcInterceptorConfig extends WebMvcConfigurationSupport { @Autowired private RequestLimitInterceptor requestLimitInterceptor ; @Override protected void addInterceptors ( InterceptorRegistry registry ) { // addPathPatterns \u7528\u4e8e\u6dfb\u52a0\u62e6\u622a\u89c4\u5219\uff0c/**\u8868\u793a\u62e6\u622a\u6240\u6709\u8bf7\u6c42 // excludePathPatterns \u7528\u6237\u6392\u9664\u62e6\u622a registry . addInterceptor ( requestLimitInterceptor ) . addPathPatterns ( \"/**\" ); // .excludePathPatterns(\"/activities/\", \"/api/**\"); super . addInterceptors ( registry ); } } RedisUtils\u4f7f\u7528 Pom.xml\u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-runtime </artifactId> <version> 1.1.3 </version> </dependency> <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-core </artifactId> <version> 1.1.3 </version> </dependency> \u62c9\u53d6 https://github.com/whvcse/RedisUtil \u4ee3\u7801\uff0c\u5199\u5165\u81ea\u5df1\u7684\u9879\u76ee \u6dfb\u52a0 @Component \u6ce8\u89e3\uff0c\u7136\u540e\u5728\u9879\u76ee\u4e2d@Autowired\u6ce8\u5165 thymeleaf\u62a5@Autowired\u9519\u8bef\u89e3\u51b3 org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.coinness.risk.MessageTests': Unsatisfied dependency expressed through field 'templateEngine'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.thymeleaf.TemplateEngine' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} \u539f\u56e0\uff1athymeleaf\u4e0espring-boot-starter-thymeleaf\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u68c0\u67e5maven\uff0c\u4fee\u6539\u7248\u672c\u53f7\u5373\u53ef \u547d\u4ee4\u884c\u8fd0\u884c\u4ee3\u7801 public class RiskServiceApplication implements CommandLineRunner { @Autowired private UserService userService ; public static void main ( String [] args ) throws ParseException { //\u4e0d\u542f\u52a8webservice new SpringApplicationBuilder ( RiskServiceApplication . class ). web ( WebApplicationType . NONE ). run ( args ); } @Override public void run ( String [] args ) { System . out . println ( userService . getUserInfo ( \"1111226\" )); } } springboot\u96c6\u6210springdata-es \u96c6\u6210spring-boot-starter-data-elasticsearch <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-elasticsearch</artifactId> </dependency> yml\u6dfb\u52a0\u914d\u7f6e elasticsearch : rest : uris : http://search.es.hk-prod-1.adm.mmjj.info:9200 password : GMDZk8T910fS2v70ethI90d7 username : elastic \u6307\u5b9aes\u7684package\uff0c\u5728\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0 @EnableElasticsearchRepositories ( basePackages = \"com.co.core.es\" ) public class CoreApplication { public static void main ( String [] args ) { System . setProperty ( \"es.set.netty.runtime.available.processors\" , \"false\" ); SpringApplication . run ( CoreApplication . class , args ); } } \u7f16\u5199pojo package com.co.core.es ; import com.fasterxml.jackson.annotation.JsonProperty ; import lombok.Data ; import org.springframework.data.annotation.Id ; import org.springframework.data.elasticsearch.annotations.Document ; import org.springframework.data.elasticsearch.annotations.Field ; import org.springframework.data.elasticsearch.annotations.FieldType ; /** * @author cph */ @Data @Document ( indexName = \"comprehensive-search_article\" , type = \"article\" , createIndex = false ) //@ToString //@AllArgsConstructor //@NoArgsConstructor //@Builder public class ComprehensiveSearch { @Id private String id ; @Field ( name = ARTICLE_TYPE , type = FieldType . Byte ) @JsonProperty ( ARTICLE_TYPE ) private Integer articleType ; @JsonProperty ( SOURCE ) @Field ( name = SOURCE , type = FieldType . Text ) private String source ; @Field ( name = LANGUAGE_ID , type = FieldType . Byte ) @JsonProperty ( LANGUAGE_ID ) private Integer languageId ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"ik_max_word\" ) @JsonProperty ( TITLE ) private String title ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"content_analyzer\" ) @JsonProperty ( CONTENT ) private String content ; @Field ( name = ARTICLE_ID , type = FieldType . Long ) @JsonProperty ( ARTICLE_ID ) private Long articleId ; @Field ( name = UPDATE_TIME , type = FieldType . Date ) @JsonProperty ( UPDATE_TIME ) private Long updateTime ; @Field ( name = ISSUE_TIME , type = FieldType . Date ) @JsonProperty ( ISSUE_TIME ) private Long issueTime ; @Field ( value = VISIT_NUM , type = FieldType . Long ) @JsonProperty ( VISIT_NUM ) private Long visitNum ; @Field ( value = IS_SOURCE_HIDE , type = FieldType . Byte ) @JsonProperty ( IS_SOURCE_HIDE ) private Integer isSourceHide ; // @Field(value = CONTENT_JSON,type = FieldType.Text) private String contentJson ; public static final String ARTICLE_ID = \"article_id\" ; public static final String ARTICLE_TYPE = \"article_type\" ; public static final String COMMENT_NUM = \"comment_num\" ; public static final String SOURCE = \"source\" ; public static final String LANGUAGE_ID = \"language_id\" ; public static final String TITLE = \"title\" ; public static final String CONTENT = \"content\" ; public static final String UPDATE_TIME = \"update_time\" ; public static final String ISSUE_TIME = \"issue_time\" ; public static final String VISIT_NUM = \"visit_num\" ; public static final String IS_SOURCE_HIDE = \"is_source_hide\" ; public static final String CONTENT_JSON = \"content_json\" ; } \u7f16\u5199Repository package com.co.core.es ; import org.springframework.data.elasticsearch.repository.ElasticsearchRepository ; public interface ComprehensiveSearchRepository extends ElasticsearchRepository < ComprehensiveSearch , String > { } \u67e5\u8be2es @Resource private ComprehensiveSearchRepository repository ; /** * @param pageNum * @param pageSize * @param keyword * @param onlyArticleId \u662f\u5426\u53ea\u8f93\u51faid\u5b57\u6bb5 * @param languageId * @param articleType 2\u5feb\u8baf\uff0c3\u6df1\u5ea6 * @return */ @Override public Page < ComprehensiveSearch > searchArticle ( int pageNum , int pageSize , String keyword , boolean onlyArticleId , int languageId , int articleType ) { MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders . multiMatchQuery ( keyword ). field ( ComprehensiveSearch . TITLE , 2F ). analyzer ( \"ik_max_word\" ). field ( ComprehensiveSearch . CONTENT , 1F ). analyzer ( \"ik_max_word\" ); if ( NumberUtils . isParsable ( keyword ) && NumberUtils . isDigits ( keyword )) { multiMatchQueryBuilder . field ( ComprehensiveSearch . ARTICLE_ID , 10 F ); } multiMatchQueryBuilder . type ( MultiMatchQueryBuilder . Type . PHRASE ). minimumShouldMatch ( \"100%\" ). maxExpansions ( 1 ). slop ( 0 ); BoolQueryBuilder boolQueryBuilder = QueryBuilders . boolQuery () . must ( QueryBuilders . termQuery ( ComprehensiveSearch . LANGUAGE_ID , languageId )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . IS_SOURCE_HIDE , 0 )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . ARTICLE_TYPE , articleType )) . must ( multiMatchQueryBuilder ); List < Sort . Order > orders = new ArrayList <> (); orders . add ( new Sort . Order ( Sort . Direction . DESC , ComprehensiveSearch . ARTICLE_ID )); Pageable pageable = PageRequest . of ( pageNum - 1 , pageSize , Sort . by ( orders )); NativeSearchQuery searchQuery = new NativeSearchQueryBuilder () . withQuery ( boolQueryBuilder ) . withPageable ( pageable ) . build (); org . springframework . data . domain . Page < ComprehensiveSearch > page = repository . search ( searchQuery ); return page ; }","title":"springboot"},{"location":"springboot/#springboot","text":"","title":"springboot"},{"location":"springboot/#_1","text":"\u6253\u5305\u65f6\u8df3\u8fc7\u5355\u5143\u6d4b\u8bd5 mvn install -Dmaven.test.skip=true cd target java -jar xxxx.jar mvn\u76f4\u63a5\u8fd0\u884c mvn spring-boot:run \u6253\u5305\u8fd0\u884c \u6253\u5305 mvn -U clean package -Dmaven.test.skip=true \u8fd0\u884c java -jar xxx.jar --spring.profiles.active=dev","title":"\u7ec8\u7aef\u8fd0\u884c"},{"location":"springboot/#_2","text":"//\u67e5\u8be2\u4f9d\u8d56 mvn dependency:analyze","title":"\u4f18\u5316\u4f9d\u8d56"},{"location":"springboot/#_3","text":"\u4f7f\u7528dynamic-datasource-spring-boot-starter \u53c2\u8003 https://gitee.com/baomidou/dynamic-datasource-spring-boot-starter \u6ce8\u610f\uff1adriver-class-name\u5fc5\u987b\u4e3acom.mysql.jdbc.Driver","title":"\u591a\u6570\u636e\u5e93\u914d\u7f6e"},{"location":"springboot/#_4","text":"@Cacheable ( value = \"people#${select.cache.timeout:1800}#${select.cache.refresh:600}\" , key = \"#person.id\" , sync = true )","title":"\u7f13\u5b58\u5931\u6548\u65f6\u95f4"},{"location":"springboot/#jackson","text":"jackson : date-format : yyyy-MM-dd HH:mm:ss time-zone : GMT+8 serialization : #\u683c\u5f0f\u5316\u8f93\u51fa indent_output : true #\u5ffd\u7565\u65e0\u6cd5\u8f6c\u6362\u7684\u5bf9\u8c61 fail_on_empty_beans : false #\u5ffd\u7565null default-property-inclusion : non_null deserialization : fail_on_unknown_properties : false parser : allow_unquoted_control_chars : true allow_single_quotes : true","title":"jackson\u914d\u7f6e"},{"location":"springboot/#_5","text":"\u4f7f\u7528springboot\u5185\u7f6e\u7684i18n\uff0c\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 messages : basename : i18n.common,i18n.bonus cache-duration : 1","title":"\u591a\u8bed\u8a00\u9002\u914d"},{"location":"springboot/#_6","text":"\u5b9a\u4e49\u6ce8\u89e3 package com.coinness.common.requestLimit ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface RequestLimit { /** * \u5141\u8bb8\u8bbf\u95ee\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u503cMAX_VALUE */ int count () default 120 ; /** * \u65f6\u95f4\u6bb5\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e00\u5206\u949f */ long time () default 60000 ; /** * \u662f\u5426\u751f\u6548 */ boolean limit () default true ; } \u5b9e\u73b0\u6ce8\u89e3 package com.coinness.common.requestLimit ; import com.coinness.common.http.CodeMsgEnum ; import com.coinness.common.http.CommonResponse ; import com.coinness.common.json.DefaultSerializer ; import com.coinness.utils.Base64Utils ; import com.coinness.utils.IPUtils ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.http.MediaType ; import org.springframework.stereotype.Component ; import org.springframework.web.method.HandlerMethod ; import org.springframework.web.servlet.HandlerInterceptor ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.concurrent.TimeUnit ; @Component public class RequestLimitInterceptor implements HandlerInterceptor { @Autowired private RedisTemplate redisTemplate ; private static final Logger logger = LoggerFactory . getLogger ( RequestLimitInterceptor . class ); @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { try { HandlerMethod method = ( HandlerMethod ) handler ; RequestLimit classRequestLimit = method . getBeanType (). getAnnotation ( RequestLimit . class ); RequestLimit methodRequestLimit = method . getMethodAnnotation ( RequestLimit . class ); RequestLimit requestLimit = methodRequestLimit != null ? methodRequestLimit : classRequestLimit ; String ip = IPUtils . getIpAddress ( request ); String url = request . getRequestURL (). toString (); String queryStr = request . getQueryString () == null ? \"\" : request . getQueryString (); String uuid = request . getHeader ( \"uuid\" ) == null ? \"\" : request . getHeader ( \"uuid\" ); String key = \"req_limit_\" . concat ( Base64Utils . encode ( \"_url_\" . concat ( url ). concat ( \"_ip_\" ). concat ( ip ). concat ( \"_queryStr_\" ). concat ( queryStr ). concat ( \"_uuid_\" ). concat ( uuid ))); logger . info ( \"\u67e5\u8be2redis\" , redisTemplate . opsForValue (). get ( key )); if ( requestLimit != null && requestLimit . limit () == true ) { if ( redisTemplate . opsForValue (). get ( key ) == null || redisTemplate . opsForValue (). get ( key ). equals ( 0 )) { redisTemplate . opsForValue (). set ( key , 1 , requestLimit . time (), TimeUnit . MILLISECONDS ); } else { redisTemplate . opsForValue (). increment ( key , 1 ); } int count = ( int ) redisTemplate . opsForValue (). get ( key ); if ( count > requestLimit . count ()) { return doFailResponse ( CommonResponse . error ( CodeMsgEnum . too_many_attempts ), response ); } } } catch ( Exception e ) { logger . error ( \"requestLimit exception...\" , e ); } return true ; } public boolean doFailResponse ( CommonResponse result , HttpServletResponse response ) throws IOException { response . setContentType ( MediaType . APPLICATION_JSON_UTF8_VALUE ); PrintWriter writer = response . getWriter (); writer . print ( DefaultSerializer . write ( result )); writer . close (); response . flushBuffer (); return false ; } } \u914d\u7f6e\u4e2d\u95f4\u4ef6 @Configuration public class MvcInterceptorConfig extends WebMvcConfigurationSupport { @Autowired private RequestLimitInterceptor requestLimitInterceptor ; @Override protected void addInterceptors ( InterceptorRegistry registry ) { // addPathPatterns \u7528\u4e8e\u6dfb\u52a0\u62e6\u622a\u89c4\u5219\uff0c/**\u8868\u793a\u62e6\u622a\u6240\u6709\u8bf7\u6c42 // excludePathPatterns \u7528\u6237\u6392\u9664\u62e6\u622a registry . addInterceptor ( requestLimitInterceptor ) . addPathPatterns ( \"/**\" ); // .excludePathPatterns(\"/activities/\", \"/api/**\"); super . addInterceptors ( registry ); } }","title":"\u4e2d\u95f4\u4ef6\u914d\u7f6e"},{"location":"springboot/#redisutils","text":"Pom.xml\u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-runtime </artifactId> <version> 1.1.3 </version> </dependency> <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-core </artifactId> <version> 1.1.3 </version> </dependency> \u62c9\u53d6 https://github.com/whvcse/RedisUtil \u4ee3\u7801\uff0c\u5199\u5165\u81ea\u5df1\u7684\u9879\u76ee \u6dfb\u52a0 @Component \u6ce8\u89e3\uff0c\u7136\u540e\u5728\u9879\u76ee\u4e2d@Autowired\u6ce8\u5165","title":"RedisUtils\u4f7f\u7528"},{"location":"springboot/#thymeleafautowired","text":"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.coinness.risk.MessageTests': Unsatisfied dependency expressed through field 'templateEngine'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.thymeleaf.TemplateEngine' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} \u539f\u56e0\uff1athymeleaf\u4e0espring-boot-starter-thymeleaf\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u68c0\u67e5maven\uff0c\u4fee\u6539\u7248\u672c\u53f7\u5373\u53ef","title":"thymeleaf\u62a5@Autowired\u9519\u8bef\u89e3\u51b3"},{"location":"springboot/#_7","text":"public class RiskServiceApplication implements CommandLineRunner { @Autowired private UserService userService ; public static void main ( String [] args ) throws ParseException { //\u4e0d\u542f\u52a8webservice new SpringApplicationBuilder ( RiskServiceApplication . class ). web ( WebApplicationType . NONE ). run ( args ); } @Override public void run ( String [] args ) { System . out . println ( userService . getUserInfo ( \"1111226\" )); } }","title":"\u547d\u4ee4\u884c\u8fd0\u884c\u4ee3\u7801"},{"location":"springboot/#springbootspringdata-es","text":"\u96c6\u6210spring-boot-starter-data-elasticsearch <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-elasticsearch</artifactId> </dependency> yml\u6dfb\u52a0\u914d\u7f6e elasticsearch : rest : uris : http://search.es.hk-prod-1.adm.mmjj.info:9200 password : GMDZk8T910fS2v70ethI90d7 username : elastic \u6307\u5b9aes\u7684package\uff0c\u5728\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0 @EnableElasticsearchRepositories ( basePackages = \"com.co.core.es\" ) public class CoreApplication { public static void main ( String [] args ) { System . setProperty ( \"es.set.netty.runtime.available.processors\" , \"false\" ); SpringApplication . run ( CoreApplication . class , args ); } } \u7f16\u5199pojo package com.co.core.es ; import com.fasterxml.jackson.annotation.JsonProperty ; import lombok.Data ; import org.springframework.data.annotation.Id ; import org.springframework.data.elasticsearch.annotations.Document ; import org.springframework.data.elasticsearch.annotations.Field ; import org.springframework.data.elasticsearch.annotations.FieldType ; /** * @author cph */ @Data @Document ( indexName = \"comprehensive-search_article\" , type = \"article\" , createIndex = false ) //@ToString //@AllArgsConstructor //@NoArgsConstructor //@Builder public class ComprehensiveSearch { @Id private String id ; @Field ( name = ARTICLE_TYPE , type = FieldType . Byte ) @JsonProperty ( ARTICLE_TYPE ) private Integer articleType ; @JsonProperty ( SOURCE ) @Field ( name = SOURCE , type = FieldType . Text ) private String source ; @Field ( name = LANGUAGE_ID , type = FieldType . Byte ) @JsonProperty ( LANGUAGE_ID ) private Integer languageId ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"ik_max_word\" ) @JsonProperty ( TITLE ) private String title ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"content_analyzer\" ) @JsonProperty ( CONTENT ) private String content ; @Field ( name = ARTICLE_ID , type = FieldType . Long ) @JsonProperty ( ARTICLE_ID ) private Long articleId ; @Field ( name = UPDATE_TIME , type = FieldType . Date ) @JsonProperty ( UPDATE_TIME ) private Long updateTime ; @Field ( name = ISSUE_TIME , type = FieldType . Date ) @JsonProperty ( ISSUE_TIME ) private Long issueTime ; @Field ( value = VISIT_NUM , type = FieldType . Long ) @JsonProperty ( VISIT_NUM ) private Long visitNum ; @Field ( value = IS_SOURCE_HIDE , type = FieldType . Byte ) @JsonProperty ( IS_SOURCE_HIDE ) private Integer isSourceHide ; // @Field(value = CONTENT_JSON,type = FieldType.Text) private String contentJson ; public static final String ARTICLE_ID = \"article_id\" ; public static final String ARTICLE_TYPE = \"article_type\" ; public static final String COMMENT_NUM = \"comment_num\" ; public static final String SOURCE = \"source\" ; public static final String LANGUAGE_ID = \"language_id\" ; public static final String TITLE = \"title\" ; public static final String CONTENT = \"content\" ; public static final String UPDATE_TIME = \"update_time\" ; public static final String ISSUE_TIME = \"issue_time\" ; public static final String VISIT_NUM = \"visit_num\" ; public static final String IS_SOURCE_HIDE = \"is_source_hide\" ; public static final String CONTENT_JSON = \"content_json\" ; } \u7f16\u5199Repository package com.co.core.es ; import org.springframework.data.elasticsearch.repository.ElasticsearchRepository ; public interface ComprehensiveSearchRepository extends ElasticsearchRepository < ComprehensiveSearch , String > { } \u67e5\u8be2es @Resource private ComprehensiveSearchRepository repository ; /** * @param pageNum * @param pageSize * @param keyword * @param onlyArticleId \u662f\u5426\u53ea\u8f93\u51faid\u5b57\u6bb5 * @param languageId * @param articleType 2\u5feb\u8baf\uff0c3\u6df1\u5ea6 * @return */ @Override public Page < ComprehensiveSearch > searchArticle ( int pageNum , int pageSize , String keyword , boolean onlyArticleId , int languageId , int articleType ) { MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders . multiMatchQuery ( keyword ). field ( ComprehensiveSearch . TITLE , 2F ). analyzer ( \"ik_max_word\" ). field ( ComprehensiveSearch . CONTENT , 1F ). analyzer ( \"ik_max_word\" ); if ( NumberUtils . isParsable ( keyword ) && NumberUtils . isDigits ( keyword )) { multiMatchQueryBuilder . field ( ComprehensiveSearch . ARTICLE_ID , 10 F ); } multiMatchQueryBuilder . type ( MultiMatchQueryBuilder . Type . PHRASE ). minimumShouldMatch ( \"100%\" ). maxExpansions ( 1 ). slop ( 0 ); BoolQueryBuilder boolQueryBuilder = QueryBuilders . boolQuery () . must ( QueryBuilders . termQuery ( ComprehensiveSearch . LANGUAGE_ID , languageId )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . IS_SOURCE_HIDE , 0 )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . ARTICLE_TYPE , articleType )) . must ( multiMatchQueryBuilder ); List < Sort . Order > orders = new ArrayList <> (); orders . add ( new Sort . Order ( Sort . Direction . DESC , ComprehensiveSearch . ARTICLE_ID )); Pageable pageable = PageRequest . of ( pageNum - 1 , pageSize , Sort . by ( orders )); NativeSearchQuery searchQuery = new NativeSearchQueryBuilder () . withQuery ( boolQueryBuilder ) . withPageable ( pageable ) . build (); org . springframework . data . domain . Page < ComprehensiveSearch > page = repository . search ( searchQuery ); return page ; }","title":"springboot\u96c6\u6210springdata-es"},{"location":"zsh/","text":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5 \u5b89\u88c5 \u53c2\u8003zsh\u5b98\u7f51https://ohmyz.sh/ \u4ecebash\u5207\u6362\u5230zsh chsh -s /bin/zsh \u5b89\u88c5power line pip3 install powerline-status --user \u5b89\u88c5PowerLine pip3 install powerline-status --user \u5b89\u88c5PowerFonts # git clone git clone https://github.com/powerline/fonts.git --depth = 1 # cd to folder cd fonts # run install shell ./install.sh \u5b89\u88c5\u597d\u5b57\u4f53\u5e93\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u8bbe\u7f6eiTerm2\u7684\u5b57\u4f53\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u662fiTerm2 -> Preferences -> Profiles -> Text\uff0c\u5728Font\u533a\u57df\u9009\u4e2dChange Font\uff0c\u7136\u540e\u627e\u5230Meslo LG\u5b57\u4f53\u3002\u6709L\u3001M\u3001S \u5b89\u88c5\u914d\u8272\u65b9\u6848 cd ~/Desktop/OpenSource git clone https://github.com/altercation/solarized cd solarized/iterm2-colors-solarized/ open . \u5728\u6253\u5f00\u7684finder\u7a97\u53e3\u4e2d\uff0c\u53cc\u51fbSolarized Dark.itermcolors\u548cSolarized Light.itermcolors\u5373\u53ef\u5b89\u88c5\u660e\u6697\u4e24\u79cd\u914d\u8272 \u518d\u6b21\u8fdb\u5165iTerm2 -> Preferences -> Profiles -> Colors -> Color Presets\u4e2d\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9\u8fd9\u4e24\u79cd\u914d\u8272\u4e2d\u7684\u4e00\u79cd\u5373\u53ef \u5b89\u88c5\u4e3b\u9898 cd ~/Desktop/OpenSource git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git cd oh-my-zsh-agnoster-fcamblor/ ./install \u5b8c\u6210\u540e\uff0c\u6267\u884c\u547d\u4ee4\u6253\u5f00zshrc\u914d\u7f6e\u6587\u4ef6\uff0c\u5c06ZSH_THEME\u540e\u9762\u7684\u5b57\u6bb5\u6539\u4e3aagnoster\u3002 vi ~/.zshrc \u5b89\u88c5\u9ad8\u4eae\u63d2\u4ef6 cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git vim ~/.zshrc \u8fd9\u65f6\u6211\u4eec\u518d\u6b21\u6253\u5f00zshrc\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\u3002\u627e\u5230plugins\uff0c\u6b64\u65f6plugins\u4e2d\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86git\uff0c\u6211\u4eec\u9700\u8981\u628a\u9ad8\u4eae\u63d2\u4ef6\u4e5f\u52a0\u4e0a\uff1a plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u63d2\u4ef6\u987a\u5e8f\uff0czsh-syntax-highlighting\u5fc5\u987b\u5728\u6700\u540e\u4e00\u4e2a\u3002 \u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u6dfb\u52a0\uff1asource ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh \u5b89\u88c5\u8865\u5168\u63d2\u4ef6zsh-autosuggestion \u4e0e\u9ad8\u4eae\u63d2\u4ef6\u540c\u6837\u7684\u5b89\u88c5\u65b9\u5f0f zsh\u8fdc\u7a0b\u767b\u5f55\u6587\u4ef6\u4e71\u7801\u95ee\u9898\u89e3\u51b3 \u5728~/.zshrc\u6587\u4ef6\u5c3e\u90e8\u6dfb\u52a0 export LC_ALL = en_US.UTF-8 export LANG = en_US.UTF-8","title":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5"},{"location":"zsh/#zsh","text":"","title":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5"},{"location":"zsh/#_1","text":"\u53c2\u8003zsh\u5b98\u7f51https://ohmyz.sh/","title":"\u5b89\u88c5"},{"location":"zsh/#bashzsh","text":"chsh -s /bin/zsh","title":"\u4ecebash\u5207\u6362\u5230zsh"},{"location":"zsh/#power-line","text":"pip3 install powerline-status --user","title":"\u5b89\u88c5power line"},{"location":"zsh/#powerline","text":"pip3 install powerline-status --user","title":"\u5b89\u88c5PowerLine"},{"location":"zsh/#powerfonts","text":"# git clone git clone https://github.com/powerline/fonts.git --depth = 1 # cd to folder cd fonts # run install shell ./install.sh \u5b89\u88c5\u597d\u5b57\u4f53\u5e93\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u8bbe\u7f6eiTerm2\u7684\u5b57\u4f53\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u662fiTerm2 -> Preferences -> Profiles -> Text\uff0c\u5728Font\u533a\u57df\u9009\u4e2dChange Font\uff0c\u7136\u540e\u627e\u5230Meslo LG\u5b57\u4f53\u3002\u6709L\u3001M\u3001S","title":"\u5b89\u88c5PowerFonts"},{"location":"zsh/#_2","text":"cd ~/Desktop/OpenSource git clone https://github.com/altercation/solarized cd solarized/iterm2-colors-solarized/ open . \u5728\u6253\u5f00\u7684finder\u7a97\u53e3\u4e2d\uff0c\u53cc\u51fbSolarized Dark.itermcolors\u548cSolarized Light.itermcolors\u5373\u53ef\u5b89\u88c5\u660e\u6697\u4e24\u79cd\u914d\u8272 \u518d\u6b21\u8fdb\u5165iTerm2 -> Preferences -> Profiles -> Colors -> Color Presets\u4e2d\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9\u8fd9\u4e24\u79cd\u914d\u8272\u4e2d\u7684\u4e00\u79cd\u5373\u53ef","title":"\u5b89\u88c5\u914d\u8272\u65b9\u6848"},{"location":"zsh/#_3","text":"cd ~/Desktop/OpenSource git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git cd oh-my-zsh-agnoster-fcamblor/ ./install \u5b8c\u6210\u540e\uff0c\u6267\u884c\u547d\u4ee4\u6253\u5f00zshrc\u914d\u7f6e\u6587\u4ef6\uff0c\u5c06ZSH_THEME\u540e\u9762\u7684\u5b57\u6bb5\u6539\u4e3aagnoster\u3002 vi ~/.zshrc","title":"\u5b89\u88c5\u4e3b\u9898"},{"location":"zsh/#_4","text":"cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git vim ~/.zshrc \u8fd9\u65f6\u6211\u4eec\u518d\u6b21\u6253\u5f00zshrc\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\u3002\u627e\u5230plugins\uff0c\u6b64\u65f6plugins\u4e2d\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86git\uff0c\u6211\u4eec\u9700\u8981\u628a\u9ad8\u4eae\u63d2\u4ef6\u4e5f\u52a0\u4e0a\uff1a plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u63d2\u4ef6\u987a\u5e8f\uff0czsh-syntax-highlighting\u5fc5\u987b\u5728\u6700\u540e\u4e00\u4e2a\u3002 \u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u6dfb\u52a0\uff1asource ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh","title":"\u5b89\u88c5\u9ad8\u4eae\u63d2\u4ef6"},{"location":"zsh/#zsh-autosuggestion","text":"\u4e0e\u9ad8\u4eae\u63d2\u4ef6\u540c\u6837\u7684\u5b89\u88c5\u65b9\u5f0f","title":"\u5b89\u88c5\u8865\u5168\u63d2\u4ef6zsh-autosuggestion"},{"location":"zsh/#zsh_1","text":"\u5728~/.zshrc\u6587\u4ef6\u5c3e\u90e8\u6dfb\u52a0 export LC_ALL = en_US.UTF-8 export LANG = en_US.UTF-8","title":"zsh\u8fdc\u7a0b\u767b\u5f55\u6587\u4ef6\u4e71\u7801\u95ee\u9898\u89e3\u51b3"}]}