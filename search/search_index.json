{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u8bbf\u95ee __\u672c\u535a\u5ba2\u4f7f\u7528\u5de5\u5177\uff1a__mkdocs+vscode+ Markdown Editor +github __\u672c\u535a\u5ba2\u4e3b\u8981\u7528\u9014\uff1a__\u5206\u4eab\u3001\u8bb0\u5f55","title":"\u6b22\u8fce\u8bbf\u95ee"},{"location":"#_1","text":"__\u672c\u535a\u5ba2\u4f7f\u7528\u5de5\u5177\uff1a__mkdocs+vscode+ Markdown Editor +github __\u672c\u535a\u5ba2\u4e3b\u8981\u7528\u9014\uff1a__\u5206\u4eab\u3001\u8bb0\u5f55","title":"\u6b22\u8fce\u8bbf\u95ee"},{"location":"about/","text":"\u5173\u4e8e\u6211 \u54b3\u54b3\uff0c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u8bf4\u3002\u3002\u3002","title":"\u5173\u4e8e"},{"location":"about/#_1","text":"\u54b3\u54b3\uff0c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u8bf4\u3002\u3002\u3002","title":"\u5173\u4e8e\u6211"},{"location":"develop/docker/","text":"docker \u5220\u9664\u955c\u50cf docker image rm imagename \u5220\u9664\u5bb9\u5668 docker container rm containerid \u5217\u51fa\u6240\u6709\u5bb9\u5668 docker container list -a \u5217\u51fa\u6240\u6709\u955c\u50cf docker images \u91cd\u542f\u5bb9\u5668 docker container restart containerid \u542f\u52a8\u955c\u50cf # mysql -d\u540e\u53f0\u8fd0\u884c\uff0c-v\u6302\u8f7d\u672c\u5730\u76ee\u5f55 docker run --name mysql5.7 -p 3306 :3306 -e MYSQL_ROOT_PASSWORD = root -d mysql:5.7 # php-fpm docker run -d --name php:7.0-fpm -p 9000 :9000 php:7.0-fpm","title":"docker"},{"location":"develop/docker/#docker","text":"","title":"docker"},{"location":"develop/docker/#_1","text":"docker image rm imagename","title":"\u5220\u9664\u955c\u50cf"},{"location":"develop/docker/#_2","text":"docker container rm containerid","title":"\u5220\u9664\u5bb9\u5668"},{"location":"develop/docker/#_3","text":"docker container list -a","title":"\u5217\u51fa\u6240\u6709\u5bb9\u5668"},{"location":"develop/docker/#_4","text":"docker images","title":"\u5217\u51fa\u6240\u6709\u955c\u50cf"},{"location":"develop/docker/#_5","text":"docker container restart containerid","title":"\u91cd\u542f\u5bb9\u5668"},{"location":"develop/docker/#_6","text":"# mysql -d\u540e\u53f0\u8fd0\u884c\uff0c-v\u6302\u8f7d\u672c\u5730\u76ee\u5f55 docker run --name mysql5.7 -p 3306 :3306 -e MYSQL_ROOT_PASSWORD = root -d mysql:5.7 # php-fpm docker run -d --name php:7.0-fpm -p 9000 :9000 php:7.0-fpm","title":"\u542f\u52a8\u955c\u50cf"},{"location":"develop/java/","text":"java\u57fa\u7840 url\u7279\u6b8a\u5b57\u7b26\u5904\u7406 imageUrl = UrlEscapers . urlFragmentEscaper (). escape ( imageUrl ); stream map\u7d2f\u52a0 Map < String , Integer > map = new HashMap <> (); List < Integer > list = new ArrayList <> ( map . values ()); System . out . print ( list . stream (). collect ( Collectors . summarizingInt ( value -> value )). getSum ()); //\u6216\u8005 map . entrySet (). stream (). mapToInt ( x -> x . getValue ()). sum () map\u6c42\u6700\u5c0f\u503c map . entrySet (). stream (). sorted ( Comparator . comparingInt ( x -> x . getValue () ) ). findFirst (). get (). getValue () //\u6216\u8005 map . entrySet (). stream (). max ( Comparator . comparingInt ( x -> x . getValue ())). get (). getValue () list\u8f6cmap Map < Long , HitLog > hitLogMap = hitLogList . stream (). collect ( Collectors . toMap ( HitLog :: getId , hitLog -> hitLog )); list\u6392\u5e8f List < Student > students = new ArrayList < Student > () { { add ( new Student ( 20160002 , \"\u4f2f\u7ea6\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160003 , \"\u7384\u5fb7\" , 22 , 3 , \"\u7ecf\u6d4e\u7ba1\u7406\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160004 , \"\u4e91\u957f\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20161001 , \"\u7ffc\u5fb7\" , 21 , 2 , \"\u673a\u68b0\u4e0e\u81ea\u52a8\u5316\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161002 , \"\u5143\u76f4\" , 23 , 4 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161003 , \"\u5949\u5b5d\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20162001 , \"\u4ef2\u8c0b\" , 22 , 3 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20162002 , \"\u9c81\u8083\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20163001 , \"\u4e01\u5949\" , 24 , 5 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u5357\u4eac\u5927\u5b66\" )); add ( new Student ( 20160001 , \"\u5b54\u660e\" , 20 , 1 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6b66\u6c49\u5927\u5b66\" )); } }; List < Student > students2 = students . stream (). sorted ( Comparator . comparingInt ( x -> x . getAge ())). collect ( Collectors . toList ()); list\\<object>\u53d6object\u67d0\u4e2a\u5c5e\u6027\u7684list List < Long > hitLogIdList = appealLogList . stream (). map ( AppealLog :: getHitLogId ). collect ( Collectors . toList ()); idea\u4e2dlombok\u62a5\u9519 lombok\u62a5\u9519 java: \u4e0d\u517c\u5bb9\u7684\u7c7b\u578b: \u65e0\u6cd5\u63a8\u65adjava.util.ArrayList<>\u7684\u7c7b\u578b\u53c2\u6570 \u539f\u56e0: \u4e0d\u5b58\u5728\u7c7b\u578b\u53d8\u91cfE\u7684\u5b9e\u4f8b, \u4ee5\u4f7fjava.util.ArrayList<E>\u4e0elombok.val\u4e00\u81f4 \u89e3\u51b3\u529e\u6cd5\uff1a - Djps . track . ap . dependencies = false","title":"java\u57fa\u7840"},{"location":"develop/java/#java","text":"","title":"java\u57fa\u7840"},{"location":"develop/java/#url","text":"imageUrl = UrlEscapers . urlFragmentEscaper (). escape ( imageUrl );","title":"url\u7279\u6b8a\u5b57\u7b26\u5904\u7406"},{"location":"develop/java/#stream","text":"","title":"stream"},{"location":"develop/java/#map","text":"Map < String , Integer > map = new HashMap <> (); List < Integer > list = new ArrayList <> ( map . values ()); System . out . print ( list . stream (). collect ( Collectors . summarizingInt ( value -> value )). getSum ()); //\u6216\u8005 map . entrySet (). stream (). mapToInt ( x -> x . getValue ()). sum ()","title":"map\u7d2f\u52a0"},{"location":"develop/java/#map_1","text":"map . entrySet (). stream (). sorted ( Comparator . comparingInt ( x -> x . getValue () ) ). findFirst (). get (). getValue () //\u6216\u8005 map . entrySet (). stream (). max ( Comparator . comparingInt ( x -> x . getValue ())). get (). getValue ()","title":"map\u6c42\u6700\u5c0f\u503c"},{"location":"develop/java/#listmap","text":"Map < Long , HitLog > hitLogMap = hitLogList . stream (). collect ( Collectors . toMap ( HitLog :: getId , hitLog -> hitLog ));","title":"list\u8f6cmap"},{"location":"develop/java/#list","text":"List < Student > students = new ArrayList < Student > () { { add ( new Student ( 20160002 , \"\u4f2f\u7ea6\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160003 , \"\u7384\u5fb7\" , 22 , 3 , \"\u7ecf\u6d4e\u7ba1\u7406\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20160004 , \"\u4e91\u957f\" , 21 , 2 , \"\u4fe1\u606f\u5b89\u5168\" , \"\u6b66\u6c49\u5927\u5b66\" )); add ( new Student ( 20161001 , \"\u7ffc\u5fb7\" , 21 , 2 , \"\u673a\u68b0\u4e0e\u81ea\u52a8\u5316\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161002 , \"\u5143\u76f4\" , 23 , 4 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20161003 , \"\u5949\u5b5d\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u534e\u4e2d\u79d1\u6280\u5927\u5b66\" )); add ( new Student ( 20162001 , \"\u4ef2\u8c0b\" , 22 , 3 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20162002 , \"\u9c81\u8083\" , 23 , 4 , \"\u8ba1\u7b97\u673a\u79d1\u5b66\" , \"\u6d59\u6c5f\u5927\u5b66\" )); add ( new Student ( 20163001 , \"\u4e01\u5949\" , 24 , 5 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u5357\u4eac\u5927\u5b66\" )); add ( new Student ( 20160001 , \"\u5b54\u660e\" , 20 , 1 , \"\u571f\u6728\u5de5\u7a0b\" , \"\u6b66\u6c49\u5927\u5b66\" )); } }; List < Student > students2 = students . stream (). sorted ( Comparator . comparingInt ( x -> x . getAge ())). collect ( Collectors . toList ());","title":"list\u6392\u5e8f"},{"location":"develop/java/#listobjectobjectlist","text":"List < Long > hitLogIdList = appealLogList . stream (). map ( AppealLog :: getHitLogId ). collect ( Collectors . toList ());","title":"list\\&lt;object>\u53d6object\u67d0\u4e2a\u5c5e\u6027\u7684list"},{"location":"develop/java/#idealombok","text":"lombok\u62a5\u9519 java: \u4e0d\u517c\u5bb9\u7684\u7c7b\u578b: \u65e0\u6cd5\u63a8\u65adjava.util.ArrayList<>\u7684\u7c7b\u578b\u53c2\u6570 \u539f\u56e0: \u4e0d\u5b58\u5728\u7c7b\u578b\u53d8\u91cfE\u7684\u5b9e\u4f8b, \u4ee5\u4f7fjava.util.ArrayList<E>\u4e0elombok.val\u4e00\u81f4 \u89e3\u51b3\u529e\u6cd5\uff1a - Djps . track . ap . dependencies = false","title":"idea\u4e2dlombok\u62a5\u9519"},{"location":"develop/k8s/","text":"k8s \u67e5\u770bk8s\u7684\u57df\u540d\u914d\u7f6e\uff1a opscli app -n quotation -p distribute-information k8s-resource -k ingress -c test \u67e5\u627epod kubectl -n server get pod | grep core \u767b\u5f55pod kubectl -n server exec -it core-5f47f66cb6-7ttbc bash \u8c03\u8bd5\u4fee\u6539pod\u914d\u7f6e kubectl edit -n server deployment/php kubectl delete -n server deployment/push --force kubectl -n server get ingress #\u5378\u8f7drelease helm uninstall -n server praise \u67e5\u627e\u5185\u90e8\u8c03\u7528\u57df\u540d kubectl -n quotation get ingress \u5207\u6362namespace aws eks update-kubeconfig --region ap-east-1 --name hk-test-1","title":"k8s"},{"location":"develop/k8s/#k8s","text":"","title":"k8s"},{"location":"develop/k8s/#k8s_1","text":"opscli app -n quotation -p distribute-information k8s-resource -k ingress -c test","title":"\u67e5\u770bk8s\u7684\u57df\u540d\u914d\u7f6e\uff1a"},{"location":"develop/k8s/#pod","text":"kubectl -n server get pod | grep core","title":"\u67e5\u627epod"},{"location":"develop/k8s/#pod_1","text":"kubectl -n server exec -it core-5f47f66cb6-7ttbc bash","title":"\u767b\u5f55pod"},{"location":"develop/k8s/#pod_2","text":"kubectl edit -n server deployment/php kubectl delete -n server deployment/push --force kubectl -n server get ingress #\u5378\u8f7drelease helm uninstall -n server praise","title":"\u8c03\u8bd5\u4fee\u6539pod\u914d\u7f6e"},{"location":"develop/k8s/#_1","text":"kubectl -n quotation get ingress","title":"\u67e5\u627e\u5185\u90e8\u8c03\u7528\u57df\u540d"},{"location":"develop/k8s/#namespace","text":"aws eks update-kubeconfig --region ap-east-1 --name hk-test-1","title":"\u5207\u6362namespace"},{"location":"develop/mybatis/","text":"mybatis\u914d\u7f6e \u6309\u4e3b\u952e\u64cd\u4f5c\u6570\u636e\u65b9\u6cd5\u751f\u6210 <table tableName= \"app_functions\" domainObjectName= \"AppFunctions\" enableCountByExample= \"true\" enableUpdateByExample= \"true\" enableDeleteByExample= \"true\" enableSelectByExample= \"true\" selectByExampleQueryId= \"true\" delimitAllColumns= \"true\" enableSelectByPrimaryKey= \"true\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"true\" enableUpdateByPrimaryKey= \"true\" > <generatedKey column= \"id\" sqlStatement= \"mysql\" identity= \"true\" /> <columnOverride column= \"app_function\" property= \"appFunction\" javaType= \"java.lang.Integer\" /> <columnOverride column= \"app_type\" property= \"appType\" javaType= \"java.lang.Integer\" /> </table> \u4f7f\u7528\u9a7c\u5cf0\u547d\u540d xml\u914d\u7f6e <!-- targetPackage\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u5305 --> <!-- targetProject\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u786c\u76d8\u4f4d\u7f6e --> <javaModelGenerator targetPackage= \"com.coinness.core.dao.db.pojo\" targetProject= \"./src/main/java\" > <!-- \u662f\u5426\u5141\u8bb8\u5b50\u5305 --> <property name= \"enableSubPackages\" value= \"false\" /> <!-- \u662f\u5426\u5bf9modal\u6dfb\u52a0\u6784\u9020\u51fd\u6570 --> <property name= \"constructorBased\" value= \"true\" /> <!-- \u662f\u5426\u6e05\u7406\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u51fa\u7684\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26 --> <property name= \"trimStrings\" value= \"true\" /> <!-- \u5efa\u7acbmodal\u5bf9\u8c61\u662f\u5426\u4e0d\u53ef\u6539\u53d8 \u5373\u751f\u6210\u7684modal\u5bf9\u8c61\u4e0d\u4f1a\u6709setter\u65b9\u6cd5\uff0c\u53ea\u6709\u6784\u9020\u65b9\u6cd5 --> <property name= \"immutable\" value= \"false\" /> <!-- \u4e0d\u4f7f\u7528\u5b57\u6bb5\u540d --> <property name= \"useActualColumnNames\" value= \"false\" /> </javaModelGenerator> yml\u4e2d\u914d\u7f6e mybatis : mapper-locations : classpath:/mapper/*.xml #\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u5bf9\u5e94mapper\u6620\u5c04xml\u6587\u4ef6\u7684\u6240\u5728\u8def\u5f84 type-aliases-package : com.coinness.core.dao.db.mapper # \u6ce8\u610f\uff1a\u5bf9\u5e94\u5b9e\u4f53\u7c7b\u7684\u8def\u5f84 configuration : map-underscore-to-camel-case : true # \u67e5\u8be2\u8bed\u53e5\u81ea\u52a8\u8f6c\u9a7c\u5cf0\uff0c\u89e3\u51b3\u5b9a\u4e49@Select\u67e5\u51fa\u6570\u636e\u5b57\u6bb5\u4e3anull\u7684\u95ee\u9898 mybatis-plus@Select\u67e5\u8be2list\uff0call elements are null\u7684\u95ee\u9898 \u9700\u8981\u5728mapper\u63a5\u53e3\u4e2d\u6307\u5b9aresultMap\uff0c\u4ee3\u7801\u5982\u4e0b package com.xxx.xxx.provider.dao.mapper ; */ public interface XXXMappper extends BaseMapper < XXX > { @Select ( \"select * from xxx WHERE f_deleted=1\" ) @ResultMap ( \"BaseResultMap\" ) List < LiveGroup > getGroupDeleted (); } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.xxx.xxx.provider.dao.mapper.XXXMapper\" > <!-- \u901a\u7528\u67e5\u8be2\u6620\u5c04\u7ed3\u679c --> <resultMap id= \"BaseResultMap\" type= \"com.xxx.xxx.provider.dao.entity.XXX\" > <id column= \"f_id\" property= \"id\" /> <result column= \"f_deleted\" property= \"deleted\" /> <result column= \"f_recommend\" property= \"recommend\" /> </resultMap> <!-- \u901a\u7528\u67e5\u8be2\u7ed3\u679c\u5217 --> <sql id= \"Base_Column_List\" > f_id, f_deleted, f_recommend </sql> </mapper>","title":"mybatis\u914d\u7f6e"},{"location":"develop/mybatis/#mybatis","text":"","title":"mybatis\u914d\u7f6e"},{"location":"develop/mybatis/#_1","text":"<table tableName= \"app_functions\" domainObjectName= \"AppFunctions\" enableCountByExample= \"true\" enableUpdateByExample= \"true\" enableDeleteByExample= \"true\" enableSelectByExample= \"true\" selectByExampleQueryId= \"true\" delimitAllColumns= \"true\" enableSelectByPrimaryKey= \"true\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"true\" enableUpdateByPrimaryKey= \"true\" > <generatedKey column= \"id\" sqlStatement= \"mysql\" identity= \"true\" /> <columnOverride column= \"app_function\" property= \"appFunction\" javaType= \"java.lang.Integer\" /> <columnOverride column= \"app_type\" property= \"appType\" javaType= \"java.lang.Integer\" /> </table>","title":"\u6309\u4e3b\u952e\u64cd\u4f5c\u6570\u636e\u65b9\u6cd5\u751f\u6210"},{"location":"develop/mybatis/#_2","text":"xml\u914d\u7f6e <!-- targetPackage\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u5305 --> <!-- targetProject\uff1a\u751f\u6210\u7684\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u786c\u76d8\u4f4d\u7f6e --> <javaModelGenerator targetPackage= \"com.coinness.core.dao.db.pojo\" targetProject= \"./src/main/java\" > <!-- \u662f\u5426\u5141\u8bb8\u5b50\u5305 --> <property name= \"enableSubPackages\" value= \"false\" /> <!-- \u662f\u5426\u5bf9modal\u6dfb\u52a0\u6784\u9020\u51fd\u6570 --> <property name= \"constructorBased\" value= \"true\" /> <!-- \u662f\u5426\u6e05\u7406\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u51fa\u7684\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26 --> <property name= \"trimStrings\" value= \"true\" /> <!-- \u5efa\u7acbmodal\u5bf9\u8c61\u662f\u5426\u4e0d\u53ef\u6539\u53d8 \u5373\u751f\u6210\u7684modal\u5bf9\u8c61\u4e0d\u4f1a\u6709setter\u65b9\u6cd5\uff0c\u53ea\u6709\u6784\u9020\u65b9\u6cd5 --> <property name= \"immutable\" value= \"false\" /> <!-- \u4e0d\u4f7f\u7528\u5b57\u6bb5\u540d --> <property name= \"useActualColumnNames\" value= \"false\" /> </javaModelGenerator> yml\u4e2d\u914d\u7f6e mybatis : mapper-locations : classpath:/mapper/*.xml #\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u5bf9\u5e94mapper\u6620\u5c04xml\u6587\u4ef6\u7684\u6240\u5728\u8def\u5f84 type-aliases-package : com.coinness.core.dao.db.mapper # \u6ce8\u610f\uff1a\u5bf9\u5e94\u5b9e\u4f53\u7c7b\u7684\u8def\u5f84 configuration : map-underscore-to-camel-case : true # \u67e5\u8be2\u8bed\u53e5\u81ea\u52a8\u8f6c\u9a7c\u5cf0\uff0c\u89e3\u51b3\u5b9a\u4e49@Select\u67e5\u51fa\u6570\u636e\u5b57\u6bb5\u4e3anull\u7684\u95ee\u9898","title":"\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d"},{"location":"develop/mybatis/#mybatis-plusselectlistall-elements-are-null","text":"\u9700\u8981\u5728mapper\u63a5\u53e3\u4e2d\u6307\u5b9aresultMap\uff0c\u4ee3\u7801\u5982\u4e0b package com.xxx.xxx.provider.dao.mapper ; */ public interface XXXMappper extends BaseMapper < XXX > { @Select ( \"select * from xxx WHERE f_deleted=1\" ) @ResultMap ( \"BaseResultMap\" ) List < LiveGroup > getGroupDeleted (); } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.xxx.xxx.provider.dao.mapper.XXXMapper\" > <!-- \u901a\u7528\u67e5\u8be2\u6620\u5c04\u7ed3\u679c --> <resultMap id= \"BaseResultMap\" type= \"com.xxx.xxx.provider.dao.entity.XXX\" > <id column= \"f_id\" property= \"id\" /> <result column= \"f_deleted\" property= \"deleted\" /> <result column= \"f_recommend\" property= \"recommend\" /> </resultMap> <!-- \u901a\u7528\u67e5\u8be2\u7ed3\u679c\u5217 --> <sql id= \"Base_Column_List\" > f_id, f_deleted, f_recommend </sql> </mapper>","title":"mybatis-plus@Select\u67e5\u8be2list\uff0call elements are null\u7684\u95ee\u9898"},{"location":"develop/springboot/","text":"springboot \u7ec8\u7aef\u8fd0\u884c \u6253\u5305\u65f6\u8df3\u8fc7\u5355\u5143\u6d4b\u8bd5 mvn install -Dmaven.test.skip = true cd target java -jar xxxx.jar mvn\u76f4\u63a5\u8fd0\u884c mvn spring-boot:run \u6253\u5305\u8fd0\u884c \u6253\u5305 mvn -U clean package -Dmaven.test.skip = true \u8fd0\u884c java -jar xxx.jar --spring.profiles.active = dev \u4f18\u5316\u4f9d\u8d56 #\u67e5\u8be2\u4f9d\u8d56 mvn dependency:analyze \u591a\u6570\u636e\u5e93\u914d\u7f6e \u4f7f\u7528dynamic-datasource-spring-boot-starter \u53c2\u8003 https://gitee.com/baomidou/dynamic-datasource-spring-boot-starter \u6ce8\u610f\uff1adriver-class-name\u5fc5\u987b\u4e3acom.mysql.jdbc.Driver \u7f13\u5b58\u5931\u6548\u65f6\u95f4 @Cacheable ( value = \"people#${select.cache.timeout:1800}#${select.cache.refresh:600}\" , key = \"#person.id\" , sync = true ) jackson\u914d\u7f6e jackson : date-format : yyyy-MM-dd HH:mm:ss time-zone : GMT+8 serialization : #\u683c\u5f0f\u5316\u8f93\u51fa indent_output : true #\u5ffd\u7565\u65e0\u6cd5\u8f6c\u6362\u7684\u5bf9\u8c61 fail_on_empty_beans : false #\u5ffd\u7565null default-property-inclusion : non_null deserialization : fail_on_unknown_properties : false parser : allow_unquoted_control_chars : true allow_single_quotes : true \u591a\u8bed\u8a00\u9002\u914d \u4f7f\u7528springboot\u5185\u7f6e\u7684i18n\uff0c\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 messages : basename : i18n.common,i18n.bonus cache-duration : 1 \u4e2d\u95f4\u4ef6\u914d\u7f6e \u5b9a\u4e49\u6ce8\u89e3 package com.coinness.common.requestLimit ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface RequestLimit { /** * \u5141\u8bb8\u8bbf\u95ee\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u503cMAX_VALUE */ int count () default 120 ; /** * \u65f6\u95f4\u6bb5\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e00\u5206\u949f */ long time () default 60000 ; /** * \u662f\u5426\u751f\u6548 */ boolean limit () default true ; } \u5b9e\u73b0\u6ce8\u89e3 package com.coinness.common.requestLimit ; import com.coinness.common.http.CodeMsgEnum ; import com.coinness.common.http.CommonResponse ; import com.coinness.common.json.DefaultSerializer ; import com.coinness.utils.Base64Utils ; import com.coinness.utils.IPUtils ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.http.MediaType ; import org.springframework.stereotype.Component ; import org.springframework.web.method.HandlerMethod ; import org.springframework.web.servlet.HandlerInterceptor ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.concurrent.TimeUnit ; @Component public class RequestLimitInterceptor implements HandlerInterceptor { @Autowired private RedisTemplate redisTemplate ; private static final Logger logger = LoggerFactory . getLogger ( RequestLimitInterceptor . class ); @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { try { HandlerMethod method = ( HandlerMethod ) handler ; RequestLimit classRequestLimit = method . getBeanType (). getAnnotation ( RequestLimit . class ); RequestLimit methodRequestLimit = method . getMethodAnnotation ( RequestLimit . class ); RequestLimit requestLimit = methodRequestLimit != null ? methodRequestLimit : classRequestLimit ; String ip = IPUtils . getIpAddress ( request ); String url = request . getRequestURL (). toString (); String queryStr = request . getQueryString () == null ? \"\" : request . getQueryString (); String uuid = request . getHeader ( \"uuid\" ) == null ? \"\" : request . getHeader ( \"uuid\" ); String key = \"req_limit_\" . concat ( Base64Utils . encode ( \"_url_\" . concat ( url ). concat ( \"_ip_\" ). concat ( ip ). concat ( \"_queryStr_\" ). concat ( queryStr ). concat ( \"_uuid_\" ). concat ( uuid ))); logger . info ( \"\u67e5\u8be2redis\" , redisTemplate . opsForValue (). get ( key )); if ( requestLimit != null && requestLimit . limit () == true ) { if ( redisTemplate . opsForValue (). get ( key ) == null || redisTemplate . opsForValue (). get ( key ). equals ( 0 )) { redisTemplate . opsForValue (). set ( key , 1 , requestLimit . time (), TimeUnit . MILLISECONDS ); } else { redisTemplate . opsForValue (). increment ( key , 1 ); } int count = ( int ) redisTemplate . opsForValue (). get ( key ); if ( count > requestLimit . count ()) { return doFailResponse ( CommonResponse . error ( CodeMsgEnum . too_many_attempts ), response ); } } } catch ( Exception e ) { logger . error ( \"requestLimit exception...\" , e ); } return true ; } public boolean doFailResponse ( CommonResponse result , HttpServletResponse response ) throws IOException { response . setContentType ( MediaType . APPLICATION_JSON_UTF8_VALUE ); PrintWriter writer = response . getWriter (); writer . print ( DefaultSerializer . write ( result )); writer . close (); response . flushBuffer (); return false ; } } \u914d\u7f6e\u4e2d\u95f4\u4ef6 @Configuration public class MvcInterceptorConfig extends WebMvcConfigurationSupport { @Autowired private RequestLimitInterceptor requestLimitInterceptor ; @Override protected void addInterceptors ( InterceptorRegistry registry ) { // addPathPatterns \u7528\u4e8e\u6dfb\u52a0\u62e6\u622a\u89c4\u5219\uff0c/**\u8868\u793a\u62e6\u622a\u6240\u6709\u8bf7\u6c42 // excludePathPatterns \u7528\u6237\u6392\u9664\u62e6\u622a registry . addInterceptor ( requestLimitInterceptor ) . addPathPatterns ( \"/**\" ); // .excludePathPatterns(\"/activities/\", \"/api/**\"); super . addInterceptors ( registry ); } } RedisUtils\u4f7f\u7528 Pom.xml\u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-runtime </artifactId> <version> 1.1.3 </version> </dependency> <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-core </artifactId> <version> 1.1.3 </version> </dependency> \u62c9\u53d6 https://github.com/whvcse/RedisUtil \u4ee3\u7801\uff0c\u5199\u5165\u81ea\u5df1\u7684\u9879\u76ee \u6dfb\u52a0 @Component \u6ce8\u89e3\uff0c\u7136\u540e\u5728\u9879\u76ee\u4e2d@Autowired\u6ce8\u5165 thymeleaf\u62a5@Autowired\u9519\u8bef\u89e3\u51b3 org . springframework . beans . factory . UnsatisfiedDependencyException : Error creating bean with name ' com . coinness . risk . MessageTests ' : Unsatisfied dependency expressed through field ' templateEngine ' ; nested exception is org . springframework . beans . factory . NoSuchBeanDefinitionException : No qualifying bean of type ' org . thymeleaf . TemplateEngine ' available : expected at least 1 bean which qualifies as autowire candidate . Dependency annotations : { @org.springframework.beans.factory.annotation.Autowired ( required = true )} \u539f\u56e0\uff1athymeleaf\u4e0espring-boot-starter-thymeleaf\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u68c0\u67e5maven\uff0c\u4fee\u6539\u7248\u672c\u53f7\u5373\u53ef \u547d\u4ee4\u884c\u8fd0\u884c\u4ee3\u7801 public class RiskServiceApplication implements CommandLineRunner { @Autowired private UserService userService ; public static void main ( String [] args ) throws ParseException { //\u4e0d\u542f\u52a8webservice new SpringApplicationBuilder ( RiskServiceApplication . class ). web ( WebApplicationType . NONE ). run ( args ); } @Override public void run ( String [] args ) { System . out . println ( userService . getUserInfo ( \"1111226\" )); } } springboot\u96c6\u6210springdata-es \u96c6\u6210spring-boot-starter-data-elasticsearch <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-elasticsearch </artifactId> </dependency> yml\u6dfb\u52a0\u914d\u7f6e elasticsearch : rest : uris : http://search.es.hk-prod-1.adm.mmjj.info:9200 password : GMDZk8T910fS2v70ethI90d7 username : elastic \u6307\u5b9aes\u7684package\uff0c\u5728\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0 @EnableElasticsearchRepositories ( basePackages = \"com.co.core.es\" ) public class CoreApplication { public static void main ( String [] args ) { System . setProperty ( \"es.set.netty.runtime.available.processors\" , \"false\" ); SpringApplication . run ( CoreApplication . class , args ); } } \u7f16\u5199pojo package com.co.core.es ; import com.fasterxml.jackson.annotation.JsonProperty ; import lombok.Data ; import org.springframework.data.annotation.Id ; import org.springframework.data.elasticsearch.annotations.Document ; import org.springframework.data.elasticsearch.annotations.Field ; import org.springframework.data.elasticsearch.annotations.FieldType ; /** * @author cph */ @Data @Document ( indexName = \"comprehensive-search_article\" , type = \"article\" , createIndex = false ) //@ToString //@AllArgsConstructor //@NoArgsConstructor //@Builder public class ComprehensiveSearch { @Id private String id ; @Field ( name = ARTICLE_TYPE , type = FieldType . Byte ) @JsonProperty ( ARTICLE_TYPE ) private Integer articleType ; @JsonProperty ( SOURCE ) @Field ( name = SOURCE , type = FieldType . Text ) private String source ; @Field ( name = LANGUAGE_ID , type = FieldType . Byte ) @JsonProperty ( LANGUAGE_ID ) private Integer languageId ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"ik_max_word\" ) @JsonProperty ( TITLE ) private String title ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"content_analyzer\" ) @JsonProperty ( CONTENT ) private String content ; @Field ( name = ARTICLE_ID , type = FieldType . Long ) @JsonProperty ( ARTICLE_ID ) private Long articleId ; @Field ( name = UPDATE_TIME , type = FieldType . Date ) @JsonProperty ( UPDATE_TIME ) private Long updateTime ; @Field ( name = ISSUE_TIME , type = FieldType . Date ) @JsonProperty ( ISSUE_TIME ) private Long issueTime ; @Field ( value = VISIT_NUM , type = FieldType . Long ) @JsonProperty ( VISIT_NUM ) private Long visitNum ; @Field ( value = IS_SOURCE_HIDE , type = FieldType . Byte ) @JsonProperty ( IS_SOURCE_HIDE ) private Integer isSourceHide ; // @Field(value = CONTENT_JSON,type = FieldType.Text) private String contentJson ; public static final String ARTICLE_ID = \"article_id\" ; public static final String ARTICLE_TYPE = \"article_type\" ; public static final String COMMENT_NUM = \"comment_num\" ; public static final String SOURCE = \"source\" ; public static final String LANGUAGE_ID = \"language_id\" ; public static final String TITLE = \"title\" ; public static final String CONTENT = \"content\" ; public static final String UPDATE_TIME = \"update_time\" ; public static final String ISSUE_TIME = \"issue_time\" ; public static final String VISIT_NUM = \"visit_num\" ; public static final String IS_SOURCE_HIDE = \"is_source_hide\" ; public static final String CONTENT_JSON = \"content_json\" ; } 4. \u7f16\u5199Repository ``` java package com.co.core.es ; import org.springframework.data.elasticsearch.repository.ElasticsearchRepository ; public interface ComprehensiveSearchRepository extends ElasticsearchRepository < ComprehensiveSearch , String > { } \u67e5\u8be2es @Resource private ComprehensiveSearchRepository repository ; /** * @param pageNum * @param pageSize * @param keyword * @param onlyArticleId \u662f\u5426\u53ea\u8f93\u51faid\u5b57\u6bb5 * @param languageId * @param articleType 2\u5feb\u8baf\uff0c3\u6df1\u5ea6 * @return */ @Override public Page < ComprehensiveSearch > searchArticle ( int pageNum , int pageSize , String keyword , boolean onlyArticleId , int languageId , int articleType ) { MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders . multiMatchQuery ( keyword ). field ( ComprehensiveSearch . TITLE , 2F ). analyzer ( \"ik_max_word\" ). field ( ComprehensiveSearch . CONTENT , 1F ). analyzer ( \"ik_max_word\" ); if ( NumberUtils . isParsable ( keyword ) && NumberUtils . isDigits ( keyword )) { multiMatchQueryBuilder . field ( ComprehensiveSearch . ARTICLE_ID , 10 F ); } multiMatchQueryBuilder . type ( MultiMatchQueryBuilder . Type . PHRASE ). minimumShouldMatch ( \"100%\" ). maxExpansions ( 1 ). slop ( 0 ); BoolQueryBuilder boolQueryBuilder = QueryBuilders . boolQuery () . must ( QueryBuilders . termQuery ( ComprehensiveSearch . LANGUAGE_ID , languageId )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . IS_SOURCE_HIDE , 0 )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . ARTICLE_TYPE , articleType )) . must ( multiMatchQueryBuilder ); List < Sort . Order > orders = new ArrayList <> (); orders . add ( new Sort . Order ( Sort . Direction . DESC , ComprehensiveSearch . ARTICLE_ID )); Pageable pageable = PageRequest . of ( pageNum - 1 , pageSize , Sort . by ( orders )); NativeSearchQuery searchQuery = new NativeSearchQueryBuilder () . withQuery ( boolQueryBuilder ) . withPageable ( pageable ) . build (); org . springframework . data . domain . Page < ComprehensiveSearch > page = repository . search ( searchQuery ); return page ; } \u5f15\u7528\u672c\u5730jar\u5305 \u52a0\u8f7d\u4f9d\u8d56 <dependency> <groupId> com.co </groupId> <artifactId> common </artifactId> <version> 0.0.2-SNAPSHOT </version> <scope> system </scope> <systemPath> ${pom.basedir}/lib/common-0.0.2-SNAPSHOT.jar </systemPath> </dependency> \u914d\u7f6e\u6253\u5305 <build> <finalName> news </finalName> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> <configuration> <includeSystemScope> true </includeSystemScope> <excludes> <exclude> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> </exclude> </excludes> </configuration> </plugin> </plugins> </build>","title":"springboot"},{"location":"develop/springboot/#springboot","text":"","title":"springboot"},{"location":"develop/springboot/#_1","text":"\u6253\u5305\u65f6\u8df3\u8fc7\u5355\u5143\u6d4b\u8bd5 mvn install -Dmaven.test.skip = true cd target java -jar xxxx.jar mvn\u76f4\u63a5\u8fd0\u884c mvn spring-boot:run \u6253\u5305\u8fd0\u884c \u6253\u5305 mvn -U clean package -Dmaven.test.skip = true \u8fd0\u884c java -jar xxx.jar --spring.profiles.active = dev","title":"\u7ec8\u7aef\u8fd0\u884c"},{"location":"develop/springboot/#_2","text":"#\u67e5\u8be2\u4f9d\u8d56 mvn dependency:analyze","title":"\u4f18\u5316\u4f9d\u8d56"},{"location":"develop/springboot/#_3","text":"\u4f7f\u7528dynamic-datasource-spring-boot-starter \u53c2\u8003 https://gitee.com/baomidou/dynamic-datasource-spring-boot-starter \u6ce8\u610f\uff1adriver-class-name\u5fc5\u987b\u4e3acom.mysql.jdbc.Driver","title":"\u591a\u6570\u636e\u5e93\u914d\u7f6e"},{"location":"develop/springboot/#_4","text":"@Cacheable ( value = \"people#${select.cache.timeout:1800}#${select.cache.refresh:600}\" , key = \"#person.id\" , sync = true )","title":"\u7f13\u5b58\u5931\u6548\u65f6\u95f4"},{"location":"develop/springboot/#jackson","text":"jackson : date-format : yyyy-MM-dd HH:mm:ss time-zone : GMT+8 serialization : #\u683c\u5f0f\u5316\u8f93\u51fa indent_output : true #\u5ffd\u7565\u65e0\u6cd5\u8f6c\u6362\u7684\u5bf9\u8c61 fail_on_empty_beans : false #\u5ffd\u7565null default-property-inclusion : non_null deserialization : fail_on_unknown_properties : false parser : allow_unquoted_control_chars : true allow_single_quotes : true","title":"jackson\u914d\u7f6e"},{"location":"develop/springboot/#_5","text":"\u4f7f\u7528springboot\u5185\u7f6e\u7684i18n\uff0c\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 messages : basename : i18n.common,i18n.bonus cache-duration : 1","title":"\u591a\u8bed\u8a00\u9002\u914d"},{"location":"develop/springboot/#_6","text":"\u5b9a\u4e49\u6ce8\u89e3 package com.coinness.common.requestLimit ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface RequestLimit { /** * \u5141\u8bb8\u8bbf\u95ee\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u503cMAX_VALUE */ int count () default 120 ; /** * \u65f6\u95f4\u6bb5\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e00\u5206\u949f */ long time () default 60000 ; /** * \u662f\u5426\u751f\u6548 */ boolean limit () default true ; } \u5b9e\u73b0\u6ce8\u89e3 package com.coinness.common.requestLimit ; import com.coinness.common.http.CodeMsgEnum ; import com.coinness.common.http.CommonResponse ; import com.coinness.common.json.DefaultSerializer ; import com.coinness.utils.Base64Utils ; import com.coinness.utils.IPUtils ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.http.MediaType ; import org.springframework.stereotype.Component ; import org.springframework.web.method.HandlerMethod ; import org.springframework.web.servlet.HandlerInterceptor ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.concurrent.TimeUnit ; @Component public class RequestLimitInterceptor implements HandlerInterceptor { @Autowired private RedisTemplate redisTemplate ; private static final Logger logger = LoggerFactory . getLogger ( RequestLimitInterceptor . class ); @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { try { HandlerMethod method = ( HandlerMethod ) handler ; RequestLimit classRequestLimit = method . getBeanType (). getAnnotation ( RequestLimit . class ); RequestLimit methodRequestLimit = method . getMethodAnnotation ( RequestLimit . class ); RequestLimit requestLimit = methodRequestLimit != null ? methodRequestLimit : classRequestLimit ; String ip = IPUtils . getIpAddress ( request ); String url = request . getRequestURL (). toString (); String queryStr = request . getQueryString () == null ? \"\" : request . getQueryString (); String uuid = request . getHeader ( \"uuid\" ) == null ? \"\" : request . getHeader ( \"uuid\" ); String key = \"req_limit_\" . concat ( Base64Utils . encode ( \"_url_\" . concat ( url ). concat ( \"_ip_\" ). concat ( ip ). concat ( \"_queryStr_\" ). concat ( queryStr ). concat ( \"_uuid_\" ). concat ( uuid ))); logger . info ( \"\u67e5\u8be2redis\" , redisTemplate . opsForValue (). get ( key )); if ( requestLimit != null && requestLimit . limit () == true ) { if ( redisTemplate . opsForValue (). get ( key ) == null || redisTemplate . opsForValue (). get ( key ). equals ( 0 )) { redisTemplate . opsForValue (). set ( key , 1 , requestLimit . time (), TimeUnit . MILLISECONDS ); } else { redisTemplate . opsForValue (). increment ( key , 1 ); } int count = ( int ) redisTemplate . opsForValue (). get ( key ); if ( count > requestLimit . count ()) { return doFailResponse ( CommonResponse . error ( CodeMsgEnum . too_many_attempts ), response ); } } } catch ( Exception e ) { logger . error ( \"requestLimit exception...\" , e ); } return true ; } public boolean doFailResponse ( CommonResponse result , HttpServletResponse response ) throws IOException { response . setContentType ( MediaType . APPLICATION_JSON_UTF8_VALUE ); PrintWriter writer = response . getWriter (); writer . print ( DefaultSerializer . write ( result )); writer . close (); response . flushBuffer (); return false ; } } \u914d\u7f6e\u4e2d\u95f4\u4ef6 @Configuration public class MvcInterceptorConfig extends WebMvcConfigurationSupport { @Autowired private RequestLimitInterceptor requestLimitInterceptor ; @Override protected void addInterceptors ( InterceptorRegistry registry ) { // addPathPatterns \u7528\u4e8e\u6dfb\u52a0\u62e6\u622a\u89c4\u5219\uff0c/**\u8868\u793a\u62e6\u622a\u6240\u6709\u8bf7\u6c42 // excludePathPatterns \u7528\u6237\u6392\u9664\u62e6\u622a registry . addInterceptor ( requestLimitInterceptor ) . addPathPatterns ( \"/**\" ); // .excludePathPatterns(\"/activities/\", \"/api/**\"); super . addInterceptors ( registry ); } }","title":"\u4e2d\u95f4\u4ef6\u914d\u7f6e"},{"location":"develop/springboot/#redisutils","text":"Pom.xml\u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-runtime </artifactId> <version> 1.1.3 </version> </dependency> <dependency> <groupId> com.dyuproject.protostuff </groupId> <artifactId> protostuff-core </artifactId> <version> 1.1.3 </version> </dependency> \u62c9\u53d6 https://github.com/whvcse/RedisUtil \u4ee3\u7801\uff0c\u5199\u5165\u81ea\u5df1\u7684\u9879\u76ee \u6dfb\u52a0 @Component \u6ce8\u89e3\uff0c\u7136\u540e\u5728\u9879\u76ee\u4e2d@Autowired\u6ce8\u5165","title":"RedisUtils\u4f7f\u7528"},{"location":"develop/springboot/#thymeleafautowired","text":"org . springframework . beans . factory . UnsatisfiedDependencyException : Error creating bean with name ' com . coinness . risk . MessageTests ' : Unsatisfied dependency expressed through field ' templateEngine ' ; nested exception is org . springframework . beans . factory . NoSuchBeanDefinitionException : No qualifying bean of type ' org . thymeleaf . TemplateEngine ' available : expected at least 1 bean which qualifies as autowire candidate . Dependency annotations : { @org.springframework.beans.factory.annotation.Autowired ( required = true )} \u539f\u56e0\uff1athymeleaf\u4e0espring-boot-starter-thymeleaf\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u68c0\u67e5maven\uff0c\u4fee\u6539\u7248\u672c\u53f7\u5373\u53ef","title":"thymeleaf\u62a5@Autowired\u9519\u8bef\u89e3\u51b3"},{"location":"develop/springboot/#_7","text":"public class RiskServiceApplication implements CommandLineRunner { @Autowired private UserService userService ; public static void main ( String [] args ) throws ParseException { //\u4e0d\u542f\u52a8webservice new SpringApplicationBuilder ( RiskServiceApplication . class ). web ( WebApplicationType . NONE ). run ( args ); } @Override public void run ( String [] args ) { System . out . println ( userService . getUserInfo ( \"1111226\" )); } }","title":"\u547d\u4ee4\u884c\u8fd0\u884c\u4ee3\u7801"},{"location":"develop/springboot/#springbootspringdata-es","text":"\u96c6\u6210spring-boot-starter-data-elasticsearch <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-elasticsearch </artifactId> </dependency> yml\u6dfb\u52a0\u914d\u7f6e elasticsearch : rest : uris : http://search.es.hk-prod-1.adm.mmjj.info:9200 password : GMDZk8T910fS2v70ethI90d7 username : elastic \u6307\u5b9aes\u7684package\uff0c\u5728\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0 @EnableElasticsearchRepositories ( basePackages = \"com.co.core.es\" ) public class CoreApplication { public static void main ( String [] args ) { System . setProperty ( \"es.set.netty.runtime.available.processors\" , \"false\" ); SpringApplication . run ( CoreApplication . class , args ); } } \u7f16\u5199pojo package com.co.core.es ; import com.fasterxml.jackson.annotation.JsonProperty ; import lombok.Data ; import org.springframework.data.annotation.Id ; import org.springframework.data.elasticsearch.annotations.Document ; import org.springframework.data.elasticsearch.annotations.Field ; import org.springframework.data.elasticsearch.annotations.FieldType ; /** * @author cph */ @Data @Document ( indexName = \"comprehensive-search_article\" , type = \"article\" , createIndex = false ) //@ToString //@AllArgsConstructor //@NoArgsConstructor //@Builder public class ComprehensiveSearch { @Id private String id ; @Field ( name = ARTICLE_TYPE , type = FieldType . Byte ) @JsonProperty ( ARTICLE_TYPE ) private Integer articleType ; @JsonProperty ( SOURCE ) @Field ( name = SOURCE , type = FieldType . Text ) private String source ; @Field ( name = LANGUAGE_ID , type = FieldType . Byte ) @JsonProperty ( LANGUAGE_ID ) private Integer languageId ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"ik_max_word\" ) @JsonProperty ( TITLE ) private String title ; @Field ( type = FieldType . Text , searchAnalyzer = \"ik_smart\" , analyzer = \"content_analyzer\" ) @JsonProperty ( CONTENT ) private String content ; @Field ( name = ARTICLE_ID , type = FieldType . Long ) @JsonProperty ( ARTICLE_ID ) private Long articleId ; @Field ( name = UPDATE_TIME , type = FieldType . Date ) @JsonProperty ( UPDATE_TIME ) private Long updateTime ; @Field ( name = ISSUE_TIME , type = FieldType . Date ) @JsonProperty ( ISSUE_TIME ) private Long issueTime ; @Field ( value = VISIT_NUM , type = FieldType . Long ) @JsonProperty ( VISIT_NUM ) private Long visitNum ; @Field ( value = IS_SOURCE_HIDE , type = FieldType . Byte ) @JsonProperty ( IS_SOURCE_HIDE ) private Integer isSourceHide ; // @Field(value = CONTENT_JSON,type = FieldType.Text) private String contentJson ; public static final String ARTICLE_ID = \"article_id\" ; public static final String ARTICLE_TYPE = \"article_type\" ; public static final String COMMENT_NUM = \"comment_num\" ; public static final String SOURCE = \"source\" ; public static final String LANGUAGE_ID = \"language_id\" ; public static final String TITLE = \"title\" ; public static final String CONTENT = \"content\" ; public static final String UPDATE_TIME = \"update_time\" ; public static final String ISSUE_TIME = \"issue_time\" ; public static final String VISIT_NUM = \"visit_num\" ; public static final String IS_SOURCE_HIDE = \"is_source_hide\" ; public static final String CONTENT_JSON = \"content_json\" ; } 4. \u7f16\u5199Repository ``` java package com.co.core.es ; import org.springframework.data.elasticsearch.repository.ElasticsearchRepository ; public interface ComprehensiveSearchRepository extends ElasticsearchRepository < ComprehensiveSearch , String > { } \u67e5\u8be2es @Resource private ComprehensiveSearchRepository repository ; /** * @param pageNum * @param pageSize * @param keyword * @param onlyArticleId \u662f\u5426\u53ea\u8f93\u51faid\u5b57\u6bb5 * @param languageId * @param articleType 2\u5feb\u8baf\uff0c3\u6df1\u5ea6 * @return */ @Override public Page < ComprehensiveSearch > searchArticle ( int pageNum , int pageSize , String keyword , boolean onlyArticleId , int languageId , int articleType ) { MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders . multiMatchQuery ( keyword ). field ( ComprehensiveSearch . TITLE , 2F ). analyzer ( \"ik_max_word\" ). field ( ComprehensiveSearch . CONTENT , 1F ). analyzer ( \"ik_max_word\" ); if ( NumberUtils . isParsable ( keyword ) && NumberUtils . isDigits ( keyword )) { multiMatchQueryBuilder . field ( ComprehensiveSearch . ARTICLE_ID , 10 F ); } multiMatchQueryBuilder . type ( MultiMatchQueryBuilder . Type . PHRASE ). minimumShouldMatch ( \"100%\" ). maxExpansions ( 1 ). slop ( 0 ); BoolQueryBuilder boolQueryBuilder = QueryBuilders . boolQuery () . must ( QueryBuilders . termQuery ( ComprehensiveSearch . LANGUAGE_ID , languageId )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . IS_SOURCE_HIDE , 0 )) . must ( QueryBuilders . termQuery ( ComprehensiveSearch . ARTICLE_TYPE , articleType )) . must ( multiMatchQueryBuilder ); List < Sort . Order > orders = new ArrayList <> (); orders . add ( new Sort . Order ( Sort . Direction . DESC , ComprehensiveSearch . ARTICLE_ID )); Pageable pageable = PageRequest . of ( pageNum - 1 , pageSize , Sort . by ( orders )); NativeSearchQuery searchQuery = new NativeSearchQueryBuilder () . withQuery ( boolQueryBuilder ) . withPageable ( pageable ) . build (); org . springframework . data . domain . Page < ComprehensiveSearch > page = repository . search ( searchQuery ); return page ; }","title":"springboot\u96c6\u6210springdata-es"},{"location":"develop/springboot/#jar","text":"\u52a0\u8f7d\u4f9d\u8d56 <dependency> <groupId> com.co </groupId> <artifactId> common </artifactId> <version> 0.0.2-SNAPSHOT </version> <scope> system </scope> <systemPath> ${pom.basedir}/lib/common-0.0.2-SNAPSHOT.jar </systemPath> </dependency> \u914d\u7f6e\u6253\u5305 <build> <finalName> news </finalName> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> <configuration> <includeSystemScope> true </includeSystemScope> <excludes> <exclude> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> </exclude> </excludes> </configuration> </plugin> </plugins> </build>","title":"\u5f15\u7528\u672c\u5730jar\u5305"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/","text":"\u9762\u8bd5\u9898 ArrayList\u548cLinkedList\u7684\u533a\u522b ArrayList\u662f\u5b9e\u73b0\u4e86\u57fa\u4e8e\u52a8\u6001\u6570\u7ec4\u7684\u6570\u636e\u7ed3\u6784\uff0cLinkedList\u57fa\u4e8e\u94fe\u8868\u7684\u6570\u636e\u7ed3\u6784 \u5bf9\u4e8e\u968f\u673a\u8bbf\u95eeget\u548cset\uff0cArrayList\u7edd\u5bf9\u4f18\u4e8eLinkedList\uff0c\u56e0\u4e3aLinkedList\u8981\u79fb\u52a8\u6307\u9488 \u5bf9\u4e8e\u65b0\u589e\u548c\u5220\u9664\u64cd\u4f5cadd\u548cremove\uff0cLinkedList\u6bd4\u8f83\u5360\u4f18\u52bf\uff0c\u56e0\u4e3aArrayList\u8981\u79fb\u52a8\u6570\u636e ArrayList\u5e38\u7528for\u5faa\u73af\u904d\u5386\uff0cLinkedList\u5e38\u7528iterator\u904d\u5386\uff0c\u56e0\u4e3aArrayList\u5b9e\u73b0\u4e86RandomAccess\u63a5\u53e3 LinkedList\u4e0d\u80fdget\u3001set\u8bbf\u95ee HashMap\u548cHashTable\u3001ConcurrentHashMap\u533a\u522b \u76f8\u540c\u70b9: HashMap\u548cHashtable\u90fd\u5b9e\u73b0\u4e86Map\u63a5\u53e3 \u90fd\u53ef\u4ee5\u5b58\u50a8key-value\u6570\u636e \u4e0d\u540c\u70b9\uff1a HashMap\u53ef\u4ee5\u628anull\u4f5c\u4e3akey\u6216value\uff0cHashTable\u4e0d\u53ef\u4ee5 HashMap\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u6548\u7387\u9ad8\u3002HashTable\u7ebf\u7a0b\u5b89\u5168\uff0c\u6548\u7387\u4f4e\u3002 HashMap\u7684\u8fed\u4ee3\u5668(Iterator)\u662ffail-fast\u8fed\u4ee3\u5668\uff0c\u800cHashtable\u7684enumerator\u8fed\u4ee3\u5668\u4e0d\u662ffail-fast\u7684\u3002 ==\u548cequals\u533a\u522b == \u8f83\u7684\u662f\u4e24\u4e2a\u5f15\u7528\u5728\u5185\u5b58\u4e2d\u6307\u5411\u7684\u662f\u4e0d\u662f\u540c\u4e00\u5bf9\u8c61\uff08\u5373\u540c\u4e00\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\u662f\u5426\u4e00\u81f4\u3002\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u76f8\u540c\u65f6\uff08\u6307\u5411\u540c\u4e00\u5bf9\u8c61\u65f6\uff09\uff0c\u201c==\u201d\u64cd\u4f5c\u7b26\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56deflase\u3002 equals \u7528\u6765\u6bd4\u8f83 \u67d0\u4e9b\u7279\u5f81 \u662f\u5426\u4e00\u6837\u3002\u6211\u4eec\u5e73\u65f6\u7528\u7684String\u7c7b\u7b49\u7684equals\u65b9\u6cd5\u90fd\u662f\u91cd\u5199\u540e\u7684\uff0c\u5b9e\u73b0\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9\u662f\u5426\u76f8\u7b49\u3002 String\u3001StringBuffer\u548cStringBuilder\u533a\u522b 1. \u6570\u636e\u53ef\u53d8\u548c\u4e0d\u53ef\u53d8 String \u5e95\u5c42\u4f7f\u7528\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u5b57\u7b26\u6570\u7ec4 private final char value[]; \u6240\u4ee5\u5b83\u5185\u5bb9\u4e0d\u53ef\u53d8\u3002 StringBuffer \u548c StringBuilder \u90fd\u7ee7\u627f\u4e86 AbstractStringBuilder \u5e95\u5c42\u4f7f\u7528\u7684\u662f\u53ef\u53d8\u5b57\u7b26\u6570\u7ec4\uff1a char[] value; 2. \u7ebf\u7a0b\u5b89\u5168 StringBuilder \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c\u6548\u7387\u8f83\u9ad8\uff1b\u800c StringBuffer \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6548\u7387\u8f83\u4f4e\u3002 \u901a\u8fc7\u4ed6\u4eec\u7684 append() \u65b9\u6cd5\u6765\u770b\uff0c StringBuffer \u662f\u6709\u540c\u6b65\u9501\uff0c\u800c StringBuilder \u6ca1\u6709\uff1a @Override public synchronized StringBuffer append(Object obj) { toStringCache = null; super.append(String.valueOf(obj)); return this; } @Override public StringBuilder append(String str) { super.append(str); return this; } 3. \u76f8\u540c\u70b9 StringBuilder \u4e0e StringBuffer \u6709\u516c\u5171\u7236\u7c7b AbstractStringBuilder \u3002 \u6700\u540e\uff0c\u64cd\u4f5c\u53ef\u53d8\u5b57\u7b26\u4e32\u901f\u5ea6\uff1a StringBuilder > StringBuffer > String \uff0c\u8fd9\u4e2a\u7b54\u6848\u5c31\u663e\u5f97\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002 \u8c08\u8c08final, finally, finalize\u7684\u533a\u522b\u3002 final\uff1a \u4fee\u9970\u7b26\uff08\u5173\u952e\u5b57\uff09\u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u58f0\u660e\u4e3afinal\uff0c\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u518d\u6d3e\u751f\u51fa\u65b0\u7684\u5b50\u7c7b\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u7236\u7c7b\u88ab\u7ee7\u627f\u3002\u56e0\u6b64\u4e00\u4e2a\u7c7b\u4e0d\u80fd\u65e2\u88ab\u58f0\u660e\u4e3a abstract\u7684\uff0c\u53c8\u88ab\u58f0\u660e\u4e3afinal\u7684\u3002\u5c06\u53d8\u91cf\u6216\u65b9\u6cd5\u58f0\u660e\u4e3afinal\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u4eec\u5728\u4f7f\u7528\u4e2d\u4e0d\u88ab\u6539\u53d8\u3002\u88ab\u58f0\u660e\u4e3afinal\u7684\u53d8\u91cf\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u7ed9\u5b9a\u521d\u503c\uff0c\u800c\u5728\u4ee5\u540e\u7684\u5f15\u7528\u4e2d\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u53ef\u4fee\u6539\u3002\u88ab\u58f0\u660e\u4e3afinal\u7684\u65b9\u6cd5\u4e5f\u540c\u6837\u53ea\u80fd\u4f7f\u7528\uff0c\u4e0d\u80fd\u91cd\u8f7d \u3002 finally\uff1a \u5728\u5f02\u5e38\u5904\u7406\u65f6\u63d0\u4f9b finally \u5757\u6765\u6267\u884c\u4efb\u4f55\u6e05\u9664\u64cd\u4f5c\u3002\u5982\u679c\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u90a3\u4e48\u76f8\u5339\u914d\u7684 catch \u5b50\u53e5\u5c31\u4f1a\u6267\u884c\uff0c\u7136\u540e\u63a7\u5236\u5c31\u4f1a\u8fdb\u5165 finally \u5757\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 finalize\uff1a \u65b9\u6cd5\u540d\u3002Java \u6280\u672f\u5141\u8bb8\u4f7f\u7528 finalize() \u65b9\u6cd5\u5728\u5783\u573e\u6536\u96c6\u5668\u5c06\u5bf9\u8c61\u4ece\u5185\u5b58\u4e2d\u6e05\u9664\u51fa\u53bb\u4e4b\u524d\u505a\u5fc5\u8981\u7684\u6e05\u7406\u5de5\u4f5c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7531\u5783\u573e\u6536\u96c6\u5668\u5728\u786e\u5b9a\u8fd9\u4e2a\u5bf9\u8c61\u6ca1\u6709\u88ab\u5f15\u7528\u65f6\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8c03\u7528\u7684\u3002\u5b83\u662f\u5728 Object\u7c7b\u4e2d\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684\u7c7b\u90fd\u7ee7\u627f\u4e86\u5b83\u3002\u5b50\u7c7b\u8986\u76d6 finalize() \u65b9\u6cd5\u4ee5\u6574\u7406\u7cfb\u7edf\u8d44\u6e90\u6216\u8005\u6267\u884c\u5176\u4ed6\u6e05\u7406\u5de5\u4f5c\u3002finalize() \u65b9\u6cd5\u662f\u5728\u5783\u573e\u6536\u96c6\u5668\u5220\u9664\u5bf9\u8c61\u4e4b\u524d\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8c03\u7528\u7684\u3002 \u8bb2\u4e00\u4e0bJava\u4e2d\u7684\u96c6\u5408 Collection\u4e0b\uff1aList\u7cfb(\u6709\u5e8f\u3001\u5143\u7d20\u5141\u8bb8\u91cd\u590d)\u548cSet\u7cfb(\u65e0\u5e8f\u3001\u5143\u7d20\u4e0d\u91cd\u590d) set\u6839\u636eequals\u548chashcode\u5224\u65ad\uff0c\u4e00\u4e2a\u5bf9\u8c61\u8981\u5b58\u50a8\u5728Set\u4e2d\uff0c\u5fc5\u987b\u91cd\u5199equals\u548chashCode\u65b9\u6cd5 Map\u4e0b\uff1aHashMap\u7ebf\u7a0b\u4e0d\u540c\u6b65\uff1bTreeMap\u7ebf\u7a0b\u540c\u6b65 Collection\u7cfb\u5217\u548cMap\u7cfb\u5217\uff1aMap\u662f\u5bf9Collection\u7684\u8865\u5145\uff0c\u4e24\u4e2a\u6ca1\u4ec0\u4e48\u5173\u7cfb \u4e24\u4e2a\u5bf9\u8c61\u7684hashCode\u76f8\u540c\uff0c\u5219equals\u4e5f\u4e00\u5b9a\u4e3atrue\uff0c\u5bf9\u5417\uff1f \u4e0d\u5bf9\uff0c\u7b54\u6848\u89c1\u4e0b\u9762\u7684\u4ee3\u7801\uff1a @Override public int hashCode() { return 1; } \u4e24\u4e2a\u5bf9\u8c61equals\u4e3atrue\uff0c\u5219hashCode\u4e5f\u4e00\u5b9a\u76f8\u540c\uff0c\u5bf9\u5417\uff1f \u8fd9\u5757\u80af\u5b9a\u662f\u6709\u4e89\u8bae\u7684\u3002\u9762\u8bd5\u7684\u65f6\u5019\u8fd9\u6837\u7b54\uff1a\u5982\u679c\u6309\u7167\u5b98\u65b9\u8bbe\u8ba1\u8981\u6c42\u6765\u6253\u4ee3\u7801\u7684\u8bdd\uff0chashcode\u4e00\u5b9a\u76f8\u7b49\u3002\u4f46\u662f\u5982\u679c\u4e0d\u6309\u5b98\u65b9\u7167\u8bbe\u8ba1\u8981\u6c42\u3001\u4e0d\u91cd\u5199hashcode\u65b9\u6cd5\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\u3002 java\u7ebf\u7a0b\u6c60\u7528\u8fc7\u6ca1\u6709\uff1f Executors\u63d0\u4f9b\u4e86\u56db\u79cd\u65b9\u6cd5\u6765\u521b\u5efa\u7ebf\u7a0b\u6c60\u3002 newFixedThreadPool() :\u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\u3002 newCachedThreadPool(): \u521b\u5efa\u65e0\u9650\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf\u4e0d\u56fa\u5b9a\uff0c\u53ef\u6839\u636e\u9700\u6c42\u81ea\u52a8\u66f4\u6539\u3002 newSingleThreadPool() : \u521b\u5efa\u5355\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u3002 newScheduledThreadPool() \u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\uff0c\u53ef\u4ee5\u5ef6\u8fdf\u6216\u5b9a\u65f6\u7684\u6267\u884c\u4efb\u52a1\u3002 \u624b\u5199\u4e00\u4e2a\uff1a public static void main ( String [] args ) { ExecutorService threadPool = Executors . newCachedThreadPool (); threadPool . execute (() -> { for ( int i = 0 ; i < 20 ; i ++ ) { System . out . println ( Thread . currentThread (). getName () + \":\" + i ); } }); threadPool . shutdown (); } \u7ebf\u7a0b\u6c60\u4f5c\u7528 \u9650\u5236\u7ebf\u7a0b\u4e2a\u6570\uff0c\u907f\u514d\u7ebf\u7a0b\u8fc7\u591a\u5bfc\u81f4\u7cfb\u7edf\u8fd0\u884c\u7f13\u6162\u6216\u5d29\u6e83\u3002 \u4e0d\u9700\u8981\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\uff0c\u8282\u7ea6\u8d44\u6e90\u3001\u54cd\u5e94\u66f4\u5feb\u3002 static\u548cfinal\u533a\u522b \u5173\u952e\u8bcd \u4fee\u9970\u7269 \u5f71\u54cd final \u53d8\u91cf \u5206\u914d\u5230\u5e38\u91cf\u6c60\u4e2d\uff0c\u7a0b\u5e8f\u4e0d\u53ef\u6539\u53d8\u5176\u503c final \u65b9\u6cd5 \u5b50\u7c7b\u4e2d\u5c06\u4e0d\u80fd\u88ab\u91cd\u5199 final \u7c7b \u4e0d\u80fd\u88ab\u7ee7\u627f static \u53d8\u91cf \u5206\u914d\u5728\u5185\u5b58\u5806\u4e0a\uff0c\u5f15\u7528\u90fd\u4f1a\u6307\u5411\u8fd9\u4e00\u4e2a\u5730\u5740\u800c\u4e0d\u4f1a\u91cd\u65b0\u5206\u914d\u5185\u5b58 static \u65b9\u6cd5\u5757 \u865a\u62df\u673a\u4f18\u5148\u52a0\u8f7d static \u7c7b \u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u6765\u8c03\u7528\u800c\u4e0d\u9700\u8981new String s = \"hello\"\u548cString s = new String(\"hello\");\u533a\u522b String s = new String(\"hello\"); \u53ef\u80fd\u521b\u5efa\u4e24\u4e2a\u5bf9\u8c61\u4e5f\u53ef\u80fd\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u5e38\u91cf\u6c60\u4e2d\u6709 hello \u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u8bdd\uff0c\u5219\u4ec5\u4ec5\u5728\u5806\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u5e38\u91cf\u6c60\u4e2d\u6ca1\u6709 hello \u5bf9\u8c61\uff0c\u5219\u5806\u4e0a\u548c\u5e38\u91cf\u6c60\u90fd\u9700\u8981\u521b\u5efa\u3002 String s = \"hello\" \u8fd9\u6837\u521b\u5efa\u7684\u5bf9\u8c61\uff0cJVM\u4f1a\u76f4\u63a5\u68c0\u67e5\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u662f\u5426\u5df2\u6709\"hello\"\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5982\u6ca1\u6709\uff0c\u5c31\u5206\u914d\u4e00\u4e2a\u5185\u5b58\u5b58\u653e\"hello\"\uff0c\u5982\u6709\u4e86\uff0c\u5219\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u7684\u5730\u5740\u8fd4\u56de\u7ed9\u6808\u3002(\u6ca1\u6709new\uff0c\u6ca1\u6709\u5806\u7684\u64cd\u4f5c) \u5f15\u7528\u7c7b\u578b\u662f\u5360\u7528\u51e0\u4e2a\u5b57\u8282\uff1f hotspot\u572864\u4f4d\u5e73\u53f0\u4e0a\uff0c\u53608\u4e2a\u5b57\u8282\uff0c\u572832\u4f4d\u5e73\u53f0\u4e0a\u53604\u4e2a\u5b57\u8282\u3002 JVM\u4e2d\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b 1. \u62ff\u5230\u5185\u5b58\u521b\u5efa\u6307\u4ee4 \u5f53\u865a\u62df\u673a\u9047\u5230\u5185\u5b58\u521b\u5efa\u7684\u6307\u4ee4\u7684\u65f6\u5019\uff08new \u7c7b\u540d\uff09\uff0c\u6765\u5230\u4e86\u65b9\u6cd5\u533a\uff0c\u627e \u6839\u636enew\u7684\u53c2\u6570\u5728\u5e38\u91cf\u6c60\u4e2d\u5b9a\u4f4d\u4e00\u4e2a\u7c7b\u7684\u7b26\u53f7\u5f15\u7528\u3002 2. \u68c0\u67e5\u7b26\u53f7\u5f15\u7528 \u68c0\u67e5\u8be5\u7b26\u53f7\u5f15\u7528\u6709\u6ca1\u6709\u88ab\u52a0\u8f7d\u3001\u89e3\u6790\u548c\u521d\u59cb\u5316\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\u5219\u6267\u884c\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\uff0c\u5426\u5219\u76f4\u63a5\u51c6\u5907\u4e3a\u65b0\u7684\u5bf9\u8c61\u5206\u914d\u5185\u5b58 3. \u5206\u914d\u5185\u5b58 \u865a\u62df\u673a\u4e3a\u5bf9\u8c61\u5206\u914d\u5185\u5b58\uff08\u5806\uff09\u5206\u914d\u5185\u5b58\u5206\u4e3a\u6307\u9488\u78b0\u649e\u548c\u7a7a\u95f2\u5217\u8868\u4e24\u79cd\u65b9\u5f0f\uff1b\u5206\u914d\u5185\u5b58\u8fd8\u8981\u8981\u4fdd\u8bc1\u5e76\u53d1\u5b89\u5168\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u3002 3.1. \u6307\u9488\u78b0\u649e \u6240\u6709\u7684\u5b58\u50a8\u7a7a\u95f4\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u7a7a\u95f2\uff0c\u4e00\u90e8\u5206\u662f\u5360\u7528\uff0c\u9700\u8981\u5206\u914d\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u6307\u9488\u79fb\u52a8\u7684\u957f\u5ea6\u5373\u53ef\u3002 3.2. \u7a7a\u95f2\u5217\u8868 \u865a\u62df\u673a\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7a7a\u95f2\u5217\u8868\uff0c\u9700\u8981\u5206\u914d\u7a7a\u95f4\u7684\u65f6\u5019\u53bb\u67e5\u8be5\u7a7a\u95f2\u5217\u8868\u8fdb\u884c\u5206\u914d\u5e76\u5bf9\u7a7a\u95f2\u5217\u8868\u505a\u66f4\u65b0\u3002 \u53ef\u4ee5\u770b\u51fa\uff0c\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u662f\u7531java\u5806\u662f\u5426\u89c4\u6574\u51b3\u5b9a\u7684\uff0cjava\u5806\u7684\u89c4\u6574\u662f\u7531\u5783\u573e\u56de\u6536\u673a\u5236\u6765\u51b3\u5b9a\u7684 3.2.1 \u5b89\u5168\u6027\u95ee\u9898\u7684\u601d\u8003 \u5047\u5982\u5206\u914d\u5185\u5b58\u7b56\u7565\u662f\u6307\u9488\u78b0\u649e\uff0c\u5982\u679c\u5728\u9ad8\u5e76\u53d1\u60c5\u51b5\u4e0b\uff0c\u591a\u4e2a\u5bf9\u8c61\u9700\u8981\u5206\u914d\u5185\u5b58\uff0c\u5982\u679c\u4e0d\u505a\u5904\u7406\uff0c\u80af\u5b9a\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u5bfc\u81f4\u4e00\u4e9b\u5bf9\u8c61\u5206\u914d\u4e0d\u5230\u7a7a\u95f4\u7b49\u3002 \u4e0b\u9762\u662f\u89e3\u51b3\u65b9\u6848\uff1a 3.3 \u7ebf\u7a0b\u540c\u6b65\u7b56\u7565 \u4e5f\u5c31\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8fdb\u884c\u540c\u6b65\uff0c\u9632\u6b62\u51fa\u73b0\u7ebf\u7a0b\u5b89\u5168\u3002 3.4. \u672c\u5730\u7ebf\u7a0b\u5206\u914d\u7f13\u51b2 \u4e5f\u79f0TLAB\uff08Thread Local Allocation Buffer\uff09\uff0c\u5728\u5806\u4e2d\u4e3a\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u5c0f\u5757\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u8fd9\u6837\u4ee5\u6765\u5c31\u4e0d\u5b58\u5e76\u53d1\u95ee\u9898\u4e86\uff0cJava \u5c42\u9762\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f ThreadLocal \u7c7b\u7684\u5b9e\u73b0 4. \u521d\u59cb\u5316 \u5206\u914d\u5b8c\u5185\u5b58\u540e\u8981\u5bf9\u5bf9\u8c61\u7684\u5934\uff08Object Header\uff09\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65b0\u4fe1\u606f\u5305\u62ec\uff1a\u8be5\u5bf9\u8c61\u5bf9\u5e94\u7c7b\u7684\u5143\u6570\u636e\u3001\u8be5\u5bf9\u8c61\u7684GC\u4ee3\u3001\u5bf9\u8c61\u7684\u54c8\u5e0c\u7801\u3002 \u62bd\u8c61\u6570\u636e\u7c7b\u578b\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3anull\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e3a0\uff0c\u5e03\u5c14\u4e3afalse.... 5. \u8c03\u7528\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u65b9\u6cd5 \u4e5f\u5c31\u662f\u6267\u884c\u6784\u9020\u65b9\u6cd5\u3002 \u7f13\u5b58\u96ea\u5d29\u3001\u7f13\u5b58\u7a7f\u900f\u3001\u7f13\u5b58\u51fb\u7a7f \u7f13\u5b58\u96ea\u5d29\u662f\u6307\u7f13\u5b58\u540c\u4e00\u65f6\u95f4\u5927\u91cf\u5931\u6548\uff0c\u8bf7\u6c42\u5927\u91cf\u843d\u5230\u6570\u636e\u5e93\u4e0a\uff0c\u9020\u6210\u6570\u636e\u5e93\u77ed\u65f6\u95f4\u5185\u627f\u53d7\u5927\u91cf\u8bf7\u6c42\u800c\u5d29\u6389\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u7f13\u5b58\u6570\u636e\u7684\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u968f\u673a\uff0c\u9632\u6b62\u540c\u4e00\u65f6\u95f4\u5927\u91cf\u6570\u636e\u8fc7\u671f \u7ed9\u6bcf\u4e00\u4e2a\u70ed\u70b9\u6570\u636e\u589e\u52a0\u76f8\u5e94\u7684\u7f13\u5b58\u6807\u8bb0\uff0c\u8bb0\u5f55\u7f13\u5b58\u662f\u5426\u5931\u6548\uff0c\u5982\u679c\u7f13\u5b58\u6807\u8bb0\u5931\u6548\uff0c\u5219\u66f4\u65b0\u6570\u636e\u7f13\u5b58\u3002 \u7f13\u5b58\u9884\u70ed \u4e92\u65a5\u9501 \u7f13\u5b58\u7a7f\u900f\u662f\u6307\u5b58\u548c\u6570\u636e\u5e93\u4e2d\u90fd\u6ca1\u6709\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u843d\u5230\u6570\u636e\u5e93\u4e0a\uff0c\u9020\u6210\u6570\u636e\u5e93\u77ed\u65f6\u95f4\u5185\u627f\u53d7\u5927\u91cf\u8bf7\u6c42\u800c\u5d29\u6389\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u63a5\u53e3\u5c42\u52a0\u6821\u9a8c\uff0c\u975e\u6cd5\u53c2\u6570\u4e0d\u67e5\u6570\u636e\u5e93 \u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u7f13\u5b58\u4e3anull\uff0c\u5931\u6548\u65f6\u95f4\u8bbe\u7f6e\u77ed\u70b9 \u7f13\u5b58\u51fb\u7a7f\u662f\u6307\u5b58\u4e2d\u6ca1\u6709\u4f46\u6570\u636e\u5e93\u4e2d\u6709\u7684\u6570\u636e\uff08\u4e00\u822c\u662f\u7f13\u5b58\u65f6\u95f4\u5230\u671f\uff09\uff0c\u8fd9\u65f6\u7531\u4e8e\u5e76\u53d1\u7528\u6237\u7279\u5225\u591a\uff0c\u540c\u65f6\u8bfb\u5b58\u6ca1\u8bfb\u5230\u6570\u636e\uff0c\u53c8\u540c\u65f6\u53bb\u6570\u636e\u5e93\u53bb\u53d6\u6570\u636e\uff0c\u5f15\u8d77\u6570\u636e\u5e93\u538b\u529b\u77ac\u95f4\u5897\u5927\uff0c\u9020\u6210\u8fc7\u5927\u538b\u529b\u3002\u548c\u5b58\u96ea\u5d29\u4e0d\u540c\u7684\u662f\uff0c\u5b58\u51fb\u7a7f\u6307\u5e76\u53d1\u67e5\u540c\u4e00\u6761\u6570\u636e\uff0c\u7f13\u5b58\u96ea\u5d29\u662f\u4e0d\u540c\u6570\u636e\u90fd\u8fc7\u671f\u4e86\uff0c\u5f88\u591a\u6570\u636e\u90fd\u67e5\u4e0d\u5230\u4ece\u800c\u67e5\u6570\u636e\u5e93\u3002 \u89e3\u51b3\u65b9\u6848 \u8bbe\u7f6e\u70ed\u70b9\u6570\u636e\u6c38\u8fdc\u4e0d\u8fc7\u671f\u3002 \u52a0\u4e92\u65a5\u9501","title":"\u9762\u8bd5\u9898"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#_1","text":"","title":"\u9762\u8bd5\u9898"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#arraylistlinkedlist","text":"ArrayList\u662f\u5b9e\u73b0\u4e86\u57fa\u4e8e\u52a8\u6001\u6570\u7ec4\u7684\u6570\u636e\u7ed3\u6784\uff0cLinkedList\u57fa\u4e8e\u94fe\u8868\u7684\u6570\u636e\u7ed3\u6784 \u5bf9\u4e8e\u968f\u673a\u8bbf\u95eeget\u548cset\uff0cArrayList\u7edd\u5bf9\u4f18\u4e8eLinkedList\uff0c\u56e0\u4e3aLinkedList\u8981\u79fb\u52a8\u6307\u9488 \u5bf9\u4e8e\u65b0\u589e\u548c\u5220\u9664\u64cd\u4f5cadd\u548cremove\uff0cLinkedList\u6bd4\u8f83\u5360\u4f18\u52bf\uff0c\u56e0\u4e3aArrayList\u8981\u79fb\u52a8\u6570\u636e ArrayList\u5e38\u7528for\u5faa\u73af\u904d\u5386\uff0cLinkedList\u5e38\u7528iterator\u904d\u5386\uff0c\u56e0\u4e3aArrayList\u5b9e\u73b0\u4e86RandomAccess\u63a5\u53e3 LinkedList\u4e0d\u80fdget\u3001set\u8bbf\u95ee","title":"ArrayList\u548cLinkedList\u7684\u533a\u522b"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#hashmaphashtableconcurrenthashmap","text":"\u76f8\u540c\u70b9: HashMap\u548cHashtable\u90fd\u5b9e\u73b0\u4e86Map\u63a5\u53e3 \u90fd\u53ef\u4ee5\u5b58\u50a8key-value\u6570\u636e \u4e0d\u540c\u70b9\uff1a HashMap\u53ef\u4ee5\u628anull\u4f5c\u4e3akey\u6216value\uff0cHashTable\u4e0d\u53ef\u4ee5 HashMap\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u6548\u7387\u9ad8\u3002HashTable\u7ebf\u7a0b\u5b89\u5168\uff0c\u6548\u7387\u4f4e\u3002 HashMap\u7684\u8fed\u4ee3\u5668(Iterator)\u662ffail-fast\u8fed\u4ee3\u5668\uff0c\u800cHashtable\u7684enumerator\u8fed\u4ee3\u5668\u4e0d\u662ffail-fast\u7684\u3002","title":"HashMap\u548cHashTable\u3001ConcurrentHashMap\u533a\u522b"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#equals","text":"== \u8f83\u7684\u662f\u4e24\u4e2a\u5f15\u7528\u5728\u5185\u5b58\u4e2d\u6307\u5411\u7684\u662f\u4e0d\u662f\u540c\u4e00\u5bf9\u8c61\uff08\u5373\u540c\u4e00\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\u662f\u5426\u4e00\u81f4\u3002\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u76f8\u540c\u65f6\uff08\u6307\u5411\u540c\u4e00\u5bf9\u8c61\u65f6\uff09\uff0c\u201c==\u201d\u64cd\u4f5c\u7b26\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56deflase\u3002 equals \u7528\u6765\u6bd4\u8f83 \u67d0\u4e9b\u7279\u5f81 \u662f\u5426\u4e00\u6837\u3002\u6211\u4eec\u5e73\u65f6\u7528\u7684String\u7c7b\u7b49\u7684equals\u65b9\u6cd5\u90fd\u662f\u91cd\u5199\u540e\u7684\uff0c\u5b9e\u73b0\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9\u662f\u5426\u76f8\u7b49\u3002","title":"==\u548cequals\u533a\u522b"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#stringstringbufferstringbuilder","text":"","title":"String\u3001StringBuffer\u548cStringBuilder\u533a\u522b"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#1","text":"String \u5e95\u5c42\u4f7f\u7528\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u5b57\u7b26\u6570\u7ec4 private final char value[]; \u6240\u4ee5\u5b83\u5185\u5bb9\u4e0d\u53ef\u53d8\u3002 StringBuffer \u548c StringBuilder \u90fd\u7ee7\u627f\u4e86 AbstractStringBuilder \u5e95\u5c42\u4f7f\u7528\u7684\u662f\u53ef\u53d8\u5b57\u7b26\u6570\u7ec4\uff1a char[] value;","title":"1. \u6570\u636e\u53ef\u53d8\u548c\u4e0d\u53ef\u53d8"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#2","text":"StringBuilder \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c\u6548\u7387\u8f83\u9ad8\uff1b\u800c StringBuffer \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6548\u7387\u8f83\u4f4e\u3002 \u901a\u8fc7\u4ed6\u4eec\u7684 append() \u65b9\u6cd5\u6765\u770b\uff0c StringBuffer \u662f\u6709\u540c\u6b65\u9501\uff0c\u800c StringBuilder \u6ca1\u6709\uff1a @Override public synchronized StringBuffer append(Object obj) { toStringCache = null; super.append(String.valueOf(obj)); return this; } @Override public StringBuilder append(String str) { super.append(str); return this; }","title":"2. \u7ebf\u7a0b\u5b89\u5168"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#3","text":"StringBuilder \u4e0e StringBuffer \u6709\u516c\u5171\u7236\u7c7b AbstractStringBuilder \u3002 \u6700\u540e\uff0c\u64cd\u4f5c\u53ef\u53d8\u5b57\u7b26\u4e32\u901f\u5ea6\uff1a StringBuilder > StringBuffer > String \uff0c\u8fd9\u4e2a\u7b54\u6848\u5c31\u663e\u5f97\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002","title":"3. \u76f8\u540c\u70b9"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#final-finally-finalize","text":"final\uff1a \u4fee\u9970\u7b26\uff08\u5173\u952e\u5b57\uff09\u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u58f0\u660e\u4e3afinal\uff0c\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u518d\u6d3e\u751f\u51fa\u65b0\u7684\u5b50\u7c7b\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u7236\u7c7b\u88ab\u7ee7\u627f\u3002\u56e0\u6b64\u4e00\u4e2a\u7c7b\u4e0d\u80fd\u65e2\u88ab\u58f0\u660e\u4e3a abstract\u7684\uff0c\u53c8\u88ab\u58f0\u660e\u4e3afinal\u7684\u3002\u5c06\u53d8\u91cf\u6216\u65b9\u6cd5\u58f0\u660e\u4e3afinal\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u4eec\u5728\u4f7f\u7528\u4e2d\u4e0d\u88ab\u6539\u53d8\u3002\u88ab\u58f0\u660e\u4e3afinal\u7684\u53d8\u91cf\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u7ed9\u5b9a\u521d\u503c\uff0c\u800c\u5728\u4ee5\u540e\u7684\u5f15\u7528\u4e2d\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u53ef\u4fee\u6539\u3002\u88ab\u58f0\u660e\u4e3afinal\u7684\u65b9\u6cd5\u4e5f\u540c\u6837\u53ea\u80fd\u4f7f\u7528\uff0c\u4e0d\u80fd\u91cd\u8f7d \u3002 finally\uff1a \u5728\u5f02\u5e38\u5904\u7406\u65f6\u63d0\u4f9b finally \u5757\u6765\u6267\u884c\u4efb\u4f55\u6e05\u9664\u64cd\u4f5c\u3002\u5982\u679c\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u90a3\u4e48\u76f8\u5339\u914d\u7684 catch \u5b50\u53e5\u5c31\u4f1a\u6267\u884c\uff0c\u7136\u540e\u63a7\u5236\u5c31\u4f1a\u8fdb\u5165 finally \u5757\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 finalize\uff1a \u65b9\u6cd5\u540d\u3002Java \u6280\u672f\u5141\u8bb8\u4f7f\u7528 finalize() \u65b9\u6cd5\u5728\u5783\u573e\u6536\u96c6\u5668\u5c06\u5bf9\u8c61\u4ece\u5185\u5b58\u4e2d\u6e05\u9664\u51fa\u53bb\u4e4b\u524d\u505a\u5fc5\u8981\u7684\u6e05\u7406\u5de5\u4f5c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7531\u5783\u573e\u6536\u96c6\u5668\u5728\u786e\u5b9a\u8fd9\u4e2a\u5bf9\u8c61\u6ca1\u6709\u88ab\u5f15\u7528\u65f6\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8c03\u7528\u7684\u3002\u5b83\u662f\u5728 Object\u7c7b\u4e2d\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684\u7c7b\u90fd\u7ee7\u627f\u4e86\u5b83\u3002\u5b50\u7c7b\u8986\u76d6 finalize() \u65b9\u6cd5\u4ee5\u6574\u7406\u7cfb\u7edf\u8d44\u6e90\u6216\u8005\u6267\u884c\u5176\u4ed6\u6e05\u7406\u5de5\u4f5c\u3002finalize() \u65b9\u6cd5\u662f\u5728\u5783\u573e\u6536\u96c6\u5668\u5220\u9664\u5bf9\u8c61\u4e4b\u524d\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8c03\u7528\u7684\u3002","title":"\u8c08\u8c08final, finally, finalize\u7684\u533a\u522b\u3002"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#java","text":"Collection\u4e0b\uff1aList\u7cfb(\u6709\u5e8f\u3001\u5143\u7d20\u5141\u8bb8\u91cd\u590d)\u548cSet\u7cfb(\u65e0\u5e8f\u3001\u5143\u7d20\u4e0d\u91cd\u590d) set\u6839\u636eequals\u548chashcode\u5224\u65ad\uff0c\u4e00\u4e2a\u5bf9\u8c61\u8981\u5b58\u50a8\u5728Set\u4e2d\uff0c\u5fc5\u987b\u91cd\u5199equals\u548chashCode\u65b9\u6cd5 Map\u4e0b\uff1aHashMap\u7ebf\u7a0b\u4e0d\u540c\u6b65\uff1bTreeMap\u7ebf\u7a0b\u540c\u6b65 Collection\u7cfb\u5217\u548cMap\u7cfb\u5217\uff1aMap\u662f\u5bf9Collection\u7684\u8865\u5145\uff0c\u4e24\u4e2a\u6ca1\u4ec0\u4e48\u5173\u7cfb","title":"\u8bb2\u4e00\u4e0bJava\u4e2d\u7684\u96c6\u5408"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#hashcodeequalstrue","text":"\u4e0d\u5bf9\uff0c\u7b54\u6848\u89c1\u4e0b\u9762\u7684\u4ee3\u7801\uff1a @Override public int hashCode() { return 1; }","title":"\u4e24\u4e2a\u5bf9\u8c61\u7684hashCode\u76f8\u540c\uff0c\u5219equals\u4e5f\u4e00\u5b9a\u4e3atrue\uff0c\u5bf9\u5417\uff1f"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#equalstruehashcode","text":"\u8fd9\u5757\u80af\u5b9a\u662f\u6709\u4e89\u8bae\u7684\u3002\u9762\u8bd5\u7684\u65f6\u5019\u8fd9\u6837\u7b54\uff1a\u5982\u679c\u6309\u7167\u5b98\u65b9\u8bbe\u8ba1\u8981\u6c42\u6765\u6253\u4ee3\u7801\u7684\u8bdd\uff0chashcode\u4e00\u5b9a\u76f8\u7b49\u3002\u4f46\u662f\u5982\u679c\u4e0d\u6309\u5b98\u65b9\u7167\u8bbe\u8ba1\u8981\u6c42\u3001\u4e0d\u91cd\u5199hashcode\u65b9\u6cd5\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\u3002","title":"\u4e24\u4e2a\u5bf9\u8c61equals\u4e3atrue\uff0c\u5219hashCode\u4e5f\u4e00\u5b9a\u76f8\u540c\uff0c\u5bf9\u5417\uff1f"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#java_1","text":"Executors\u63d0\u4f9b\u4e86\u56db\u79cd\u65b9\u6cd5\u6765\u521b\u5efa\u7ebf\u7a0b\u6c60\u3002 newFixedThreadPool() :\u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\u3002 newCachedThreadPool(): \u521b\u5efa\u65e0\u9650\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf\u4e0d\u56fa\u5b9a\uff0c\u53ef\u6839\u636e\u9700\u6c42\u81ea\u52a8\u66f4\u6539\u3002 newSingleThreadPool() : \u521b\u5efa\u5355\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u3002 newScheduledThreadPool() \u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\uff0c\u53ef\u4ee5\u5ef6\u8fdf\u6216\u5b9a\u65f6\u7684\u6267\u884c\u4efb\u52a1\u3002 \u624b\u5199\u4e00\u4e2a\uff1a public static void main ( String [] args ) { ExecutorService threadPool = Executors . newCachedThreadPool (); threadPool . execute (() -> { for ( int i = 0 ; i < 20 ; i ++ ) { System . out . println ( Thread . currentThread (). getName () + \":\" + i ); } }); threadPool . shutdown (); }","title":"java\u7ebf\u7a0b\u6c60\u7528\u8fc7\u6ca1\u6709\uff1f"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#_2","text":"\u9650\u5236\u7ebf\u7a0b\u4e2a\u6570\uff0c\u907f\u514d\u7ebf\u7a0b\u8fc7\u591a\u5bfc\u81f4\u7cfb\u7edf\u8fd0\u884c\u7f13\u6162\u6216\u5d29\u6e83\u3002 \u4e0d\u9700\u8981\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\uff0c\u8282\u7ea6\u8d44\u6e90\u3001\u54cd\u5e94\u66f4\u5feb\u3002","title":"\u7ebf\u7a0b\u6c60\u4f5c\u7528"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#staticfinal","text":"\u5173\u952e\u8bcd \u4fee\u9970\u7269 \u5f71\u54cd final \u53d8\u91cf \u5206\u914d\u5230\u5e38\u91cf\u6c60\u4e2d\uff0c\u7a0b\u5e8f\u4e0d\u53ef\u6539\u53d8\u5176\u503c final \u65b9\u6cd5 \u5b50\u7c7b\u4e2d\u5c06\u4e0d\u80fd\u88ab\u91cd\u5199 final \u7c7b \u4e0d\u80fd\u88ab\u7ee7\u627f static \u53d8\u91cf \u5206\u914d\u5728\u5185\u5b58\u5806\u4e0a\uff0c\u5f15\u7528\u90fd\u4f1a\u6307\u5411\u8fd9\u4e00\u4e2a\u5730\u5740\u800c\u4e0d\u4f1a\u91cd\u65b0\u5206\u914d\u5185\u5b58 static \u65b9\u6cd5\u5757 \u865a\u62df\u673a\u4f18\u5148\u52a0\u8f7d static \u7c7b \u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u6765\u8c03\u7528\u800c\u4e0d\u9700\u8981new","title":"static\u548cfinal\u533a\u522b"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#string-s-hellostring-s-new-stringhello","text":"String s = new String(\"hello\"); \u53ef\u80fd\u521b\u5efa\u4e24\u4e2a\u5bf9\u8c61\u4e5f\u53ef\u80fd\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u5e38\u91cf\u6c60\u4e2d\u6709 hello \u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u8bdd\uff0c\u5219\u4ec5\u4ec5\u5728\u5806\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u5e38\u91cf\u6c60\u4e2d\u6ca1\u6709 hello \u5bf9\u8c61\uff0c\u5219\u5806\u4e0a\u548c\u5e38\u91cf\u6c60\u90fd\u9700\u8981\u521b\u5efa\u3002 String s = \"hello\" \u8fd9\u6837\u521b\u5efa\u7684\u5bf9\u8c61\uff0cJVM\u4f1a\u76f4\u63a5\u68c0\u67e5\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u662f\u5426\u5df2\u6709\"hello\"\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5982\u6ca1\u6709\uff0c\u5c31\u5206\u914d\u4e00\u4e2a\u5185\u5b58\u5b58\u653e\"hello\"\uff0c\u5982\u6709\u4e86\uff0c\u5219\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u7684\u5730\u5740\u8fd4\u56de\u7ed9\u6808\u3002(\u6ca1\u6709new\uff0c\u6ca1\u6709\u5806\u7684\u64cd\u4f5c)","title":"String s = \"hello\"\u548cString s = new String(\"hello\");\u533a\u522b"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#_3","text":"hotspot\u572864\u4f4d\u5e73\u53f0\u4e0a\uff0c\u53608\u4e2a\u5b57\u8282\uff0c\u572832\u4f4d\u5e73\u53f0\u4e0a\u53604\u4e2a\u5b57\u8282\u3002","title":"\u5f15\u7528\u7c7b\u578b\u662f\u5360\u7528\u51e0\u4e2a\u5b57\u8282\uff1f"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#jvm","text":"","title":"JVM\u4e2d\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#1_1","text":"\u5f53\u865a\u62df\u673a\u9047\u5230\u5185\u5b58\u521b\u5efa\u7684\u6307\u4ee4\u7684\u65f6\u5019\uff08new \u7c7b\u540d\uff09\uff0c\u6765\u5230\u4e86\u65b9\u6cd5\u533a\uff0c\u627e \u6839\u636enew\u7684\u53c2\u6570\u5728\u5e38\u91cf\u6c60\u4e2d\u5b9a\u4f4d\u4e00\u4e2a\u7c7b\u7684\u7b26\u53f7\u5f15\u7528\u3002","title":"1. \u62ff\u5230\u5185\u5b58\u521b\u5efa\u6307\u4ee4"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#2_1","text":"\u68c0\u67e5\u8be5\u7b26\u53f7\u5f15\u7528\u6709\u6ca1\u6709\u88ab\u52a0\u8f7d\u3001\u89e3\u6790\u548c\u521d\u59cb\u5316\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\u5219\u6267\u884c\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\uff0c\u5426\u5219\u76f4\u63a5\u51c6\u5907\u4e3a\u65b0\u7684\u5bf9\u8c61\u5206\u914d\u5185\u5b58","title":"2. \u68c0\u67e5\u7b26\u53f7\u5f15\u7528"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#3_1","text":"\u865a\u62df\u673a\u4e3a\u5bf9\u8c61\u5206\u914d\u5185\u5b58\uff08\u5806\uff09\u5206\u914d\u5185\u5b58\u5206\u4e3a\u6307\u9488\u78b0\u649e\u548c\u7a7a\u95f2\u5217\u8868\u4e24\u79cd\u65b9\u5f0f\uff1b\u5206\u914d\u5185\u5b58\u8fd8\u8981\u8981\u4fdd\u8bc1\u5e76\u53d1\u5b89\u5168\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u3002","title":"3. \u5206\u914d\u5185\u5b58"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#31","text":"\u6240\u6709\u7684\u5b58\u50a8\u7a7a\u95f4\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u7a7a\u95f2\uff0c\u4e00\u90e8\u5206\u662f\u5360\u7528\uff0c\u9700\u8981\u5206\u914d\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u6307\u9488\u79fb\u52a8\u7684\u957f\u5ea6\u5373\u53ef\u3002","title":"3.1. \u6307\u9488\u78b0\u649e"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#32","text":"\u865a\u62df\u673a\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7a7a\u95f2\u5217\u8868\uff0c\u9700\u8981\u5206\u914d\u7a7a\u95f4\u7684\u65f6\u5019\u53bb\u67e5\u8be5\u7a7a\u95f2\u5217\u8868\u8fdb\u884c\u5206\u914d\u5e76\u5bf9\u7a7a\u95f2\u5217\u8868\u505a\u66f4\u65b0\u3002 \u53ef\u4ee5\u770b\u51fa\uff0c\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u662f\u7531java\u5806\u662f\u5426\u89c4\u6574\u51b3\u5b9a\u7684\uff0cjava\u5806\u7684\u89c4\u6574\u662f\u7531\u5783\u573e\u56de\u6536\u673a\u5236\u6765\u51b3\u5b9a\u7684","title":"3.2. \u7a7a\u95f2\u5217\u8868"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#321","text":"\u5047\u5982\u5206\u914d\u5185\u5b58\u7b56\u7565\u662f\u6307\u9488\u78b0\u649e\uff0c\u5982\u679c\u5728\u9ad8\u5e76\u53d1\u60c5\u51b5\u4e0b\uff0c\u591a\u4e2a\u5bf9\u8c61\u9700\u8981\u5206\u914d\u5185\u5b58\uff0c\u5982\u679c\u4e0d\u505a\u5904\u7406\uff0c\u80af\u5b9a\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u5bfc\u81f4\u4e00\u4e9b\u5bf9\u8c61\u5206\u914d\u4e0d\u5230\u7a7a\u95f4\u7b49\u3002 \u4e0b\u9762\u662f\u89e3\u51b3\u65b9\u6848\uff1a","title":"3.2.1 \u5b89\u5168\u6027\u95ee\u9898\u7684\u601d\u8003"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#33","text":"\u4e5f\u5c31\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8fdb\u884c\u540c\u6b65\uff0c\u9632\u6b62\u51fa\u73b0\u7ebf\u7a0b\u5b89\u5168\u3002","title":"3.3 \u7ebf\u7a0b\u540c\u6b65\u7b56\u7565"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#34","text":"\u4e5f\u79f0TLAB\uff08Thread Local Allocation Buffer\uff09\uff0c\u5728\u5806\u4e2d\u4e3a\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u5c0f\u5757\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u8fd9\u6837\u4ee5\u6765\u5c31\u4e0d\u5b58\u5e76\u53d1\u95ee\u9898\u4e86\uff0cJava \u5c42\u9762\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f ThreadLocal \u7c7b\u7684\u5b9e\u73b0","title":"3.4. \u672c\u5730\u7ebf\u7a0b\u5206\u914d\u7f13\u51b2"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#4","text":"\u5206\u914d\u5b8c\u5185\u5b58\u540e\u8981\u5bf9\u5bf9\u8c61\u7684\u5934\uff08Object Header\uff09\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65b0\u4fe1\u606f\u5305\u62ec\uff1a\u8be5\u5bf9\u8c61\u5bf9\u5e94\u7c7b\u7684\u5143\u6570\u636e\u3001\u8be5\u5bf9\u8c61\u7684GC\u4ee3\u3001\u5bf9\u8c61\u7684\u54c8\u5e0c\u7801\u3002 \u62bd\u8c61\u6570\u636e\u7c7b\u578b\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3anull\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e3a0\uff0c\u5e03\u5c14\u4e3afalse....","title":"4. \u521d\u59cb\u5316"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#5","text":"\u4e5f\u5c31\u662f\u6267\u884c\u6784\u9020\u65b9\u6cd5\u3002","title":"5. \u8c03\u7528\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u65b9\u6cd5"},{"location":"develop/%E9%9D%A2%E8%AF%95%E9%A2%98/#_4","text":"\u7f13\u5b58\u96ea\u5d29\u662f\u6307\u7f13\u5b58\u540c\u4e00\u65f6\u95f4\u5927\u91cf\u5931\u6548\uff0c\u8bf7\u6c42\u5927\u91cf\u843d\u5230\u6570\u636e\u5e93\u4e0a\uff0c\u9020\u6210\u6570\u636e\u5e93\u77ed\u65f6\u95f4\u5185\u627f\u53d7\u5927\u91cf\u8bf7\u6c42\u800c\u5d29\u6389\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u7f13\u5b58\u6570\u636e\u7684\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u968f\u673a\uff0c\u9632\u6b62\u540c\u4e00\u65f6\u95f4\u5927\u91cf\u6570\u636e\u8fc7\u671f \u7ed9\u6bcf\u4e00\u4e2a\u70ed\u70b9\u6570\u636e\u589e\u52a0\u76f8\u5e94\u7684\u7f13\u5b58\u6807\u8bb0\uff0c\u8bb0\u5f55\u7f13\u5b58\u662f\u5426\u5931\u6548\uff0c\u5982\u679c\u7f13\u5b58\u6807\u8bb0\u5931\u6548\uff0c\u5219\u66f4\u65b0\u6570\u636e\u7f13\u5b58\u3002 \u7f13\u5b58\u9884\u70ed \u4e92\u65a5\u9501 \u7f13\u5b58\u7a7f\u900f\u662f\u6307\u5b58\u548c\u6570\u636e\u5e93\u4e2d\u90fd\u6ca1\u6709\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u843d\u5230\u6570\u636e\u5e93\u4e0a\uff0c\u9020\u6210\u6570\u636e\u5e93\u77ed\u65f6\u95f4\u5185\u627f\u53d7\u5927\u91cf\u8bf7\u6c42\u800c\u5d29\u6389\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u63a5\u53e3\u5c42\u52a0\u6821\u9a8c\uff0c\u975e\u6cd5\u53c2\u6570\u4e0d\u67e5\u6570\u636e\u5e93 \u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u7f13\u5b58\u4e3anull\uff0c\u5931\u6548\u65f6\u95f4\u8bbe\u7f6e\u77ed\u70b9 \u7f13\u5b58\u51fb\u7a7f\u662f\u6307\u5b58\u4e2d\u6ca1\u6709\u4f46\u6570\u636e\u5e93\u4e2d\u6709\u7684\u6570\u636e\uff08\u4e00\u822c\u662f\u7f13\u5b58\u65f6\u95f4\u5230\u671f\uff09\uff0c\u8fd9\u65f6\u7531\u4e8e\u5e76\u53d1\u7528\u6237\u7279\u5225\u591a\uff0c\u540c\u65f6\u8bfb\u5b58\u6ca1\u8bfb\u5230\u6570\u636e\uff0c\u53c8\u540c\u65f6\u53bb\u6570\u636e\u5e93\u53bb\u53d6\u6570\u636e\uff0c\u5f15\u8d77\u6570\u636e\u5e93\u538b\u529b\u77ac\u95f4\u5897\u5927\uff0c\u9020\u6210\u8fc7\u5927\u538b\u529b\u3002\u548c\u5b58\u96ea\u5d29\u4e0d\u540c\u7684\u662f\uff0c\u5b58\u51fb\u7a7f\u6307\u5e76\u53d1\u67e5\u540c\u4e00\u6761\u6570\u636e\uff0c\u7f13\u5b58\u96ea\u5d29\u662f\u4e0d\u540c\u6570\u636e\u90fd\u8fc7\u671f\u4e86\uff0c\u5f88\u591a\u6570\u636e\u90fd\u67e5\u4e0d\u5230\u4ece\u800c\u67e5\u6570\u636e\u5e93\u3002 \u89e3\u51b3\u65b9\u6848 \u8bbe\u7f6e\u70ed\u70b9\u6570\u636e\u6c38\u8fdc\u4e0d\u8fc7\u671f\u3002 \u52a0\u4e92\u65a5\u9501","title":"\u7f13\u5b58\u96ea\u5d29\u3001\u7f13\u5b58\u7a7f\u900f\u3001\u7f13\u5b58\u51fb\u7a7f"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/","text":"aws\u538b\u7f29\u56fe\u7247 \u672c\u6587\u4ecb\u7ecd\u4e24\u79cd\u65b9\u5f0f\uff0c\u7f51\u5173\u538b\u7f29\u56fe\u7247\uff0c\u548c\u4e0a\u4f20\u65f6\u538b\u7f29\u56fe\u7247 \u4ee3\u7801\u9644\u4ef6 aws\u7f51\u5173\u538b\u7f29\u56fe\u7247 \u4f7f\u7528AWS Lambda\uff0cAPI Gateway\u548cS3\u5b9e\u73b0\u7b80\u5355\u7684\u56fe\u50cf\u5927\u5c0f\u8c03\u6574\u4efb\u52a1 aws\u7f51\u5173\u538b\u7f29\u56fe\u7247\u5de5\u4f5c\u6d41\u7a0b \u7528\u6237\u5c06\u4f7f\u7528\u56fe\u50cf\u5927\u5c0f\u53c2\u6570\uff08\u5bbd\u5ea6/\u9ad8\u5ea6\uff09\u5411API\u7f51\u5173\u53d1\u9001\u8bf7\u6c42\uff0c\u4ee5\u4fbf\u63a5\u6536\u5df2\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u7684s3 URL\uff0c API\u7f51\u5173\u8bf7\u6c42\u5c06\u89e6\u53d1lambda\u51fd\u6570\uff0c lambda\u51fd\u6570\u68c0\u67e5\u5177\u6709\u7ed9\u5b9a\u5927\u5c0f\u7684\u56fe\u50cf\u662f\u5426\u5b58\u5728\uff0c\u5b58\u5728\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u5b58\u5728\u521b\u5efa\u540e\u8fd4\u56de \u4e0b\u9762\u662faws\u7f51\u5173\u538b\u7f29\u56fe\u7247\u914d\u7f6e\u5b9e\u8df5 lambda\u51fd\u6570\u914d\u7f6e \u8fd9\u91cc\u4e3b\u8981\u53c2\u8003https://github.com/obytes/resize_s3_images \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0caws\u7684python\u8fd0\u884c\u73af\u5883\u6ca1\u6709 PIL \u5e93\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\uff0c\u672c\u6587\u4f7f\u7528python3.6\u7248\u672c\u7684\u4f9d\u8d56\u5e93 $ ls Pillow-6.1.0-cp36-cp36m-manylinux1_x86_64.whl GatewayResize.py $ unzip Pillow-6.1.0-cp36-cp36m-manylinux1_x86_64.whl && rm Pillow-6.1.0-cp36-cp36m-manylinux1_x86_64.whl $ zip -r GatewayResize.zip . \u5728AWS Lambda\u4eea\u8868\u677f\u4e0a\u8f7d\u538b\u7f29\u6587\u4ef6 \u8bbe\u7f6e\u5904\u7406\u7a0b\u5e8f\u5730\u5740 \u672c\u6587\u7f51\u5173\u538b\u7f29\u4f7f\u7528\u7684\u65b9\u6cd5\u662fGatewayResize.lambda_handler \u6dfb\u52a0\u73af\u5883\u53d8\u91cf \u672c\u6587\u811a\u672c\u4f7f\u7528\u5230\u7684\u914d\u7f6eBUCKET_DOMAIN\u548cBUCKET_NAME\uff08\u8fd9\u91cc\u7684BUCKET_NAME\u5e94\u8be5\u4e0d\u5fc5\u5199\u6b7b\uff0c\u672c\u6587\u4ee3\u7801\u5e93\u4e2d\u4e0a\u4f20\u65f6\u538b\u7f29\u811a\u672cCreateThumbnail.py\u4e2d\u6709\u83b7\u53d6\u65b9\u5f0f\uff0c\u53ea\u662f\u5927\u591a\u751f\u4ea7\u73af\u5883\u53ea\u4f7f\u7528\u4e00\u4e2abucket\u5e76\u4f7f\u7528\u81ea\u5df1\u7684\u57df\u540d\uff0c\u56e0\u6b64\u672c\u6587\u4f7f\u7528\u56fa\u5b9abucket\uff09 \u7f51\u5173\u914d\u7f6e \u63a7\u5236\u53f0\u641c\u7d22api gateway\u5e76\u70b9\u51fb\u8fdb\u5165 \u521b\u5efaapi \u7f51\u5173\u6d4b\u8bd5 \u67e5\u8be2\u5b57\u7b26\u4e32\u5199\u5165get\u53c2\u6570\uff0ckey=xxx.png&size=200x200\uff0c\u8fd4\u56decode\u7801\u4e3a301\uff0c\u6b63\u6587\u4e3a\u56fe\u7247\u538b\u7f29\u540e\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e0b\u6b21\u8bbf\u95ee\u5373\u53ef\u76f4\u63a5\u8bbf\u95ee\u8fd4\u56de\u7684\u5730\u5740\uff0c\u4e0d\u7528\u7ecf\u8fc7\u7f51\u5173 \u53d1\u5e03api\u5230\u516c\u7f51 \u53d1\u5e03\u540e\u5373\u53ef\u5f97\u5230\u516c\u7f51\u5730\u5740 aws\u4e0a\u4f20\u65f6\u538b\u7f29\u56fe\u7247 \u8fd9\u91cc\u7528\u5230\u7684Python\u811a\u672c\u5982\u662f\u672c\u6587\u4ee3\u7801\u4e2d\u7684CreateThumbnail.py lambda\u51fd\u6570\u914d\u7f6e \u4e0eaws\u7f51\u5173\u538b\u7f29\u56fe\u7247\u914d\u7f6e\u4e00\u81f4\uff0c \u8fd0\u884c\u65f6\u8bbe\u7f6e \u4e2d\u7684 \u5904\u7406\u7a0b\u5e8f \u9700\u8981\u6539\u6210CreateThumbnail.handler \u6dfb\u52a0\u89e6\u53d1\u5668 \u70b9\u51fb\u6dfb\u52a0\u89e6\u53d1\u5668 \u6d4b\u8bd5\u89e6\u53d1\u5668 \u5c06json\u4e2d\u7684example-bucket\u6362\u6210\u76ee\u6807bucket\uff0c\u5c06test/key\u6362\u6210s3\u4e2d\u5b58\u5728\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u70b9\u51fb\u6d4b\u8bd5\uff0c \u5982\u679c\u5931\u8d25\uff0c\u6709\u53ef\u80fd\u662fpython\u73af\u5883\u914d\u7f6e\u9519\u8bef\uff0c\u6216\u8005\u662f\u6743\u9650\u95ee\u9898\uff0c\u8bf7google\u89e3\u51b3 \u672c\u6587\u53c2\u8003\uff1a \u4f7f\u7528AWS Lambda\uff0cAPI Gateway\u548cS3 Storage\u5feb\u901f\u8c03\u6574\u56fe\u7247\u5927\u5c0f AWS\u4e0a\u5982\u4f55\u5b9e\u73b0S3\u6876\u4e0a\u4f20\u56fe\u7247\u81ea\u52a8\u7f29\u653e","title":"aws\u538b\u7f29\u56fe\u7247"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#aws","text":"\u672c\u6587\u4ecb\u7ecd\u4e24\u79cd\u65b9\u5f0f\uff0c\u7f51\u5173\u538b\u7f29\u56fe\u7247\uff0c\u548c\u4e0a\u4f20\u65f6\u538b\u7f29\u56fe\u7247 \u4ee3\u7801\u9644\u4ef6","title":"aws\u538b\u7f29\u56fe\u7247"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#aws_1","text":"\u4f7f\u7528AWS Lambda\uff0cAPI Gateway\u548cS3\u5b9e\u73b0\u7b80\u5355\u7684\u56fe\u50cf\u5927\u5c0f\u8c03\u6574\u4efb\u52a1 aws\u7f51\u5173\u538b\u7f29\u56fe\u7247\u5de5\u4f5c\u6d41\u7a0b \u7528\u6237\u5c06\u4f7f\u7528\u56fe\u50cf\u5927\u5c0f\u53c2\u6570\uff08\u5bbd\u5ea6/\u9ad8\u5ea6\uff09\u5411API\u7f51\u5173\u53d1\u9001\u8bf7\u6c42\uff0c\u4ee5\u4fbf\u63a5\u6536\u5df2\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u7684s3 URL\uff0c API\u7f51\u5173\u8bf7\u6c42\u5c06\u89e6\u53d1lambda\u51fd\u6570\uff0c lambda\u51fd\u6570\u68c0\u67e5\u5177\u6709\u7ed9\u5b9a\u5927\u5c0f\u7684\u56fe\u50cf\u662f\u5426\u5b58\u5728\uff0c\u5b58\u5728\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u5b58\u5728\u521b\u5efa\u540e\u8fd4\u56de \u4e0b\u9762\u662faws\u7f51\u5173\u538b\u7f29\u56fe\u7247\u914d\u7f6e\u5b9e\u8df5","title":"aws\u7f51\u5173\u538b\u7f29\u56fe\u7247"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#lambda","text":"\u8fd9\u91cc\u4e3b\u8981\u53c2\u8003https://github.com/obytes/resize_s3_images \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0caws\u7684python\u8fd0\u884c\u73af\u5883\u6ca1\u6709 PIL \u5e93\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\uff0c\u672c\u6587\u4f7f\u7528python3.6\u7248\u672c\u7684\u4f9d\u8d56\u5e93 $ ls Pillow-6.1.0-cp36-cp36m-manylinux1_x86_64.whl GatewayResize.py $ unzip Pillow-6.1.0-cp36-cp36m-manylinux1_x86_64.whl && rm Pillow-6.1.0-cp36-cp36m-manylinux1_x86_64.whl $ zip -r GatewayResize.zip .","title":"lambda\u51fd\u6570\u914d\u7f6e"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#aws-lambda","text":"","title":"\u5728AWS Lambda\u4eea\u8868\u677f\u4e0a\u8f7d\u538b\u7f29\u6587\u4ef6"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#_1","text":"\u672c\u6587\u7f51\u5173\u538b\u7f29\u4f7f\u7528\u7684\u65b9\u6cd5\u662fGatewayResize.lambda_handler","title":"\u8bbe\u7f6e\u5904\u7406\u7a0b\u5e8f\u5730\u5740"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#_2","text":"\u672c\u6587\u811a\u672c\u4f7f\u7528\u5230\u7684\u914d\u7f6eBUCKET_DOMAIN\u548cBUCKET_NAME\uff08\u8fd9\u91cc\u7684BUCKET_NAME\u5e94\u8be5\u4e0d\u5fc5\u5199\u6b7b\uff0c\u672c\u6587\u4ee3\u7801\u5e93\u4e2d\u4e0a\u4f20\u65f6\u538b\u7f29\u811a\u672cCreateThumbnail.py\u4e2d\u6709\u83b7\u53d6\u65b9\u5f0f\uff0c\u53ea\u662f\u5927\u591a\u751f\u4ea7\u73af\u5883\u53ea\u4f7f\u7528\u4e00\u4e2abucket\u5e76\u4f7f\u7528\u81ea\u5df1\u7684\u57df\u540d\uff0c\u56e0\u6b64\u672c\u6587\u4f7f\u7528\u56fa\u5b9abucket\uff09","title":"\u6dfb\u52a0\u73af\u5883\u53d8\u91cf"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#_3","text":"\u63a7\u5236\u53f0\u641c\u7d22api gateway\u5e76\u70b9\u51fb\u8fdb\u5165 \u521b\u5efaapi","title":"\u7f51\u5173\u914d\u7f6e"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#_4","text":"\u67e5\u8be2\u5b57\u7b26\u4e32\u5199\u5165get\u53c2\u6570\uff0ckey=xxx.png&size=200x200\uff0c\u8fd4\u56decode\u7801\u4e3a301\uff0c\u6b63\u6587\u4e3a\u56fe\u7247\u538b\u7f29\u540e\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e0b\u6b21\u8bbf\u95ee\u5373\u53ef\u76f4\u63a5\u8bbf\u95ee\u8fd4\u56de\u7684\u5730\u5740\uff0c\u4e0d\u7528\u7ecf\u8fc7\u7f51\u5173","title":"\u7f51\u5173\u6d4b\u8bd5"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#api","text":"\u53d1\u5e03\u540e\u5373\u53ef\u5f97\u5230\u516c\u7f51\u5730\u5740","title":"\u53d1\u5e03api\u5230\u516c\u7f51"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#aws_2","text":"\u8fd9\u91cc\u7528\u5230\u7684Python\u811a\u672c\u5982\u662f\u672c\u6587\u4ee3\u7801\u4e2d\u7684CreateThumbnail.py","title":"aws\u4e0a\u4f20\u65f6\u538b\u7f29\u56fe\u7247"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#lambda_1","text":"\u4e0eaws\u7f51\u5173\u538b\u7f29\u56fe\u7247\u914d\u7f6e\u4e00\u81f4\uff0c \u8fd0\u884c\u65f6\u8bbe\u7f6e \u4e2d\u7684 \u5904\u7406\u7a0b\u5e8f \u9700\u8981\u6539\u6210CreateThumbnail.handler","title":"lambda\u51fd\u6570\u914d\u7f6e"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#_5","text":"\u70b9\u51fb\u6dfb\u52a0\u89e6\u53d1\u5668","title":"\u6dfb\u52a0\u89e6\u53d1\u5668"},{"location":"other/aws%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/#_6","text":"\u5c06json\u4e2d\u7684example-bucket\u6362\u6210\u76ee\u6807bucket\uff0c\u5c06test/key\u6362\u6210s3\u4e2d\u5b58\u5728\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u70b9\u51fb\u6d4b\u8bd5\uff0c \u5982\u679c\u5931\u8d25\uff0c\u6709\u53ef\u80fd\u662fpython\u73af\u5883\u914d\u7f6e\u9519\u8bef\uff0c\u6216\u8005\u662f\u6743\u9650\u95ee\u9898\uff0c\u8bf7google\u89e3\u51b3 \u672c\u6587\u53c2\u8003\uff1a \u4f7f\u7528AWS Lambda\uff0cAPI Gateway\u548cS3 Storage\u5feb\u901f\u8c03\u6574\u56fe\u7247\u5927\u5c0f AWS\u4e0a\u5982\u4f55\u5b9e\u73b0S3\u6876\u4e0a\u4f20\u56fe\u7247\u81ea\u52a8\u7f29\u653e","title":"\u6d4b\u8bd5\u89e6\u53d1\u5668"},{"location":"other/%E4%BD%BF%E7%94%A8gmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E9%AA%8C%E8%AF%81%E7%A0%81/","text":"\u4f7f\u7528gmail\u53d1\u9001\u90ae\u4ef6\u9a8c\u8bc1\u7801 \u6ce8\u518c\u90ae\u7bb1 \u6b64\u6b65\u4e0d\u505a\u8fc7\u591a\u8d58\u8ff0 \u8bbe\u7f6e\u4e8c\u6b65\u9a8c\u8bc1 \u8bbe\u7f6e\u4e13\u7528\u5bc6\u7801 \u5982\u4e0a\u56fe\uff0c\u5f00\u542f\u4e24\u6b65\u9a8c\u8bc1\u540e\uff0c\u4f1a\u51fa\u73b0 \u5e94\u7528\u4e13\u7528\u5bc6\u7801 tab\uff0c\u70b9\u51fb\u8bbe\u7f6e\u4e13\u7528\u5bc6\u7801\u5373\u53ef \u9879\u76ee\u914d\u7f6e MAIL_DRIVER = smtp MAIL_HOST = smtp.qq.com MAIL_PORT = 587 MAIL_USERNAME = xxx@gmail.com MAIL_PASSWORD = xxxx MAIL_ENCRYPTION = tls MAIL_PASSWORD\u5199\u751f\u6210\u7684\u4e13\u7528\u5bc6\u7801 \u672c\u6587\u53c2\u8003google\u6587\u6863 \u4f7f\u7528\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u767b\u5f55 - Google \u5e10\u53f7\u5e2e\u52a9 \u4f7f\u7528\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u767b\u5f55 - Google \u5e10\u53f7\u5e2e\u52a9 \u672c\u6587\u4f7f\u7528laravel\u6846\u67b6\uff0c\u5728\u7528ssl\u534f\u8bae465\u7aef\u53e3\u53d1\u9001\u9a8c\u8bc1\u7801\u65f6\u62a5\u9519 Connection could not be established with host smtp.gmail.com :stream_socket_client(): unable to connect to ssl://smtp.gmail.com:465 (Operation timed out) \u6539\u6210tls\u534f\u8bae587\u7aef\u53e3\u540e\u4e0d\u518d\u62a5\u9519","title":"\u4f7f\u7528gmail\u53d1\u9001\u90ae\u4ef6\u9a8c\u8bc1\u7801"},{"location":"other/%E4%BD%BF%E7%94%A8gmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E9%AA%8C%E8%AF%81%E7%A0%81/#gmail","text":"","title":"\u4f7f\u7528gmail\u53d1\u9001\u90ae\u4ef6\u9a8c\u8bc1\u7801"},{"location":"other/%E4%BD%BF%E7%94%A8gmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E9%AA%8C%E8%AF%81%E7%A0%81/#_1","text":"\u6b64\u6b65\u4e0d\u505a\u8fc7\u591a\u8d58\u8ff0","title":"\u6ce8\u518c\u90ae\u7bb1"},{"location":"other/%E4%BD%BF%E7%94%A8gmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E9%AA%8C%E8%AF%81%E7%A0%81/#_2","text":"","title":"\u8bbe\u7f6e\u4e8c\u6b65\u9a8c\u8bc1"},{"location":"other/%E4%BD%BF%E7%94%A8gmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E9%AA%8C%E8%AF%81%E7%A0%81/#_3","text":"\u5982\u4e0a\u56fe\uff0c\u5f00\u542f\u4e24\u6b65\u9a8c\u8bc1\u540e\uff0c\u4f1a\u51fa\u73b0 \u5e94\u7528\u4e13\u7528\u5bc6\u7801 tab\uff0c\u70b9\u51fb\u8bbe\u7f6e\u4e13\u7528\u5bc6\u7801\u5373\u53ef","title":"\u8bbe\u7f6e\u4e13\u7528\u5bc6\u7801"},{"location":"other/%E4%BD%BF%E7%94%A8gmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E9%AA%8C%E8%AF%81%E7%A0%81/#_4","text":"MAIL_DRIVER = smtp MAIL_HOST = smtp.qq.com MAIL_PORT = 587 MAIL_USERNAME = xxx@gmail.com MAIL_PASSWORD = xxxx MAIL_ENCRYPTION = tls MAIL_PASSWORD\u5199\u751f\u6210\u7684\u4e13\u7528\u5bc6\u7801 \u672c\u6587\u53c2\u8003google\u6587\u6863 \u4f7f\u7528\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u767b\u5f55 - Google \u5e10\u53f7\u5e2e\u52a9 \u4f7f\u7528\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u767b\u5f55 - Google \u5e10\u53f7\u5e2e\u52a9 \u672c\u6587\u4f7f\u7528laravel\u6846\u67b6\uff0c\u5728\u7528ssl\u534f\u8bae465\u7aef\u53e3\u53d1\u9001\u9a8c\u8bc1\u7801\u65f6\u62a5\u9519 Connection could not be established with host smtp.gmail.com :stream_socket_client(): unable to connect to ssl://smtp.gmail.com:465 (Operation timed out) \u6539\u6210tls\u534f\u8bae587\u7aef\u53e3\u540e\u4e0d\u518d\u62a5\u9519","title":"\u9879\u76ee\u914d\u7f6e"},{"location":"tools/git/","text":"git \u6682\u5b58 git stash save { \u6682\u5b58\u8bf4\u660e } git stash list \u67e5\u770b\u6240\u6709\u6682\u5b58 git stash apply { \u6682\u5b58\u540d } \u5e94\u7528\u6682\u5b58 \u64a4\u9500 git reset \u2014mixed\uff1a#\u6b64\u4e3a\u9ed8\u8ba4\u65b9\u5f0f\uff0c\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684git reset\uff0c\u5373\u65f6\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5b83\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u4fdd\u7559\u6e90\u7801\uff0c\u56de\u9000commit\u548cindex\u4fe1\u606f git reset \u2014soft\uff1a #\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u56de\u9000\u4e86commit\u7684\u4fe1\u606f\uff0c\u4e0d\u4f1a\u6062\u590d\u5230index file\u4e00\u7ea7\u3002\u5982\u679c\u8fd8\u8981\u63d0\u4ea4\uff0c\u76f4\u63a5commit\u5373\u53ef git reset \u2014hard\uff1a#\u5f7b\u5e95\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u672c\u5730\u7684\u6e90\u7801\u4e5f\u4f1a\u53d8\u4e3a\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5185\u5bb9\uff0c\u614e\u7528\uff01 \u5bf9\u6bd4\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u65e5\u5fd7 git log { branch } ^origin/ { branch } #\u67e5\u770b\u672a\u63a8\u9001\u7684\u63d0\u4ea4 git log origin/ { branch } #\u67e5\u770b\u8fdc\u7a0b\u65e5\u5fd7 git log { branch } \u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730 git checkout -b { branchname } origin/ { branchname } \u67e5\u770b\u6307\u5b9a\u5206\u652f\u65e5\u5fd7 git show { commitid } \u67e5\u770b\u67d0\u4e2a\u6587\u4ef6\u6700\u8fd1n\u6b21\u7684\u4fee\u6539\u5386\u53f2 git log -p {filename} -n \u67e5\u770b\u7248\u672c\u5386\u53f2\u56fe git log --graph \u6253tag git tag -a { tagname } -m { message } { commitid } #\u5bf9\u67d0\u6b21\u63d0\u4ea4\u6253tag git tag #\u67e5\u770b\u6240\u6709\u6807\u7b7e git show { tagname } #\u67e5\u770b\u6807\u7b7e\u4fe1\u606f \u63cf\u8ff0 git branch \u2014edit-description { branchname } \u5220\u9664\u8fdc\u7a0b\u5206\u652f git branch -d { branchname } #\u5220\u9664\u672c\u5730\u5206\u652f git push origin \u2014delete { branchname } #\u5220\u9664\u8fdc\u7a0b\u5206\u652f ssh\u516c\u94a5\u514d\u5bc6\u7801 ssh-add ~/.ssh/id_rsa","title":"git"},{"location":"tools/git/#git","text":"","title":"git"},{"location":"tools/git/#_1","text":"git stash save { \u6682\u5b58\u8bf4\u660e } git stash list \u67e5\u770b\u6240\u6709\u6682\u5b58 git stash apply { \u6682\u5b58\u540d } \u5e94\u7528\u6682\u5b58","title":"\u6682\u5b58"},{"location":"tools/git/#_2","text":"git reset \u2014mixed\uff1a#\u6b64\u4e3a\u9ed8\u8ba4\u65b9\u5f0f\uff0c\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684git reset\uff0c\u5373\u65f6\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5b83\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u4fdd\u7559\u6e90\u7801\uff0c\u56de\u9000commit\u548cindex\u4fe1\u606f git reset \u2014soft\uff1a #\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u53ea\u56de\u9000\u4e86commit\u7684\u4fe1\u606f\uff0c\u4e0d\u4f1a\u6062\u590d\u5230index file\u4e00\u7ea7\u3002\u5982\u679c\u8fd8\u8981\u63d0\u4ea4\uff0c\u76f4\u63a5commit\u5373\u53ef git reset \u2014hard\uff1a#\u5f7b\u5e95\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u672c\u5730\u7684\u6e90\u7801\u4e5f\u4f1a\u53d8\u4e3a\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5185\u5bb9\uff0c\u614e\u7528\uff01","title":"\u64a4\u9500"},{"location":"tools/git/#_3","text":"git log { branch } ^origin/ { branch } #\u67e5\u770b\u672a\u63a8\u9001\u7684\u63d0\u4ea4 git log origin/ { branch } #\u67e5\u770b\u8fdc\u7a0b\u65e5\u5fd7 git log { branch }","title":"\u5bf9\u6bd4\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u65e5\u5fd7"},{"location":"tools/git/#_4","text":"git checkout -b { branchname } origin/ { branchname }","title":"\u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730"},{"location":"tools/git/#_5","text":"git show { commitid }","title":"\u67e5\u770b\u6307\u5b9a\u5206\u652f\u65e5\u5fd7"},{"location":"tools/git/#n","text":"git log -p {filename} -n","title":"\u67e5\u770b\u67d0\u4e2a\u6587\u4ef6\u6700\u8fd1n\u6b21\u7684\u4fee\u6539\u5386\u53f2"},{"location":"tools/git/#_6","text":"git log --graph","title":"\u67e5\u770b\u7248\u672c\u5386\u53f2\u56fe"},{"location":"tools/git/#tag","text":"git tag -a { tagname } -m { message } { commitid } #\u5bf9\u67d0\u6b21\u63d0\u4ea4\u6253tag git tag #\u67e5\u770b\u6240\u6709\u6807\u7b7e git show { tagname } #\u67e5\u770b\u6807\u7b7e\u4fe1\u606f","title":"\u6253tag"},{"location":"tools/git/#_7","text":"git branch \u2014edit-description { branchname }","title":"\u63cf\u8ff0"},{"location":"tools/git/#_8","text":"git branch -d { branchname } #\u5220\u9664\u672c\u5730\u5206\u652f git push origin \u2014delete { branchname } #\u5220\u9664\u8fdc\u7a0b\u5206\u652f","title":"\u5220\u9664\u8fdc\u7a0b\u5206\u652f"},{"location":"tools/git/#ssh","text":"ssh-add ~/.ssh/id_rsa","title":"ssh\u516c\u94a5\u514d\u5bc6\u7801"},{"location":"tools/idea%E6%BF%80%E6%B4%BB/","text":"Mac idea\u6fc0\u6d3b \u5148\u4e0a\u56fe \u6fc0\u6d3b\u6b65\u9aa4\uff1a \u4e0b\u8f7d jetbrains.zip \u5e76\u89e3\u538b\u5f97\u5230fineagent.jar\uff0c\u653e\u5230\u4f60\u7684\u4e3b\u76ee\u5f55\u4e0b\uff0c\u5982/Users/someone/fineagent.jar \u7f16\u8f91idea\u8f6f\u4ef6 /Applications/IntelliJ\\ IDEA.app/Contents/bin/idea.vmoptions \u6587\u4ef6\uff0c\u672b\u5c3e\u52a0\u5165\u5982\u4e0b\u4ee3\u7801 -javaagent:/Users/chenpenghuan/fineagent.jar \u91cd\u542fidea\uff0c\u8f93\u5165\u6fc0\u6d3b\u7801 5AYV1D1RE5-eyJsaWNlbnNlSWQiOiI1QVlWMUQxUkU1IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly93d3cuaml3ZWljaGVuZ3podS5jb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJEUE4iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUFMiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiQ0wiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUlMwIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJNIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRCIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJTVSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifV0sImhhc2giOiIxMjc5Njg3Ny8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-HNPogO0kWkHCVMnsjmBXUqQt87UPHqdkYqZGveSJtu8hb2V2Yq7gHsHenp4UuEd3jwEwC+YrUIf7U5yDA/56F5Sdn0RLUHZX5DHeQbJPbmYCBsDRT7m8rnmMFOSZn3vwNatvv1cooZbcGOk3Wwxx6bF7XcgaIrmXRcmZMZgv2PZehr0WS1HxNKe3X4nbGP3MwiSbg4ypmxNDrljmgv+Si9QDDwNLDffqeO0Lce0FqEJuMWmvBS42S0aeIYF8IS5bp4+LFKLJ8T7tF40OxKYDurBb9+9c43GZBscM/eLB8Jos66jNGFwgebFUlvhzJKVHZtuc/N8zGeEnTq6K0T/B8w==-MIIDTjCCAjagAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMCAXDTE4MTEwMTEyMjk0NloYDzIwOTkwODA5MDIyNjA3WjAfMR0wGwYDVQQDDBRwcm9kMnktZnJvbS0yMDIwMTAxOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMK3eyr0+Oys/TwcQO+qYaXWGBmXcEP4fR0bHHzZd/4WNGltXhecM80OWthA38BQRYAJBCKz/dSkO2Kj1H2y+7KB5cIaOiJEyTESfTSgzQdot6laRBU8oxy9mmagI46M8zEEmplPybY4YJj4HOwZiBsMQEMxoTgMDLpuHX6uASoVhSj6koB55lOj4wEgsQBeAMWTAXmTl88ixE179J8aBUkBGpL8w/tZzl9BJXZNF15gPfkS58rw8cdPzXLS0Yym37A2/KKFhfHzJc5KhbaxqYzmkAfTMqPsIqCQ1lQUAqfiPn2gN2I1Z3/cQuEW27M55fXVr2DduQe5DWzYJs85L50CAwEAAaOBmTCBljAJBgNVHRMEAjAAMB0GA1UdDgQWBBQk2hEilvWFQcCTR+gxI0z0wIQC/zBIBgNVHSMEQTA/gBSjnrZIZ0ISNkG9beC5tKBSi5fxs6EcpBowGDEWMBQGA1UEAwwNSmV0UHJvZmlsZSBDQYIJANJssYOyg3nhMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDANBgkqhkiG9w0BAQsFAAOCAQEAsCQBjO5wttco/Z5cj/o4GBrku8UtBBBVFq4xsBanshTHm4deVxcTvta4aScV0TPKcaLqGqWx8A9v8XXO8dBbCuyXvWZteZ/C2Covg1xXiM99lz7VxqpjVmLdKanZn5u0gQSiYJdcfF+TdbmEIeSOnN/kLXNq2hXdJQK2zk2J25UZqu5EibRtTbdOzw6ZcfwJ8uOntXfsmAhnNICP3Wf/4wR/mwB0Ka4S+JA3IbF5MUmUZ/fjUaFarnin70us+Vxf/sZUi7u67wilvwVV0NAqDpthHUV0NRc4q+yOr2Dt/uCHdy4XRXLJfAv/z9/xBwNZZALNz3EtQL6IeIWWJByl3g==","title":"Mac idea\u6fc0\u6d3b"},{"location":"tools/idea%E6%BF%80%E6%B4%BB/#mac-idea","text":"\u5148\u4e0a\u56fe","title":"Mac idea\u6fc0\u6d3b"},{"location":"tools/idea%E6%BF%80%E6%B4%BB/#_1","text":"\u4e0b\u8f7d jetbrains.zip \u5e76\u89e3\u538b\u5f97\u5230fineagent.jar\uff0c\u653e\u5230\u4f60\u7684\u4e3b\u76ee\u5f55\u4e0b\uff0c\u5982/Users/someone/fineagent.jar \u7f16\u8f91idea\u8f6f\u4ef6 /Applications/IntelliJ\\ IDEA.app/Contents/bin/idea.vmoptions \u6587\u4ef6\uff0c\u672b\u5c3e\u52a0\u5165\u5982\u4e0b\u4ee3\u7801 -javaagent:/Users/chenpenghuan/fineagent.jar \u91cd\u542fidea\uff0c\u8f93\u5165\u6fc0\u6d3b\u7801 5AYV1D1RE5-eyJsaWNlbnNlSWQiOiI1QVlWMUQxUkU1IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly93d3cuaml3ZWljaGVuZ3podS5jb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJEUE4iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUFMiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiQ0wiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUlMwIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJNIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRCIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJTVSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifV0sImhhc2giOiIxMjc5Njg3Ny8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-HNPogO0kWkHCVMnsjmBXUqQt87UPHqdkYqZGveSJtu8hb2V2Yq7gHsHenp4UuEd3jwEwC+YrUIf7U5yDA/56F5Sdn0RLUHZX5DHeQbJPbmYCBsDRT7m8rnmMFOSZn3vwNatvv1cooZbcGOk3Wwxx6bF7XcgaIrmXRcmZMZgv2PZehr0WS1HxNKe3X4nbGP3MwiSbg4ypmxNDrljmgv+Si9QDDwNLDffqeO0Lce0FqEJuMWmvBS42S0aeIYF8IS5bp4+LFKLJ8T7tF40OxKYDurBb9+9c43GZBscM/eLB8Jos66jNGFwgebFUlvhzJKVHZtuc/N8zGeEnTq6K0T/B8w==-MIIDTjCCAjagAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMCAXDTE4MTEwMTEyMjk0NloYDzIwOTkwODA5MDIyNjA3WjAfMR0wGwYDVQQDDBRwcm9kMnktZnJvbS0yMDIwMTAxOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMK3eyr0+Oys/TwcQO+qYaXWGBmXcEP4fR0bHHzZd/4WNGltXhecM80OWthA38BQRYAJBCKz/dSkO2Kj1H2y+7KB5cIaOiJEyTESfTSgzQdot6laRBU8oxy9mmagI46M8zEEmplPybY4YJj4HOwZiBsMQEMxoTgMDLpuHX6uASoVhSj6koB55lOj4wEgsQBeAMWTAXmTl88ixE179J8aBUkBGpL8w/tZzl9BJXZNF15gPfkS58rw8cdPzXLS0Yym37A2/KKFhfHzJc5KhbaxqYzmkAfTMqPsIqCQ1lQUAqfiPn2gN2I1Z3/cQuEW27M55fXVr2DduQe5DWzYJs85L50CAwEAAaOBmTCBljAJBgNVHRMEAjAAMB0GA1UdDgQWBBQk2hEilvWFQcCTR+gxI0z0wIQC/zBIBgNVHSMEQTA/gBSjnrZIZ0ISNkG9beC5tKBSi5fxs6EcpBowGDEWMBQGA1UEAwwNSmV0UHJvZmlsZSBDQYIJANJssYOyg3nhMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDANBgkqhkiG9w0BAQsFAAOCAQEAsCQBjO5wttco/Z5cj/o4GBrku8UtBBBVFq4xsBanshTHm4deVxcTvta4aScV0TPKcaLqGqWx8A9v8XXO8dBbCuyXvWZteZ/C2Covg1xXiM99lz7VxqpjVmLdKanZn5u0gQSiYJdcfF+TdbmEIeSOnN/kLXNq2hXdJQK2zk2J25UZqu5EibRtTbdOzw6ZcfwJ8uOntXfsmAhnNICP3Wf/4wR/mwB0Ka4S+JA3IbF5MUmUZ/fjUaFarnin70us+Vxf/sZUi7u67wilvwVV0NAqDpthHUV0NRc4q+yOr2Dt/uCHdy4XRXLJfAv/z9/xBwNZZALNz3EtQL6IeIWWJByl3g==","title":"\u6fc0\u6d3b\u6b65\u9aa4\uff1a"},{"location":"tools/macos/","text":"macos mac\u81ea\u542f\u52a8\u8bbe\u7f6e \u4ee5nginx\u4e3a\u4f8b 1.\u7f16\u8f91\u542f\u52a8\u914d\u7f6e\u6587\u4ef6 sudo vim /Library/LaunchDaemons/com.nginx.plist\u52a0\u5165 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version= \"1.0\" > <dict> <key> Label </key> <string> com.nginx.plist </string> <key> ProgramArguments </key> <array> <string> /usr/local/nginx/sbin/nginx </string> </array> <key> KeepAlive </key> <false/> <key> RunAtLoad </key> <true/> <key> StandardErrorPath </key> <string> /usr/local/nginx/logs/error.log </string> <key> StandardOutPath </key> <string> /usr/local/nginx/logs/access.log </string> </dict> </plist> 2.\u4fee\u6539\u6743\u9650 sudo chmod 644 /Library/LaunchDaemons/com.nginx.plist 3.\u6ce8\u518c\u4e3a\u7cfb\u7edf\u670d\u52a1 sudo launchctl load -w /Library/LaunchDaemons/com.nginx.plist \u5378\u8f7d\u4e3asudo launchctl unload -w /Library/LaunchDaemons/com.nginx.plist \u8f6f\u4ef6\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u7684\u89e3\u51b3\u529e\u6cd5 \u5bf9\u4e8eMac\u4e0b\u7a0b\u5e8f\u59cb\u7ec8\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5 \u5173\u95ed\u7a0b\u5e8f\uff1b \u4fee\u6539\u9632\u706b\u5899\uff0c\u628a\u76f8\u5173\u7a0b\u5e8f\u4ece\u9632\u706b\u5899\u7684\u767d\u540d\u5355\u4e2d\u5220\u9664\uff1b \u5220\u9664~/Library/Preferences/com.\u8be5\u7a0b\u5e8f\u540d.plist\u6587\u4ef6\u3002 \u5230\u6b21\u5373\u53ef\uff0c\u91cd\u542f\u7a0b\u5e8f\u540e\u4f1a\u65b0\u5efa\u76f8\u5173\u6587\u4ef6\u5e76\u81ea\u52a8\u4fee\u6539\u9632\u706b\u5899\u4e2d\u76f8\u5173\u5185\u5bb9\uff0c\u8be5\u95ee\u9898\u5df2\u89e3\u51b3\u3002 homebrew # show a list of all your installed Homebrew packages brew list # It will pin the formula to the current version brew pin <formula> maven\u62a5\u9519 The JAVA_HOME environment variable is not defined correctly \u89e3\u51b3\u529e\u6cd5\uff1a # On macOS 10.15 Catalina and later, the default Terminal shell is zsh. For the zsh shell, we can put the environment variables at ~/.zshenv or ~/.zshrc. export JAVA_HOME = $( /usr/libexec/java_home ) # Before macOS 10.15 Catalina, the default Termina shell is bash. For the bash shell, we can put the environment variables at ~/.bash_profile or ~/.bashrc. export JAVA_HOME = $( /usr/libexec/java_home ) \u98de\u5854vpn\u5f00\u6e90\u66ff\u4ee3\u65b9\u6848 \u5b89\u88c5openfortivpn brew install openfortivpn \u7f16\u8f91config\u6587\u4ef6 /usr/local/etc/openfortivpn/openfortivpn/config host = xxx username = xxx password = xxx trusted-cert = xxx \u767b\u5f55vpn sudo openfortivpn charles\u6293\u5305\u914d\u7f6e \u5b89\u88c5charles \u7535\u8111\u4e0a\u5b89\u88c5\u8bc1\u4e66 help>SSL Proxying>Install Charles root Certificate \u624b\u673a\u4e0a\u5b89\u88c5\u8bc1\u4e66 help>SSL Proxying>install charles ...................browser \u8bbe\u7f6e\u6293\u5305\u57df\u540d\u70b9\u51fbproxy>SSL Proxying Settings\u6253\u5f00\u5982\u4e0b\u5f39\u6846\uff0c\u52fe\u9009ssl\u4ee3\u7406\u5f00\u5173\uff0c\u5de6\u4fa7inclide\u4e3a\u9700\u8981\u6293\u53d6\u7684\u4ee3\u7406\uff0c\u586b\u5199\u9700\u8981\u6293\u53d6https\u7684host\uff0cport\u91cc\u586b\u5199443\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u7528*\u53f7\u4ee3\u66ff ios\u5b89\u88c5\u8bc1\u4e66\u548c\u5b89\u5353\u5927\u81f4\u4e0d\u5dee\uff0c\u53ea\u662f\u6bd4\u5b89\u5353\u591a\u51fa\u4e86\u4e00\u6b65\uff0c\u5728\u5b89\u88c5\u4e0b\u8f7d\u5b8c\u8bc1\u4e66\u65f6\uff0c\u9700\u8981\u8ba4\u8bc1\uff1a\u8bbe\u7f6e\u2014>\u901a\u7528\u2014> \u5173\u4e8e\u672c\u673a\u2014>\u8bc1\u4e66\u4fe1\u4efb\u8bbe\u7f6e\uff0c\u4fe1\u4efb\u8be5\u8bc1\u4e66\u540e\u5b89\u88c5\u4fbf\u53ef\u6293https\u8bf7\u6c42\u4e86\u3002","title":"macos"},{"location":"tools/macos/#macos","text":"","title":"macos"},{"location":"tools/macos/#mac","text":"\u4ee5nginx\u4e3a\u4f8b","title":"mac\u81ea\u542f\u52a8\u8bbe\u7f6e"},{"location":"tools/macos/#1","text":"sudo vim /Library/LaunchDaemons/com.nginx.plist\u52a0\u5165 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version= \"1.0\" > <dict> <key> Label </key> <string> com.nginx.plist </string> <key> ProgramArguments </key> <array> <string> /usr/local/nginx/sbin/nginx </string> </array> <key> KeepAlive </key> <false/> <key> RunAtLoad </key> <true/> <key> StandardErrorPath </key> <string> /usr/local/nginx/logs/error.log </string> <key> StandardOutPath </key> <string> /usr/local/nginx/logs/access.log </string> </dict> </plist>","title":"1.\u7f16\u8f91\u542f\u52a8\u914d\u7f6e\u6587\u4ef6"},{"location":"tools/macos/#2","text":"sudo chmod 644 /Library/LaunchDaemons/com.nginx.plist","title":"2.\u4fee\u6539\u6743\u9650"},{"location":"tools/macos/#3","text":"sudo launchctl load -w /Library/LaunchDaemons/com.nginx.plist \u5378\u8f7d\u4e3asudo launchctl unload -w /Library/LaunchDaemons/com.nginx.plist","title":"3.\u6ce8\u518c\u4e3a\u7cfb\u7edf\u670d\u52a1"},{"location":"tools/macos/#_1","text":"\u5bf9\u4e8eMac\u4e0b\u7a0b\u5e8f\u59cb\u7ec8\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5 \u5173\u95ed\u7a0b\u5e8f\uff1b \u4fee\u6539\u9632\u706b\u5899\uff0c\u628a\u76f8\u5173\u7a0b\u5e8f\u4ece\u9632\u706b\u5899\u7684\u767d\u540d\u5355\u4e2d\u5220\u9664\uff1b \u5220\u9664~/Library/Preferences/com.\u8be5\u7a0b\u5e8f\u540d.plist\u6587\u4ef6\u3002 \u5230\u6b21\u5373\u53ef\uff0c\u91cd\u542f\u7a0b\u5e8f\u540e\u4f1a\u65b0\u5efa\u76f8\u5173\u6587\u4ef6\u5e76\u81ea\u52a8\u4fee\u6539\u9632\u706b\u5899\u4e2d\u76f8\u5173\u5185\u5bb9\uff0c\u8be5\u95ee\u9898\u5df2\u89e3\u51b3\u3002","title":"\u8f6f\u4ef6\u8be2\u95ee\u662f\u5426\u63a5\u5165\u7f51\u7edc\u7684\u89e3\u51b3\u529e\u6cd5"},{"location":"tools/macos/#homebrew","text":"# show a list of all your installed Homebrew packages brew list # It will pin the formula to the current version brew pin <formula>","title":"homebrew"},{"location":"tools/macos/#maven","text":"The JAVA_HOME environment variable is not defined correctly \u89e3\u51b3\u529e\u6cd5\uff1a # On macOS 10.15 Catalina and later, the default Terminal shell is zsh. For the zsh shell, we can put the environment variables at ~/.zshenv or ~/.zshrc. export JAVA_HOME = $( /usr/libexec/java_home ) # Before macOS 10.15 Catalina, the default Termina shell is bash. For the bash shell, we can put the environment variables at ~/.bash_profile or ~/.bashrc. export JAVA_HOME = $( /usr/libexec/java_home )","title":"maven\u62a5\u9519"},{"location":"tools/macos/#vpn","text":"\u5b89\u88c5openfortivpn brew install openfortivpn \u7f16\u8f91config\u6587\u4ef6 /usr/local/etc/openfortivpn/openfortivpn/config host = xxx username = xxx password = xxx trusted-cert = xxx \u767b\u5f55vpn sudo openfortivpn","title":"\u98de\u5854vpn\u5f00\u6e90\u66ff\u4ee3\u65b9\u6848"},{"location":"tools/macos/#charles","text":"\u5b89\u88c5charles \u7535\u8111\u4e0a\u5b89\u88c5\u8bc1\u4e66 help>SSL Proxying>Install Charles root Certificate \u624b\u673a\u4e0a\u5b89\u88c5\u8bc1\u4e66 help>SSL Proxying>install charles ...................browser \u8bbe\u7f6e\u6293\u5305\u57df\u540d\u70b9\u51fbproxy>SSL Proxying Settings\u6253\u5f00\u5982\u4e0b\u5f39\u6846\uff0c\u52fe\u9009ssl\u4ee3\u7406\u5f00\u5173\uff0c\u5de6\u4fa7inclide\u4e3a\u9700\u8981\u6293\u53d6\u7684\u4ee3\u7406\uff0c\u586b\u5199\u9700\u8981\u6293\u53d6https\u7684host\uff0cport\u91cc\u586b\u5199443\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u7528*\u53f7\u4ee3\u66ff ios\u5b89\u88c5\u8bc1\u4e66\u548c\u5b89\u5353\u5927\u81f4\u4e0d\u5dee\uff0c\u53ea\u662f\u6bd4\u5b89\u5353\u591a\u51fa\u4e86\u4e00\u6b65\uff0c\u5728\u5b89\u88c5\u4e0b\u8f7d\u5b8c\u8bc1\u4e66\u65f6\uff0c\u9700\u8981\u8ba4\u8bc1\uff1a\u8bbe\u7f6e\u2014>\u901a\u7528\u2014> \u5173\u4e8e\u672c\u673a\u2014>\u8bc1\u4e66\u4fe1\u4efb\u8bbe\u7f6e\uff0c\u4fe1\u4efb\u8be5\u8bc1\u4e66\u540e\u5b89\u88c5\u4fbf\u53ef\u6293https\u8bf7\u6c42\u4e86\u3002","title":"charles\u6293\u5305\u914d\u7f6e"},{"location":"tools/mkdocs/","text":"mkdocs \u6587\u6863\u76ee\u5f55\u914d\u7f6e site_name : \u6587\u6863 pages : - \u4e3b\u9875 : index.md - \u5de5\u4f5c : [ md1.md , md2.md ] - \u5173\u4e8e : about.md \u81ea\u5e26\u4e3b\u9898\u4fee\u6539 \u4fee\u6539mkdocs\u81ea\u5e26\u7684\u4e3b\u9898 \u590d\u5236mkdocs\u7684\u4e3b\u9898\u6587\u4ef6\u5939\u81f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u6587\u4ef6\u5939custom_theme\u4e0b \u4fee\u6539\u9879\u76ee\u914d\u7f6e\u6587\u4ef6mkdocs.yml theme: name: 'mkdocs' custom_dir: 'custom_theme' \u4fee\u6539custom_theme/main.html\uff0c\u6bd4\u5982\u8981\u4fee\u6539\u5e95\u90e8\u7684\u201cDocumentation built with MkDocs\u201d { %- block footer % } <hr> { %- if config.copyright % } <p> {{ config.copyright }} </p> { %- endif % } <!--<p>Documentation built with <a href = \"https://www.mkdocs.org/\" >MkDocs</a>.</p>--> { %- endblock % } \u6dfb\u52a0\u6d41\u7a0b\u56fe\u652f\u6301 \u5b89\u88c5pymdown-extensions\u6269\u5c55 pip install pymdown-extensions \u6dfb\u52a0umlconvert.js\u81f3docs/js\u4e0b\uff0c\u5185\u5bb9\u5982\u4e0b (function () { 'use strict'; /** * Targets special code or div blocks and converts them to UML. * @param {object} converter is the object that transforms the text to UML. * @param {string} className is the name of the class to target. * @param {object} settings is the settings for converter. * @return {void} */ var uml = (function (converter, className, settings) { var getFromCode = function getFromCode(parent) { // Handles <pre><code> var text = \"\"; for (var j = 0; j < parent.childNodes.length; j++) { var subEl = parent.childNodes[j]; if (subEl.tagName.toLowerCase() === \"code\") { for (var k = 0; k < subEl.childNodes.length; k++) { var child = subEl.childNodes[k]; var whitespace = /^\\s*$/; if (child.nodeName === \"#text\" && !whitespace.test(child.nodeValue)) { text = child.nodeValue; break; } } } } return text; }; var getFromDiv = function getFromDiv(parent) { // Handles <div> return parent.textContent || parent.innerText; }; // Change article to whatever element your main Markdown content lives. var article = document.querySelectorAll(\"article\"); var blocks = document.querySelectorAll(\"pre.\" + className + \",div.\" + className // Is there a settings object? );var config = settings === void 0 ? {} : settings; // Find the UML source element and get the text for (var i = 0; i < blocks.length; i++) { var parentEl = blocks[i]; var el = document.createElement(\"div\"); el.className = className; el.style.visibility = \"hidden\"; el.style.position = \"absolute\"; var text = parentEl.tagName.toLowerCase() === \"pre\" ? getFromCode(parentEl) : getFromDiv(parentEl) // Insert our new div at the end of our content to get general // typset and page sizes as our parent might be `display:none` // keeping us from getting the right sizes for our SVG. // Our new div will be hidden via \"visibility\" and take no space // via `poistion: absolute`. When we are all done, use the // original node as a reference to insert our SVG back // into the proper place, and then make our SVG visilbe again. // Lastly, clean up the old node. ; article[0].appendChild(el); var diagram = converter.parse(text); diagram.drawSVG(el, config); el.style.visibility = \"visible\"; el.style.position = \"static\"; parentEl.parentNode.insertBefore(el, parentEl); parentEl.parentNode.removeChild(parentEl); } }); (function () { var onReady = function onReady(fn) { if (document.addEventListener) { document.addEventListener(\"DOMContentLoaded\", fn); } else { document.attachEvent(\"onreadystatechange\", function () { if (document.readyState === \"interactive\") { fn(); } }); } }; onReady(function () { if (typeof flowchart !== \"undefined\") { uml(flowchart, \"uml-flowchart\"); } if (typeof Diagram !== \"undefined\") { uml(Diagram, \"uml-sequence-diagram\", { theme: \"simple\" }); } }); })(); }()); \u914d\u7f6e mkdocs 1.0\u7248\u672c\u524d\u662f markdown_extensions : - pymdownx.superfences custom_fences : name : flow class : uml-flowchart format : !!python/name:pymdownx.superfences.fence_code_format \u65b0\u7248\u672c\u4e0a\u9762\u7684\u914d\u7f6e\u4f1a\u62a5\u9519Cannot read property 'key' of null\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u9002\u7528\u4e8e\u65b0\u7248\u672c(\u672c\u7ad9\u7248\u672c1.2.2) extra_javascript : - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' - 'https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js' - 'js/umlconvert.js' markdown_extensions : - pymdownx.superfences : custom_fences : - name : flow class : uml-flowchart format : !!python/name:pymdownx.superfences.fence_div_format - name : sequence class : uml-sequence-diagram format : !!python/name:pymdownx.superfences.fence_div_format \u6548\u679c\u5c55\u793a\uff1a markdown\u6e90\u7801 ```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u663e\u793a\u6548\u679c ```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u53d1\u5e03\u6587\u6863 mkdocs gh-deploy --force \u4f1a\u751f\u6210gh-pages\u5206\u652f\uff0c\u5728github\u4e2d\u8bbe\u7f6e\u90e8\u7f72\u5206\u652f\u5373\u53ef","title":"mkdocs"},{"location":"tools/mkdocs/#mkdocs","text":"","title":"mkdocs"},{"location":"tools/mkdocs/#_1","text":"site_name : \u6587\u6863 pages : - \u4e3b\u9875 : index.md - \u5de5\u4f5c : [ md1.md , md2.md ] - \u5173\u4e8e : about.md","title":"\u6587\u6863\u76ee\u5f55\u914d\u7f6e"},{"location":"tools/mkdocs/#_2","text":"\u4fee\u6539mkdocs\u81ea\u5e26\u7684\u4e3b\u9898 \u590d\u5236mkdocs\u7684\u4e3b\u9898\u6587\u4ef6\u5939\u81f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u6587\u4ef6\u5939custom_theme\u4e0b \u4fee\u6539\u9879\u76ee\u914d\u7f6e\u6587\u4ef6mkdocs.yml theme: name: 'mkdocs' custom_dir: 'custom_theme' \u4fee\u6539custom_theme/main.html\uff0c\u6bd4\u5982\u8981\u4fee\u6539\u5e95\u90e8\u7684\u201cDocumentation built with MkDocs\u201d { %- block footer % } <hr> { %- if config.copyright % } <p> {{ config.copyright }} </p> { %- endif % } <!--<p>Documentation built with <a href = \"https://www.mkdocs.org/\" >MkDocs</a>.</p>--> { %- endblock % }","title":"\u81ea\u5e26\u4e3b\u9898\u4fee\u6539"},{"location":"tools/mkdocs/#_3","text":"\u5b89\u88c5pymdown-extensions\u6269\u5c55 pip install pymdown-extensions \u6dfb\u52a0umlconvert.js\u81f3docs/js\u4e0b\uff0c\u5185\u5bb9\u5982\u4e0b (function () { 'use strict'; /** * Targets special code or div blocks and converts them to UML. * @param {object} converter is the object that transforms the text to UML. * @param {string} className is the name of the class to target. * @param {object} settings is the settings for converter. * @return {void} */ var uml = (function (converter, className, settings) { var getFromCode = function getFromCode(parent) { // Handles <pre><code> var text = \"\"; for (var j = 0; j < parent.childNodes.length; j++) { var subEl = parent.childNodes[j]; if (subEl.tagName.toLowerCase() === \"code\") { for (var k = 0; k < subEl.childNodes.length; k++) { var child = subEl.childNodes[k]; var whitespace = /^\\s*$/; if (child.nodeName === \"#text\" && !whitespace.test(child.nodeValue)) { text = child.nodeValue; break; } } } } return text; }; var getFromDiv = function getFromDiv(parent) { // Handles <div> return parent.textContent || parent.innerText; }; // Change article to whatever element your main Markdown content lives. var article = document.querySelectorAll(\"article\"); var blocks = document.querySelectorAll(\"pre.\" + className + \",div.\" + className // Is there a settings object? );var config = settings === void 0 ? {} : settings; // Find the UML source element and get the text for (var i = 0; i < blocks.length; i++) { var parentEl = blocks[i]; var el = document.createElement(\"div\"); el.className = className; el.style.visibility = \"hidden\"; el.style.position = \"absolute\"; var text = parentEl.tagName.toLowerCase() === \"pre\" ? getFromCode(parentEl) : getFromDiv(parentEl) // Insert our new div at the end of our content to get general // typset and page sizes as our parent might be `display:none` // keeping us from getting the right sizes for our SVG. // Our new div will be hidden via \"visibility\" and take no space // via `poistion: absolute`. When we are all done, use the // original node as a reference to insert our SVG back // into the proper place, and then make our SVG visilbe again. // Lastly, clean up the old node. ; article[0].appendChild(el); var diagram = converter.parse(text); diagram.drawSVG(el, config); el.style.visibility = \"visible\"; el.style.position = \"static\"; parentEl.parentNode.insertBefore(el, parentEl); parentEl.parentNode.removeChild(parentEl); } }); (function () { var onReady = function onReady(fn) { if (document.addEventListener) { document.addEventListener(\"DOMContentLoaded\", fn); } else { document.attachEvent(\"onreadystatechange\", function () { if (document.readyState === \"interactive\") { fn(); } }); } }; onReady(function () { if (typeof flowchart !== \"undefined\") { uml(flowchart, \"uml-flowchart\"); } if (typeof Diagram !== \"undefined\") { uml(Diagram, \"uml-sequence-diagram\", { theme: \"simple\" }); } }); })(); }()); \u914d\u7f6e mkdocs 1.0\u7248\u672c\u524d\u662f markdown_extensions : - pymdownx.superfences custom_fences : name : flow class : uml-flowchart format : !!python/name:pymdownx.superfences.fence_code_format \u65b0\u7248\u672c\u4e0a\u9762\u7684\u914d\u7f6e\u4f1a\u62a5\u9519Cannot read property 'key' of null\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u9002\u7528\u4e8e\u65b0\u7248\u672c(\u672c\u7ad9\u7248\u672c1.2.2) extra_javascript : - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' - 'https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js' - 'https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js' - 'js/umlconvert.js' markdown_extensions : - pymdownx.superfences : custom_fences : - name : flow class : uml-flowchart format : !!python/name:pymdownx.superfences.fence_div_format - name : sequence class : uml-sequence-diagram format : !!python/name:pymdownx.superfences.fence_div_format \u6548\u679c\u5c55\u793a\uff1a markdown\u6e90\u7801 ```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e \u663e\u793a\u6548\u679c ```flow st=>start: \u5f00\u59cb rain?=>condition: \u4eca\u5929\u6709\u96e8\u5417\uff1f takeAnUmbrella=>operation: \u5e26\u4f1e go=>operation: \u51fa\u95e8 e=>end: \u7ed3\u675f st->rain? rain?(yes)->takeAnUmbrella->go rain?(no)->go->e","title":"\u6dfb\u52a0\u6d41\u7a0b\u56fe\u652f\u6301"},{"location":"tools/mkdocs/#_4","text":"mkdocs gh-deploy --force \u4f1a\u751f\u6210gh-pages\u5206\u652f\uff0c\u5728github\u4e2d\u8bbe\u7f6e\u90e8\u7f72\u5206\u652f\u5373\u53ef","title":"\u53d1\u5e03\u6587\u6863"},{"location":"tools/zsh/","text":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5 \u5b89\u88c5 \u53c2\u8003zsh\u5b98\u7f51https://ohmyz.sh/ \u4ecebash\u5207\u6362\u5230zsh chsh -s /bin/zsh \u5b89\u88c5power line pip3 install powerline-status --user \u5b89\u88c5PowerLine pip3 install powerline-status --user \u5b89\u88c5PowerFonts # git clone git clone https://github.com/powerline/fonts.git --depth = 1 # cd to folder cd fonts # run install shell ./install.sh \u5b89\u88c5\u597d\u5b57\u4f53\u5e93\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u8bbe\u7f6eiTerm2\u7684\u5b57\u4f53\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u662fiTerm2 -> Preferences -> Profiles -> Text\uff0c\u5728Font\u533a\u57df\u9009\u4e2dChange Font\uff0c\u7136\u540e\u627e\u5230Meslo LG\u5b57\u4f53\u3002\u6709L\u3001M\u3001S \u5b89\u88c5\u914d\u8272\u65b9\u6848 cd ~/Desktop/OpenSource git clone https://github.com/altercation/solarized cd solarized/iterm2-colors-solarized/ open . \u5728\u6253\u5f00\u7684finder\u7a97\u53e3\u4e2d\uff0c\u53cc\u51fbSolarized Dark.itermcolors\u548cSolarized Light.itermcolors\u5373\u53ef\u5b89\u88c5\u660e\u6697\u4e24\u79cd\u914d\u8272 \u518d\u6b21\u8fdb\u5165iTerm2 -> Preferences -> Profiles -> Colors -> Color Presets\u4e2d\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9\u8fd9\u4e24\u79cd\u914d\u8272\u4e2d\u7684\u4e00\u79cd\u5373\u53ef \u5b89\u88c5\u4e3b\u9898 cd ~/Desktop/OpenSource git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git cd oh-my-zsh-agnoster-fcamblor/ ./install \u5b8c\u6210\u540e\uff0c\u6267\u884c\u547d\u4ee4\u6253\u5f00zshrc\u914d\u7f6e\u6587\u4ef6\uff0c\u5c06ZSH_THEME\u540e\u9762\u7684\u5b57\u6bb5\u6539\u4e3aagnoster\u3002 vi ~/.zshrc \u5b89\u88c5\u9ad8\u4eae\u63d2\u4ef6 cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git vim ~/.zshrc \u8fd9\u65f6\u6211\u4eec\u518d\u6b21\u6253\u5f00zshrc\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\u3002\u627e\u5230plugins\uff0c\u6b64\u65f6plugins\u4e2d\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86git\uff0c\u6211\u4eec\u9700\u8981\u628a\u9ad8\u4eae\u63d2\u4ef6\u4e5f\u52a0\u4e0a\uff1a plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u63d2\u4ef6\u987a\u5e8f\uff0czsh-syntax-highlighting\u5fc5\u987b\u5728\u6700\u540e\u4e00\u4e2a\u3002 \u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u6dfb\u52a0\uff1asource ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh \u5b89\u88c5\u8865\u5168\u63d2\u4ef6zsh-autosuggestion \u4e0e\u9ad8\u4eae\u63d2\u4ef6\u540c\u6837\u7684\u5b89\u88c5\u65b9\u5f0f zsh\u8fdc\u7a0b\u767b\u5f55\u6587\u4ef6\u4e71\u7801\u95ee\u9898\u89e3\u51b3 \u5728~/.zshrc\u6587\u4ef6\u5c3e\u90e8\u6dfb\u52a0 export LC_ALL = en_US.UTF-8 export LANG = en_US.UTF-8","title":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5"},{"location":"tools/zsh/#zsh","text":"","title":"zsh\u5b89\u88c5\u4e0e\u8c03\u8bd5"},{"location":"tools/zsh/#_1","text":"\u53c2\u8003zsh\u5b98\u7f51https://ohmyz.sh/","title":"\u5b89\u88c5"},{"location":"tools/zsh/#bashzsh","text":"chsh -s /bin/zsh","title":"\u4ecebash\u5207\u6362\u5230zsh"},{"location":"tools/zsh/#power-line","text":"pip3 install powerline-status --user","title":"\u5b89\u88c5power line"},{"location":"tools/zsh/#powerline","text":"pip3 install powerline-status --user","title":"\u5b89\u88c5PowerLine"},{"location":"tools/zsh/#powerfonts","text":"# git clone git clone https://github.com/powerline/fonts.git --depth = 1 # cd to folder cd fonts # run install shell ./install.sh \u5b89\u88c5\u597d\u5b57\u4f53\u5e93\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u8bbe\u7f6eiTerm2\u7684\u5b57\u4f53\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u662fiTerm2 -> Preferences -> Profiles -> Text\uff0c\u5728Font\u533a\u57df\u9009\u4e2dChange Font\uff0c\u7136\u540e\u627e\u5230Meslo LG\u5b57\u4f53\u3002\u6709L\u3001M\u3001S","title":"\u5b89\u88c5PowerFonts"},{"location":"tools/zsh/#_2","text":"cd ~/Desktop/OpenSource git clone https://github.com/altercation/solarized cd solarized/iterm2-colors-solarized/ open . \u5728\u6253\u5f00\u7684finder\u7a97\u53e3\u4e2d\uff0c\u53cc\u51fbSolarized Dark.itermcolors\u548cSolarized Light.itermcolors\u5373\u53ef\u5b89\u88c5\u660e\u6697\u4e24\u79cd\u914d\u8272 \u518d\u6b21\u8fdb\u5165iTerm2 -> Preferences -> Profiles -> Colors -> Color Presets\u4e2d\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9\u8fd9\u4e24\u79cd\u914d\u8272\u4e2d\u7684\u4e00\u79cd\u5373\u53ef","title":"\u5b89\u88c5\u914d\u8272\u65b9\u6848"},{"location":"tools/zsh/#_3","text":"cd ~/Desktop/OpenSource git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git cd oh-my-zsh-agnoster-fcamblor/ ./install \u5b8c\u6210\u540e\uff0c\u6267\u884c\u547d\u4ee4\u6253\u5f00zshrc\u914d\u7f6e\u6587\u4ef6\uff0c\u5c06ZSH_THEME\u540e\u9762\u7684\u5b57\u6bb5\u6539\u4e3aagnoster\u3002 vi ~/.zshrc","title":"\u5b89\u88c5\u4e3b\u9898"},{"location":"tools/zsh/#_4","text":"cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git vim ~/.zshrc \u8fd9\u65f6\u6211\u4eec\u518d\u6b21\u6253\u5f00zshrc\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\u3002\u627e\u5230plugins\uff0c\u6b64\u65f6plugins\u4e2d\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86git\uff0c\u6211\u4eec\u9700\u8981\u628a\u9ad8\u4eae\u63d2\u4ef6\u4e5f\u52a0\u4e0a\uff1a plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u63d2\u4ef6\u987a\u5e8f\uff0czsh-syntax-highlighting\u5fc5\u987b\u5728\u6700\u540e\u4e00\u4e2a\u3002 \u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u6dfb\u52a0\uff1asource ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh","title":"\u5b89\u88c5\u9ad8\u4eae\u63d2\u4ef6"},{"location":"tools/zsh/#zsh-autosuggestion","text":"\u4e0e\u9ad8\u4eae\u63d2\u4ef6\u540c\u6837\u7684\u5b89\u88c5\u65b9\u5f0f","title":"\u5b89\u88c5\u8865\u5168\u63d2\u4ef6zsh-autosuggestion"},{"location":"tools/zsh/#zsh_1","text":"\u5728~/.zshrc\u6587\u4ef6\u5c3e\u90e8\u6dfb\u52a0 export LC_ALL = en_US.UTF-8 export LANG = en_US.UTF-8","title":"zsh\u8fdc\u7a0b\u767b\u5f55\u6587\u4ef6\u4e71\u7801\u95ee\u9898\u89e3\u51b3"},{"location":"tools/%E6%B8%AF%E5%8C%BAappleId%E6%B3%A8%E5%86%8C/","text":"\u6e2f\u533aappleId\u6ce8\u518c \u5206\u4e24\u6b65\uff0c\u5148\u521b\u5efa\u5927\u9646appleId\uff0c\u518d\u6539\u6210\u6e2f\u533a \u521b\u5efa\u5927\u9646appleId\u6309\u7167\u5b98\u65b9\u6307\u5f15\u81ea\u884c\u6ce8\u518c\u5373\u53ef\uff0c\u4e0b\u9762\u662fappleId\u4e2d\u56fd\u5927\u9646\u6539\u6e2f\u533a\u7684\u6d41\u7a0b \u7b2c\u4e00\u6b65\uff0c\u8fdb\u5165\u6d4f\u89c8\u5668\uff0c\u6253\u5f00\u7f51\u9875\u7248\u82f9\u679cid\u754c\u9762 https://appleid.apple.com \uff1b\u767b\u5f55\u4f60\u7684\u5927\u9646appleId \u8fdb\u5165\u8d26\u6237\u540e\u9009\u62e9\u300c\u4e2a\u4eba\u4fe1\u606f\u300d->\u300c\u56fd\u5bb6\u6216\u5730\u533a\u300d\u56fd\u5bb6\u6216\u5730\u533a\u9009\u9999\u6e2f\uff0c\u4ed8\u6b3e\u65b9\u5f0f\u9009\u65e0\uff0c\u5176\u4ed6\u4fe1\u606f\u968f\u4fbf\u5199","title":"\u6e2f\u533aappleId\u6ce8\u518c"},{"location":"tools/%E6%B8%AF%E5%8C%BAappleId%E6%B3%A8%E5%86%8C/#appleid","text":"\u5206\u4e24\u6b65\uff0c\u5148\u521b\u5efa\u5927\u9646appleId\uff0c\u518d\u6539\u6210\u6e2f\u533a \u521b\u5efa\u5927\u9646appleId\u6309\u7167\u5b98\u65b9\u6307\u5f15\u81ea\u884c\u6ce8\u518c\u5373\u53ef\uff0c\u4e0b\u9762\u662fappleId\u4e2d\u56fd\u5927\u9646\u6539\u6e2f\u533a\u7684\u6d41\u7a0b \u7b2c\u4e00\u6b65\uff0c\u8fdb\u5165\u6d4f\u89c8\u5668\uff0c\u6253\u5f00\u7f51\u9875\u7248\u82f9\u679cid\u754c\u9762 https://appleid.apple.com \uff1b\u767b\u5f55\u4f60\u7684\u5927\u9646appleId \u8fdb\u5165\u8d26\u6237\u540e\u9009\u62e9\u300c\u4e2a\u4eba\u4fe1\u606f\u300d->\u300c\u56fd\u5bb6\u6216\u5730\u533a\u300d\u56fd\u5bb6\u6216\u5730\u533a\u9009\u9999\u6e2f\uff0c\u4ed8\u6b3e\u65b9\u5f0f\u9009\u65e0\uff0c\u5176\u4ed6\u4fe1\u606f\u968f\u4fbf\u5199","title":"\u6e2f\u533aappleId\u6ce8\u518c"}]}